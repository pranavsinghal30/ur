{"ast":null,"code":"import _classCallCheck from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/src/HomePage.react.js\";\nimport * as React from \"react\";\nimport ReactSimpleMap from \"./ReactSimpleMap\";\nimport table from \"./table\";\nimport logo from \"./Picture5.png\";\nimport Header from \"./Header/Header.react\";\nimport CSVReader from 'react-csv-reader';\nimport { Page, Avatar, Icon, Grid, Card, Text, Table, Alert, Progress, colors, Dropdown, Button, StampCard, StatsCard, ProgressCard, Badge, TabbedCard, PricingCard } from \"tabler-react\";\nimport C3Chart from \"react-c3js\"; //import DownloadLink from \"react-download-link\";\n//import c3 from \"react-c3js\";\n\nimport SiteWrapper from \"./SiteWrapper.react\";\nimport { list } from \"postcss\";\nimport reactC3js from \"react-c3js\";\nimport mydata from \"./carbondata.json\";\n\nvar csv = require('csv-parser');\n\nvar fs = require('fs');\n\nvar results = []; //import CardFooter from \"../../src/components/Card/CardFooter.react\";\n//import CardBody from \"../../src/components/Card/CardBody.react\";\n\n/*onst  mydata = [\n  {country : \"China\", daily : 5731496, start_date : new Date(2020,0,20),end_date : new Date(2020,2,20),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n  {country : \"India\", daily : 1823594, start_date : new Date(2020,2,22),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"USA\", daily : 12898866, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n  {country : \"Japan\", daily : 981746, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n  {country : \"Italy\", daily : 309127/0.85, start_date : new Date(2020,2,9),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Spain\", daily : 239046/0.85, start_date : new Date(2020,2,14),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"France\", daily : 333728/0.85, start_date : new Date(2020,2,17),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Germany\", daily : 428368/0.85, start_date : new Date(2020,2,22),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"UK\", daily : 340751/0.85, start_date : new Date(2020,2,23),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Belgium\", daily :59255/0.85, start_date : new Date(2020,2,18),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Rest OF Europe\", daily : 993706/0.4, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,22),optimum_end:new Date()}\n]\n*/\n\nvar today = new Date();\nvar arr = [\"data2\"];\nvar v = [\"data1\"];\nvar daily_saving = 0;\nvar i = 0;\nvar da_sa = [];\n\nfunction getDates() {\n  d = new Date();\n  return d.getDate() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getFullYear();\n}\n\nvar st;\nmydata.forEach(function (p) {\n  if (p['end_date'] != []) {\n    var l = p['end_date'];\n    console.log(l[0] + l[1] + l[2]);\n\n    if (l[0] && l[1] && l[2]) {\n      var day = l[0];\n      var month = l[1] - 1;\n      var year = l[2];\n      p['end_date'] = new Date(year, month, day);\n    }\n  } else {\n    p['end_date'] = new Date();\n    console.log(p['end_date']);\n  }\n\n  if (p['start_date'] != []) {\n    var l = p['start_date'];\n    console.log(l[0] + l[1] + l[2]);\n\n    if (l[0] && l[1] && l[2]) {\n      var day = l[0];\n      var month = l[1];\n      var year = l[2];\n      p['start_date'] = new Date(year, month, day);\n    }\n  } else {\n    p['start_date'] = new Date();\n    console.log(p['start_date']);\n  }\n\n  if (p['optimum_start'] != []) {\n    var l = p['optimum_start'];\n    console.log(l[0] + l[1] + l[2]);\n\n    if (l[0] && l[1] && l[2]) {\n      var day = l[0];\n      var month = l[1] - 1;\n      var year = l[2];\n      p['optimum_start'] = new Date(year, month, day);\n    }\n  } else {\n    p['optimum_start'] = new Date();\n    console.log(p['optimum_start']);\n  }\n\n  if (p['optimum_end'] != []) {\n    var l = p['optimum_end'];\n    console.log(l[0] + l[1] + l[2]);\n\n    if (l[0] && l[1] && l[2]) {\n      var day = l[0];\n      var month = l[1] - 1;\n      var year = l[2];\n      p['optimum_end'] = new Date(year, month, day);\n    }\n  } else {\n    p['optimum_end'] = new Date();\n    console.log(p['optimum_end']);\n  }\n}); //console.log(new Date(2020,0,20))\n\nfor (var d = new Date(2020, 0, 14); d <= today; d.setDate(d.getDate() + 1)) {\n  arr.push(d);\n  v.push(i);\n  st = 0;\n  mydata.forEach(function (p) {\n    var lock = 0;\n    var opt = 0;\n    console.log(p['end_date']);\n\n    if (p['end_date'].getTime() >= d.getTime() && p['start_date'].getTime() <= d.getTime()) {\n      lock = (d - p['start_date']) / (1000 * 60 * 60 * 24) * p['daily'] * 0.85;\n    } else if (p['end_date'].getTime() < d.getTime()) {\n      lock = (p['end_date'] - p['start_date']) / (1000 * 60 * 60 * 24) * p['daily'] * 0.85;\n    } else if (p['start_date'].getTime() > d.getTime()) {\n      lock = 0;\n    }\n\n    if (p['optimum_end'].getTime() >= d.getTime() && p['optimum_start'].getTime() <= d.getTime()) {\n      opt = (d - p['optimum_start']) / (1000 * 60 * 60 * 24) * p['daily'] * 0.4;\n    } else if (p['end_date'].getTime() < d.getTime()) {\n      opt = (p['optimum_end'] - p['optimum_start']) / (1000 * 60 * 60 * 24) * p['daily'] * 0.4;\n    } else if (p['optimum_start'].getTime() > d.getTime()) {\n      opt = 0;\n    }\n\n    p['Total_Saved'] += lock + opt;\n    console.log(p['country'] + p['Total_Saved']);\n    st += lock + opt;\n  });\n  da_sa.push(st);\n  console.log(\"date\" + d + \" \" + st); //console.log(d)\n  //console.log(d.getTime() == new Date(2020,0,20).getTime())\n\n  if (d.getTime() == new Date(2020, 0, 20).getTime()) {\n    //china\n    daily_saving += 5731496 * 0.85; //console.log(\"in side china\")\n  }\n\n  if (d.getTime() == new Date(2020, 2, 9).getTime()) {\n    // Italy\n    daily_saving += 309127;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 14).getTime()) {\n    //spain\n    daily_saving += 239046;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 17).getTime()) {\n    //france\n    daily_saving += 333728;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //germany\n    daily_saving += 428368;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 23).getTime()) {\n    //UK\n    daily_saving += 340751;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 18).getTime()) {\n    //belgium\n    daily_saving += 59255;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //india\n    daily_saving += 1823594 * 0.85;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 28).getTime()) {\n    //USA\n    //console.log(\"USA joins\")\n    daily_saving += 12898866 * 0.40;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 20).getTime()) {\n    //china leaves\n    //console.log(\"china leaves\")\n    daily_saving -= 5731496 * 0.85;\n    daily_saving += 5731496 * 0.40;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //rest of europe \n    daily_saving += 993706;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 20).getTime()) {\n    //Japan\n    daily_saving += 981746 * 0.4;\n  }\n\n  i = i + daily_saving;\n}\n\nv.push(i);\n\nfunction readcsv() {\n  fs.createReadStream('carbondata.csv').pipe(csv()).on('data', function (data) {\n    return results.push(data);\n  }).on('end', function () {\n    console.log(results); // [\n    //   { NAME: 'Daffy Duck', AGE: '24' },\n    //   { NAME: 'Bugs Bunny', AGE: '22' }\n    // ]\n  });\n}\n\nvar estimation = 33990000000;\nvar style = {\n  position: \"absolute\",\n  top: 0,\n  // computed based on child and parent's height\n  right: 40,\n  fontSize: 28,\n  textAlign: \"center\",\n  fontWeight: \"bold\",\n  fontstyle: \"italic\",\n  color: \"rgb(50,0,133)\"\n};\nvar style1 = {\n  fontSize: 25,\n  textAlign: \"centre\",\n  fontWeight: \"bold\",\n  color: \"rgb(50,0,133)\",\n  backgroundColor: 'rgba(0,0,0,0)'\n};\n\nvar Homepage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Homepage, _React$Component);\n\n  function Homepage() {\n    var _this;\n\n    _classCallCheck(this, Homepage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Homepage).call(this));\n    _this.state = {\n      country: \"India \"\n    };\n    return _this;\n  }\n\n  _createClass(Homepage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SiteWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(Page.Content, {\n        title: \"Carbon Emission Savings during COVID-19\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        cards: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(Grid.Col, {\n        width: 6,\n        sm: 6,\n        lg: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(Card.Status, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }), React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"CO2 Emissions Saved\")), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(ProgressCard, {\n        header: this.state['country'],\n        content: \"76\",\n        progressColor: \"yellow\",\n        progressWidth: 34,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }), React.createElement(Header.H1, {\n        className: \"mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, da_sa[da_sa.length - 1].toLocaleString(navigator.language, {\n        minimumFractionDigits: 0\n      }) + \" MT\")))), React.createElement(Grid.Col, {\n        width: 6,\n        sm: 6,\n        lg: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(Card.Status, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }), React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"Total estimated CO2 emission for the year 2020\")), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(Header.H1, {\n        className: \"mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, estimation.toLocaleString(navigator.language, {\n        minimumFractionDigits: 0\n      }) + \" MT\")))), React.createElement(Grid.Col, {\n        width: 6,\n        sm: 6,\n        lg: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(Card.Status, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }), React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"Data Updated On\")), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(Header.H1, {\n        className: \"mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, getDates())))), React.createElement(Grid.Col, {\n        width: 6,\n        sm: 6,\n        lg: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(Card.Status, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }), React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, \"Percentage of Total Estimate Saved\")), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(Header.H1, {\n        className: \"mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, (da_sa[da_sa.length - 1] * 100 / estimation).toFixed(2) + \" %\"))))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, React.createElement(Grid.Col, {\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"CO2 Emission Savings\",\n        body: React.createElement(ReactSimpleMap, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(Grid.Col, {\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, \"Development Activity\")), React.createElement(C3Chart, {\n        style: {\n          height: \"10rem\"\n        },\n        data: {\n          columns: [v],\n          type: \"area\",\n          // default type of chart\n          groups: [[\"data1\", \"data2\", \"data3\"]],\n          colors: {\n            data1: colors[\"green\"]\n          },\n          names: {\n            // name of each serie\n            data1: \"CO2 savings\"\n          },\n          axes: {\n            data1: \"y2\",\n            data2: \"x1\"\n          }\n        },\n        axis: {\n          y: {\n            show: true\n          },\n          x: {\n            tick: {\n              format: \"%d/%m\"\n            },\n            padding: {\n              left: 0,\n              right: 0\n            },\n            show: true\n          }\n        },\n        legend: {\n          position: \"inset\",\n          padding: 0,\n          inset: {\n            anchor: \"top-left\",\n            x: 20,\n            y: 8,\n            step: 10\n          }\n        },\n        tooltip: {\n          format: {\n            title: function title(x) {\n              return [];\n            }\n          }\n        },\n        padding: {\n          bottom: 0,\n          left: -1,\n          right: -1\n        },\n        point: {\n          show: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }), table())), React.createElement(Grid.Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, React.createElement(CSVReader, {\n        onFileLoaded: function onFileLoaded(data, fileInfo) {\n          return console.dir(data, fileInfo);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Homepage;\n}(React.Component);\n\nexport default Homepage;","map":{"version":3,"sources":["/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/src/HomePage.react.js"],"names":["React","ReactSimpleMap","table","logo","Header","CSVReader","Page","Avatar","Icon","Grid","Card","Text","Table","Alert","Progress","colors","Dropdown","Button","StampCard","StatsCard","ProgressCard","Badge","TabbedCard","PricingCard","C3Chart","SiteWrapper","list","reactC3js","mydata","csv","require","fs","results","today","Date","arr","v","daily_saving","i","da_sa","getDates","d","getDate","getMonth","getFullYear","st","forEach","p","l","console","log","day","month","year","setDate","push","lock","opt","getTime","readcsv","createReadStream","pipe","on","data","estimation","style","position","top","right","fontSize","textAlign","fontWeight","fontstyle","color","style1","backgroundColor","Homepage","state","country","length","toLocaleString","navigator","language","minimumFractionDigits","toFixed","height","columns","type","groups","data1","names","axes","data2","y","show","x","tick","format","padding","left","inset","anchor","step","title","bottom","fileInfo","dir","Component"],"mappings":"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","sourcesContent":["// @flow\n\nimport * as React from \"react\";\nimport ReactSimpleMap from \"./ReactSimpleMap\";\nimport table from \"./table\";\nimport logo from \"./Picture5.png\";\nimport Header from \"./Header/Header.react\";\n\nimport CSVReader from 'react-csv-reader';\nimport {\n  Page,\n  Avatar,\n  Icon,\n  Grid,\n  Card,\n  Text,\n  Table,\n  Alert,\n  Progress,\n  colors,\n  Dropdown,\n  Button,\n  StampCard,\n  StatsCard,\n  ProgressCard,\n  Badge,\n  TabbedCard,\n  PricingCard\n} from \"tabler-react\";\n\nimport C3Chart from \"react-c3js\";\n//import DownloadLink from \"react-download-link\";\n//import c3 from \"react-c3js\";\nimport SiteWrapper from \"./SiteWrapper.react\";\nimport { list } from \"postcss\";\nimport reactC3js from \"react-c3js\";\nimport mydata from \"./carbondata.json\"\nconst csv = require('csv-parser')\nconst fs = require('fs')\nconst results = [];\n//import CardFooter from \"../../src/components/Card/CardFooter.react\";\n//import CardBody from \"../../src/components/Card/CardBody.react\";\n/*onst  mydata = [\n  {country : \"China\", daily : 5731496, start_date : new Date(2020,0,20),end_date : new Date(2020,2,20),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n  {country : \"India\", daily : 1823594, start_date : new Date(2020,2,22),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"USA\", daily : 12898866, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n  {country : \"Japan\", daily : 981746, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n  {country : \"Italy\", daily : 309127/0.85, start_date : new Date(2020,2,9),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Spain\", daily : 239046/0.85, start_date : new Date(2020,2,14),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"France\", daily : 333728/0.85, start_date : new Date(2020,2,17),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Germany\", daily : 428368/0.85, start_date : new Date(2020,2,22),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"UK\", daily : 340751/0.85, start_date : new Date(2020,2,23),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Belgium\", daily :59255/0.85, start_date : new Date(2020,2,18),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Rest OF Europe\", daily : 993706/0.4, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,22),optimum_end:new Date()}\n]\n*/\nvar today = new Date();\nvar arr = [\"data2\"];\nvar v = [\"data1\"];\nvar daily_saving = 0;\nvar i = 0;\nvar da_sa = [];\nfunction getDates()\n{\n  d = new Date();\n  return d.getDate()+\"/\"+(d.getMonth()+1)+\"/\"+d.getFullYear();\n}\nvar st ;\nmydata.forEach(function(p){\n    if (p['end_date'] != [] )\n    {\n      var l= p['end_date']\n      console.log(l[0]+l[1]+l[2])\n      if(l[0]&&l[1]&&l[2])\n      {\n      var day = (l[0]);\n      var month = (l[1])-1;\n      var year = (l[2]);\n      p['end_date'] = new Date(year,month,day)\n      }\n\n      \n    }\n    else \n    {\n      p['end_date'] = new Date()\n      console.log(p['end_date'])\n    }\n    if (p['start_date'] != [])\n    {\n      var l= p['start_date']\n      console.log(l[0]+l[1]+l[2])\n      if(l[0]&&l[1]&&l[2])\n      {\n      var day = (l[0]);\n      var month = (l[1]);\n      var year = (l[2]);\n      p['start_date'] = new Date(year,month,day)\n      }\n      \n    }\n    else\n    {\n      p['start_date'] = new Date()\n      console.log(p['start_date'])\n    }\n    if (p['optimum_start'] != [])\n    {\n      var l= p['optimum_start']\n      console.log(l[0]+l[1]+l[2])\n      if(l[0]&&l[1]&&l[2])\n      {\n      var day = (l[0]);\n      var month = (l[1])-1;\n      var year = (l[2]);\n      p['optimum_start'] = new Date(year,month,day)\n      }\n      \n      \n    }\n    else\n    {\n      p['optimum_start'] = new Date()\n      console.log(p['optimum_start'])\n    }\n    if (p['optimum_end'] != [])\n    {\n      var l= p['optimum_end']\n      console.log(l[0]+l[1]+l[2])\n      if(l[0]&&l[1]&&l[2])\n      {\n      var day = (l[0]);\n      var month = (l[1])-1;\n      var year = (l[2]);\n      p['optimum_end'] = new Date(year,month,day)\n      }\n      \n      \n    }\n    else\n    {\n      p['optimum_end'] = new Date()\n      console.log(p['optimum_end'])\n    }\n  })\n\n//console.log(new Date(2020,0,20))\nfor (var d = new Date(2020, 0, 14); d <= today; d.setDate(d.getDate() + 1)) {\n  arr.push(d);\n  v.push(i);\n  st = 0;\n  mydata.forEach(function(p) {\n    var lock =0;\n    var opt =0;\n    console.log(p['end_date'])\n    if (p['end_date'].getTime() >= d.getTime() && p['start_date'].getTime()<= d.getTime())\n    { lock = ((d-p['start_date'])/(1000*60*60*24))*p['daily']*0.85}\n    else if (p['end_date'].getTime() < d.getTime())\n    {\n      lock = ((p['end_date']-p['start_date'])/(1000*60*60*24))*p['daily']*0.85\n    }\n    else if (p['start_date'].getTime() > d.getTime())\n    {\n      lock = 0\n    }\n    if (p['optimum_end'].getTime() >= d.getTime() && p['optimum_start'].getTime()<= d.getTime())\n    { opt= ((d-p['optimum_start'])/(1000*60*60*24))*p['daily']*0.4}\n    else if (p['end_date'].getTime() < d.getTime())\n    {\n      opt = ((p['optimum_end']-p['optimum_start'])/(1000*60*60*24))*p['daily']*0.4\n    }\n    else if (p['optimum_start'].getTime() > d.getTime())\n    {\n      opt = 0\n    }\n    p['Total_Saved']+=(lock+opt)\n    console.log(p['country']+p['Total_Saved'])\n    st += lock+opt \n    \n  });\n  da_sa.push(st)\n  console.log(\"date\"+d+\" \"+st)\n  \n  //console.log(d)\n  //console.log(d.getTime() == new Date(2020,0,20).getTime())\n\n  if (d.getTime() == new Date(2020, 0, 20).getTime()) {\n    //china\n    daily_saving += 5731496*0.85;\n    //console.log(\"in side china\")\n  }\n  if (d.getTime() == new Date(2020, 2, 9).getTime()) {\n    // Italy\n    daily_saving += 309127;\n  }\n  if (d.getTime() == new Date(2020, 2, 14).getTime()) {\n    //spain\n    daily_saving += 239046;\n  }\n  if (d.getTime() == new Date(2020, 2, 17).getTime()) {\n    //france\n    daily_saving += 333728;\n  }\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //germany\n    daily_saving += 428368;\n  }\n  if (d.getTime() == new Date(2020, 2, 23).getTime()) {\n    //UK\n    daily_saving += 340751;\n  }\n  if (d.getTime() == new Date(2020, 2, 18).getTime()) {\n    //belgium\n    daily_saving += 59255;\n  }\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //india\n    daily_saving += 1823594*0.85;\n  }\n  if (d.getTime() == new Date(2020, 2, 28).getTime()) {\n    //USA\n    //console.log(\"USA joins\")\n    daily_saving += 12898866*0.40;\n  }\n  if (d.getTime() == new Date(2020, 2, 20).getTime()) {\n    //china leaves\n    //console.log(\"china leaves\")\n    daily_saving -= 5731496*0.85;\n    daily_saving += 5731496*0.40;\n  }\n  if (d.getTime() == new Date(2020,2,22).getTime())\n  {//rest of europe \n    daily_saving += 993706;\n\n  }\n  if (d.getTime() == new Date(2020,2,20).getTime())\n  {//Japan\n    daily_saving += 981746*0.4;\n\n  }\n  \n  i = i + daily_saving;\n}\nv.push(i)\n\nfunction readcsv()\n{\n  fs.createReadStream('carbondata.csv')\n  .pipe(csv())\n  .on('data', (data) => results.push(data))\n  .on('end', () => {\n    console.log(results);\n    // [\n    //   { NAME: 'Daffy Duck', AGE: '24' },\n    //   { NAME: 'Bugs Bunny', AGE: '22' }\n    // ]\n  })\n}\n\nvar estimation = 33990000000;\nconst style = {\n  position: \"absolute\",\n  top: 0, // computed based on child and parent's height\n  right: 40,\n  fontSize: 28,\n  textAlign: \"center\",\n  fontWeight: \"bold\",\n  fontstyle: \"italic\",\n  color : \"rgb(50,0,133)\"\n};\nconst style1 = {\n  fontSize: 25,\n  textAlign: \"centre\",\n  fontWeight: \"bold\",\n  color: \"rgb(50,0,133)\",\n  backgroundColor : 'rgba(0,0,0,0)'\n};\nclass Homepage extends React.Component{\n  constructor()\n  {\n    super();\n    this.state= { country : \"India \"}\n  }\n\n  render() {\n  \n \n  return (\n\n    <SiteWrapper>\n    <Page.Content title=\"Carbon Emission Savings during COVID-19\">\n\n      <Grid.Row cards={true}>\n      <Grid.Col width={6} sm={6} lg={6}>\n      <Card>\n          <Card.Status />\n            <Card.Header>\n              <Card.Title>CO2 Emissions Saved</Card.Title>\n            </Card.Header>\n            <Card.Body>\n            <ProgressCard\n                  header={this.state['country']}\n                  content=\"76\"\n                  progressColor=\"yellow\"\n                  progressWidth={34}\n                />\n              <Header.H1 className=\"mb-1\">{((da_sa[da_sa.length - 1])).toLocaleString(navigator.language,{ minimumFractionDigits: 0 }) + \" MT\"}</Header.H1>\n            </Card.Body>\n        </Card>\n        </Grid.Col>\n        <Grid.Col width={6} sm={6} lg={6}>\n        <Card>\n          <Card.Status />\n            <Card.Header>\n              <Card.Title>Total estimated CO2 emission for the year 2020</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Header.H1 className=\"mb-1\">{estimation.toLocaleString(navigator.language,{ minimumFractionDigits: 0 })+\" MT\"}</Header.H1>\n            </Card.Body>\n        </Card>\n        </Grid.Col>\n        <Grid.Col width={6} sm={6} lg={6}>\n        <Card>\n      <Card.Status />\n      <Card.Header>\n        <Card.Title>Data Updated On</Card.Title>\n      </Card.Header>\n      <Card.Body>\n      <Header.H1 className=\"mb-1\">{getDates()}</Header.H1>\n      </Card.Body>\n    </Card>\n\n        </Grid.Col>\n        \n        <Grid.Col width={6} sm={6} lg={6}>\n        <Card>\n          <Card.Status />\n            <Card.Header>\n              <Card.Title>Percentage of Total Estimate Saved</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Header.H1 className=\"mb-1\">{(da_sa[da_sa.length - 1]*100/estimation).toFixed(2) + \" %\"}</Header.H1>\n            </Card.Body>\n        </Card>\n          \n        </Grid.Col>\n        {/*<Grid.Col width={6} sm={4} lg={2}>\n            <StatsCard layout={1} movement={-1} total=\"621\" label=\"Products\" />\n  </Grid.Col>*/}\n        </Grid.Row>\n        <Grid.Row>\n            \n\n            <Grid.Col lg={12}>\n              <Card title=\"CO2 Emission Savings\" body={<ReactSimpleMap />} />\n            </Grid.Col>\n          </Grid.Row>\n        <Grid.Row>\n        <Grid.Col lg={12}>\n          <Card>\n            <Card.Header>\n              <Card.Title>Development Activity</Card.Title>\n            </Card.Header>\n            <C3Chart\n              style={{ height: \"10rem\" }}\n              data={{\n                columns: [v],\n                type: \"area\", // default type of chart\n                groups: [[\"data1\", \"data2\", \"data3\"]],\n                colors: {\n                  data1: colors[\"green\"],\n                },\n                names: {\n                  // name of each serie\n                  data1: \"CO2 savings\",\n                },\n                axes: { data1: \"y2\", data2: \"x1\" },\n              }}\n              axis={{\n                y: {\n                  show: true,\n                },\n                x: {\n                  tick: { format: \"%d/%m\" },\n                  padding: {\n                    left: 0,\n                    right: 0,\n                  },\n                  show: true,\n                },\n              }}\n              legend={{\n                position: \"inset\",\n                padding: 0,\n                inset: {\n                  anchor: \"top-left\",\n                  x: 20,\n                  y: 8,\n                  step: 10,\n                },\n              }}\n              tooltip={{\n                format: {\n                  title: function(x) {\n                    return [];\n                  },\n                },\n              }}\n              padding={{\n                bottom: 0,\n                left: -1,\n                right: -1,\n              }}\n              point={{\n                show: false,\n              }}\n            />\n\n            {table()}\n            </Card>\n        </Grid.Col>\n        <Grid.Col>\n        <CSVReader onFileLoaded={(data, fileInfo) => console.dir(data, fileInfo)} />\n        </Grid.Col>\n      </Grid.Row>\n\n    </Page.Content>\n  </SiteWrapper>\n  );\n}\n}\n\nexport default Homepage;\n"]},"metadata":{},"sourceType":"module"}