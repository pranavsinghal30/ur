{"ast":null,"code":"var _jsxFileName = \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/src/HomePage.react.js\";\nimport * as React from \"react\";\nimport ReactSimpleMap from \"./ReactSimpleMap\";\nimport table from \"./table\";\nimport logo from \"./Picture5.png\";\nimport Header from \"./Header/Header.react\";\nimport CSVReader from 'react-csv-reader';\nimport { Page, Avatar, Icon, Grid, Card, Text, Table, Alert, Progress, colors, Dropdown, Button, StampCard, StatsCard, ProgressCard, Badge, TabbedCard, PricingCard } from \"tabler-react\";\nimport C3Chart from \"react-c3js\"; //import DownloadLink from \"react-download-link\";\n//import c3 from \"react-c3js\";\n\nimport SiteWrapper from \"./SiteWrapper.react\";\nimport { list } from \"postcss\";\nimport reactC3js from \"react-c3js\";\nimport mydata from \"./carbondata.json\";\n\nvar csv = require('csv-parser');\n\nvar fs = require('fs');\n\nvar results = []; //import CardFooter from \"../../src/components/Card/CardFooter.react\";\n//import CardBody from \"../../src/components/Card/CardBody.react\";\n\n/*onst  mydata = [\n  {country : \"China\", daily : 5731496, start_date : new Date(2020,0,20),end_date : new Date(2020,2,20),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n  {country : \"India\", daily : 1823594, start_date : new Date(2020,2,22),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"USA\", daily : 12898866, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n  {country : \"Japan\", daily : 981746, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n  {country : \"Italy\", daily : 309127/0.85, start_date : new Date(2020,2,9),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Spain\", daily : 239046/0.85, start_date : new Date(2020,2,14),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"France\", daily : 333728/0.85, start_date : new Date(2020,2,17),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Germany\", daily : 428368/0.85, start_date : new Date(2020,2,22),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"UK\", daily : 340751/0.85, start_date : new Date(2020,2,23),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Belgium\", daily :59255/0.85, start_date : new Date(2020,2,18),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Rest OF Europe\", daily : 993706/0.4, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,22),optimum_end:new Date()}\n]\n*/\n\nvar today = new Date();\nvar arr = [\"data2\"];\nvar v = [\"data1\"];\nvar daily_saving = 0;\nvar i = 0;\nvar da_sa = [];\n\nfunction getDates() {\n  d = new Date();\n  return d.getDate() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getFullYear();\n}\n\nvar st;\nmydata.forEach(function (p) {\n  console.log(\"datapoint\" + p['country'] + p['end_date'] + p['start_date'] + p['optimum_start'] + p['optimum_end']);\n\n  if (p['end_date'].length > 0) {\n    var l = p['end_date'];\n    console.log(\"inside if end\" + l[0] + l[1] + l[2]);\n\n    if (l[0] && l[1] && l[2]) {\n      var year = l[0];\n      var month = l[1];\n      var day = l[2];\n      p['end_date'] = new Date(year, month, day);\n    }\n  } else {\n    p['end_date'] = new Date();\n    console.log(\"else end \" + p['end_date']);\n  }\n\n  if (p['start_date'].length > 0) {\n    var l = p['start_date'];\n    console.log(\"inside if start\" + l[0] + l[1] + l[2]);\n\n    if (l[0] && l[1] && l[2]) {\n      var year = l[0];\n      var month = l[1];\n      var day = l[2];\n      p['start_date'] = new Date(year, month, day);\n\n      if (day == 20 && month == 0) {\n        p['start_date'] = new Date(2020, 0, 20);\n      }\n    }\n  } else {\n    p['start_date'] = new Date();\n    console.log(\"else start \" + p['start_date']);\n  }\n\n  if (p['optimum_start'].length > 0) {\n    var l = p['optimum_start'];\n    console.log(\"inside if optistart\" + l[0] + l[1] + l[2]);\n\n    if (l[0] && l[1] && l[2]) {\n      var year = l[0];\n      var month = l[1];\n      var day = l[2];\n      p['optimum_start'] = new Date(year, month, day);\n    }\n  } else {\n    p['optimum_start'] = new Date();\n    console.log(\"else opti start \" + p['optimum_start']);\n  }\n\n  if (p['optimum_end'].length > 0) {\n    var l = p['optimum_end'];\n    console.log(\"inside if optiend\"[0] + l[1] + l[2]);\n\n    if (l[0] && l[1] && l[2]) {\n      var year = l[0];\n      var month = l[1];\n      var day = l[2];\n      p['optimum_end'] = new Date(year, month, day);\n    }\n  } else {\n    p['optimum_end'] = new Date();\n    console.log(\"else opti end \" + p['optimum_end']);\n  }\n\n  console.log(\"datapoint2\" + p['country'] + p['end_date'] + p['start_date'] + p['optimum_start'] + p['optimum_end']);\n}); //console.log(new Date(2020,0,20))\n\nfor (var d = new Date(2020, 0, 14); d <= today; d.setDate(d.getDate() + 1)) {\n  arr.push(d);\n  v.push(i);\n  st = 0;\n  mydata.forEach(function (p) {\n    var lock = 0;\n    var opt = 0; //console.log(\"datapoint\"+p['country']+(p['end_date'] instanceof Date)+(p['start_date'] instanceof Date)+(p['optimum_start']instanceof Date)+(p['optimum_end']instanceof Date))\n\n    if (p['end_date'].getTime() >= d.getTime() && p['start_date'].getTime() <= d.getTime()) {\n      lock = (d - p['start_date']) / (1000 * 60 * 60 * 24) * p['daily'] * 0.85;\n    } else if (p['end_date'].getTime() < d.getTime()) {\n      lock = (p['end_date'] - p['start_date']) / (1000 * 60 * 60 * 24) * p['daily'] * 0.85;\n    } else if (p['start_date'].getTime() > d.getTime()) {\n      lock = 0;\n    }\n\n    if (p['optimum_end'].getTime() >= d.getTime() && p['optimum_start'].getTime() <= d.getTime()) {\n      opt = (d - p['optimum_start']) / (1000 * 60 * 60 * 24) * p['daily'] * 0.4;\n    } else if (p['end_date'].getTime() < d.getTime()) {\n      opt = (p['optimum_end'] - p['optimum_start']) / (1000 * 60 * 60 * 24) * p['daily'] * 0.4;\n    } else if (p['optimum_start'].getTime() > d.getTime()) {\n      opt = 0;\n    }\n\n    p['Total_Saved'] += lock + opt;\n    console.log(\"country and total saved\" + p['country'] + p['Total_Saved']);\n    st += lock + opt;\n  });\n  da_sa.push(st);\n  console.log(\"date\" + d + \" \" + st); //console.log(d)\n  //console.log(d.getTime() == new Date(2020,0,20).getTime())\n\n  if (d.getTime() == new Date(2020, 0, 20).getTime()) {\n    //china\n    daily_saving += 5731496 * 0.85; //console.log(\"in side china\")\n  }\n\n  if (d.getTime() == new Date(2020, 2, 9).getTime()) {\n    // Italy\n    daily_saving += 309127;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 14).getTime()) {\n    //spain\n    daily_saving += 239046;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 17).getTime()) {\n    //france\n    daily_saving += 333728;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //germany\n    daily_saving += 428368;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 23).getTime()) {\n    //UK\n    daily_saving += 340751;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 18).getTime()) {\n    //belgium\n    daily_saving += 59255;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //india\n    daily_saving += 1823594 * 0.85;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 28).getTime()) {\n    //USA\n    //console.log(\"USA joins\")\n    daily_saving += 12898866 * 0.40;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 20).getTime()) {\n    //china leaves\n    //console.log(\"china leaves\")\n    daily_saving -= 5731496 * 0.85;\n    daily_saving += 5731496 * 0.40;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //rest of europe \n    daily_saving += 993706;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 20).getTime()) {\n    //Japan\n    daily_saving += 981746 * 0.4;\n  }\n\n  i = i + daily_saving;\n}\n\nv.push(i);\n\nfunction readcsv() {\n  fs.createReadStream('carbondata.csv').pipe(csv()).on('data', function (data) {\n    return results.push(data);\n  }).on('end', function () {\n    console.log(results); // [\n    //   { NAME: 'Daffy Duck', AGE: '24' },\n    //   { NAME: 'Bugs Bunny', AGE: '22' }\n    // ]\n  });\n}\n\nvar estimation = 33990000000;\nvar style = {\n  position: \"absolute\",\n  top: 0,\n  // computed based on child and parent's height\n  right: 40,\n  fontSize: 28,\n  textAlign: \"center\",\n  fontWeight: \"bold\",\n  fontstyle: \"italic\",\n  color: \"rgb(50,0,133)\"\n};\nvar style1 = {\n  fontSize: 25,\n  textAlign: \"centre\",\n  fontWeight: \"bold\",\n  color: \"rgb(50,0,133)\",\n  backgroundColor: 'rgba(0,0,0,0)'\n};\n\nfunction home() {\n  return React.createElement(SiteWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, React.createElement(Page.Content, {\n    title: \"Carbon Emission Savings during COVID-19\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    cards: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, React.createElement(Grid.Col, {\n    width: 6,\n    sm: 6,\n    lg: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, React.createElement(Card.Status, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }), React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, \"CO2 Emissions Saved\")), React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, React.createElement(ProgressCard, {\n    header: this.state['country'],\n    content: \"76\",\n    progressColor: \"yellow\",\n    progressWidth: 34,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }), React.createElement(Header.H1, {\n    className: \"mb-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, da_sa[da_sa.length - 1].toLocaleString(navigator.language, {\n    minimumFractionDigits: 0\n  }) + \" MT\")))), React.createElement(Grid.Col, {\n    width: 6,\n    sm: 6,\n    lg: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }, React.createElement(Card.Status, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }), React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, \"Total estimated CO2 emission for the year 2020\")), React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, React.createElement(Header.H1, {\n    className: \"mb-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, estimation.toLocaleString(navigator.language, {\n    minimumFractionDigits: 0\n  }) + \" MT\")))), React.createElement(Grid.Col, {\n    width: 6,\n    sm: 6,\n    lg: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, React.createElement(Card.Status, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }), React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, \"Data Updated On\")), React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }, React.createElement(Header.H1, {\n    className: \"mb-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }, getDates())))), React.createElement(Grid.Col, {\n    width: 6,\n    sm: 6,\n    lg: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }, React.createElement(Card.Status, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }), React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }, \"Percentage of Total Estimate Saved\")), React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }, React.createElement(Header.H1, {\n    className: \"mb-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, (da_sa[da_sa.length - 1] * 100 / estimation).toFixed(2) + \" %\"))))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  }, React.createElement(Grid.Col, {\n    lg: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  }, React.createElement(Card, {\n    title: \"CO2 Emission Savings\",\n    body: React.createElement(ReactSimpleMap, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }, React.createElement(Grid.Col, {\n    lg: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360\n    },\n    __self: this\n  }, \"Development Activity\")), React.createElement(C3Chart, {\n    style: {\n      height: \"10rem\"\n    },\n    data: {\n      columns: [v],\n      type: \"area\",\n      // default type of chart\n      groups: [[\"data1\", \"data2\", \"data3\"]],\n      colors: {\n        data1: colors[\"green\"]\n      },\n      names: {\n        // name of each serie\n        data1: \"CO2 savings\"\n      },\n      axes: {\n        data1: \"y2\",\n        data2: \"x1\"\n      }\n    },\n    axis: {\n      y: {\n        show: true\n      },\n      x: {\n        tick: {\n          format: \"%d/%m\"\n        },\n        padding: {\n          left: 0,\n          right: 0\n        },\n        show: true\n      }\n    },\n    legend: {\n      position: \"inset\",\n      padding: 0,\n      inset: {\n        anchor: \"top-left\",\n        x: 20,\n        y: 8,\n        step: 10\n      }\n    },\n    tooltip: {\n      format: {\n        title: function title(x) {\n          return [];\n        }\n      }\n    },\n    padding: {\n      bottom: 0,\n      left: -1,\n      right: -1\n    },\n    point: {\n      show: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }), table())), React.createElement(Grid.Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420\n    },\n    __self: this\n  }, React.createElement(CSVReader, {\n    onFileLoaded: function onFileLoaded(data, fileInfo) {\n      return console.dir(data, fileInfo);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421\n    },\n    __self: this\n  })))));\n}\n\nexport default home;","map":{"version":3,"sources":["/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/src/HomePage.react.js"],"names":["React","ReactSimpleMap","table","logo","Header","CSVReader","Page","Avatar","Icon","Grid","Card","Text","Table","Alert","Progress","colors","Dropdown","Button","StampCard","StatsCard","ProgressCard","Badge","TabbedCard","PricingCard","C3Chart","SiteWrapper","list","reactC3js","mydata","csv","require","fs","results","today","Date","arr","v","daily_saving","i","da_sa","getDates","d","getDate","getMonth","getFullYear","st","forEach","p","console","log","length","l","year","month","day","setDate","push","lock","opt","getTime","readcsv","createReadStream","pipe","on","data","estimation","style","position","top","right","fontSize","textAlign","fontWeight","fontstyle","color","style1","backgroundColor","home","state","toLocaleString","navigator","language","minimumFractionDigits","toFixed","height","columns","type","groups","data1","names","axes","data2","y","show","x","tick","format","padding","left","inset","anchor","step","title","bottom","fileInfo","dir"],"mappings":"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","sourcesContent":["// @flow\n\nimport * as React from \"react\";\nimport ReactSimpleMap from \"./ReactSimpleMap\";\nimport table from \"./table\";\nimport logo from \"./Picture5.png\";\nimport Header from \"./Header/Header.react\";\n\nimport CSVReader from 'react-csv-reader';\nimport {\n  Page,\n  Avatar,\n  Icon,\n  Grid,\n  Card,\n  Text,\n  Table,\n  Alert,\n  Progress,\n  colors,\n  Dropdown,\n  Button,\n  StampCard,\n  StatsCard,\n  ProgressCard,\n  Badge,\n  TabbedCard,\n  PricingCard\n} from \"tabler-react\";\n\nimport C3Chart from \"react-c3js\";\n//import DownloadLink from \"react-download-link\";\n//import c3 from \"react-c3js\";\nimport SiteWrapper from \"./SiteWrapper.react\";\nimport { list } from \"postcss\";\nimport reactC3js from \"react-c3js\";\nimport mydata from \"./carbondata.json\"\nconst csv = require('csv-parser')\nconst fs = require('fs')\nconst results = [];\n//import CardFooter from \"../../src/components/Card/CardFooter.react\";\n//import CardBody from \"../../src/components/Card/CardBody.react\";\n/*onst  mydata = [\n  {country : \"China\", daily : 5731496, start_date : new Date(2020,0,20),end_date : new Date(2020,2,20),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n  {country : \"India\", daily : 1823594, start_date : new Date(2020,2,22),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"USA\", daily : 12898866, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n  {country : \"Japan\", daily : 981746, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n  {country : \"Italy\", daily : 309127/0.85, start_date : new Date(2020,2,9),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Spain\", daily : 239046/0.85, start_date : new Date(2020,2,14),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"France\", daily : 333728/0.85, start_date : new Date(2020,2,17),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Germany\", daily : 428368/0.85, start_date : new Date(2020,2,22),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"UK\", daily : 340751/0.85, start_date : new Date(2020,2,23),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Belgium\", daily :59255/0.85, start_date : new Date(2020,2,18),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Rest OF Europe\", daily : 993706/0.4, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,22),optimum_end:new Date()}\n]\n*/\nvar today = new Date();\nvar arr = [\"data2\"];\nvar v = [\"data1\"];\nvar daily_saving = 0;\nvar i = 0;\nvar da_sa = [];\nfunction getDates()\n{\n  d = new Date();\n  return d.getDate()+\"/\"+(d.getMonth()+1)+\"/\"+d.getFullYear();\n}\nvar st ;\nmydata.forEach(function(p){\n  console.log(\"datapoint\"+p['country']+p['end_date']+p['start_date']+p['optimum_start']+p['optimum_end'])\n    if (p['end_date'].length >0 )\n    {\n      var l= p['end_date']\n      console.log(\"inside if end\"+l[0]+l[1]+l[2])\n      if(l[0]&&l[1]&&l[2])\n      {\n      var year = l[0];\n      var month = l[1];\n      var day = l[2];\n      p['end_date'] = new Date(year,month,day)\n      }\n\n      \n    }\n    else \n    {\n      p['end_date'] = new Date()\n      console.log(\"else end \"+p['end_date'])\n    }\n    if (p['start_date'].length >0)\n    {\n      var l= p['start_date']\n      console.log(\"inside if start\"+l[0]+l[1]+l[2])\n      if(l[0]&&l[1]&&l[2])\n      {\n      var year = l[0];\n      var month = l[1];\n      var day = l[2];\n      p['start_date'] = new Date(year,month,day)\n      if (day == 20 &&month == 0)\n      {\n        p['start_date'] = new Date(2020,0,20)\n      }\n      }\n      \n    }\n    else\n    {\n      p['start_date'] = new Date()\n      console.log(\"else start \"+p['start_date'])\n    }\n    if (p['optimum_start'].length >0)\n    {\n      var l= p['optimum_start']\n      console.log(\"inside if optistart\"+l[0]+l[1]+l[2])\n      if(l[0]&&l[1]&&l[2])\n      {\n      var year = l[0];\n      var month = l[1];\n      var day = l[2];\n      p['optimum_start'] = new Date(year,month,day)\n      }\n      \n      \n    }\n    else\n    {\n      p['optimum_start'] = new Date()\n      console.log(\"else opti start \"+p['optimum_start'])\n    }\n    if (p['optimum_end'].length>0)\n    {\n      var l= p['optimum_end']\n      console.log(\"inside if optiend\"[0]+l[1]+l[2])\n      if(l[0]&&l[1]&&l[2])\n      {\n      var year = l[0];\n      var month = l[1];\n      var day = l[2];\n      p['optimum_end'] = new Date(year,month,day)\n      }\n      \n      \n    }\n    else\n    {\n      p['optimum_end'] = new Date()\n      console.log(\"else opti end \"+p['optimum_end'])\n    }\n    console.log(\"datapoint2\"+p['country']+p['end_date']+p['start_date']+p['optimum_start']+p['optimum_end'])\n  })\n\n//console.log(new Date(2020,0,20))\nfor (var d = new Date(2020, 0, 14); d <= today; d.setDate(d.getDate() + 1)) {\n  arr.push(d);\n  v.push(i);\n  st = 0;\n  mydata.forEach(function(p) {\n    var lock =0;\n    var opt =0;\n    //console.log(\"datapoint\"+p['country']+(p['end_date'] instanceof Date)+(p['start_date'] instanceof Date)+(p['optimum_start']instanceof Date)+(p['optimum_end']instanceof Date))\n    if (p['end_date'].getTime() >= d.getTime() && p['start_date'].getTime()<= d.getTime())\n    { lock = ((d-p['start_date'])/(1000*60*60*24))*p['daily']*0.85}\n    else if (p['end_date'].getTime() < d.getTime())\n    {\n      lock = ((p['end_date']-p['start_date'])/(1000*60*60*24))*p['daily']*0.85\n    }\n    else if (p['start_date'].getTime() > d.getTime())\n    {\n      lock = 0\n    }\n    if (p['optimum_end'].getTime() >= d.getTime() && p['optimum_start'].getTime()<= d.getTime())\n    { opt= ((d-p['optimum_start'])/(1000*60*60*24))*p['daily']*0.4}\n    else if (p['end_date'].getTime() < d.getTime())\n    {\n      opt = ((p['optimum_end']-p['optimum_start'])/(1000*60*60*24))*p['daily']*0.4\n    }\n    else if (p['optimum_start'].getTime() > d.getTime())\n    {\n      opt = 0\n    }\n    p['Total_Saved']+=(lock+opt)\n    console.log(\"country and total saved\"+p['country']+p['Total_Saved'])\n    st += lock+opt \n    \n  });\n  da_sa.push(st)\n  console.log(\"date\"+d+\" \"+st)\n  \n  //console.log(d)\n  //console.log(d.getTime() == new Date(2020,0,20).getTime())\n\n  if (d.getTime() == new Date(2020, 0, 20).getTime()) {\n    //china\n    daily_saving += 5731496*0.85;\n    //console.log(\"in side china\")\n  }\n  if (d.getTime() == new Date(2020, 2, 9).getTime()) {\n    // Italy\n    daily_saving += 309127;\n  }\n  if (d.getTime() == new Date(2020, 2, 14).getTime()) {\n    //spain\n    daily_saving += 239046;\n  }\n  if (d.getTime() == new Date(2020, 2, 17).getTime()) {\n    //france\n    daily_saving += 333728;\n  }\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //germany\n    daily_saving += 428368;\n  }\n  if (d.getTime() == new Date(2020, 2, 23).getTime()) {\n    //UK\n    daily_saving += 340751;\n  }\n  if (d.getTime() == new Date(2020, 2, 18).getTime()) {\n    //belgium\n    daily_saving += 59255;\n  }\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //india\n    daily_saving += 1823594*0.85;\n  }\n  if (d.getTime() == new Date(2020, 2, 28).getTime()) {\n    //USA\n    //console.log(\"USA joins\")\n    daily_saving += 12898866*0.40;\n  }\n  if (d.getTime() == new Date(2020, 2, 20).getTime()) {\n    //china leaves\n    //console.log(\"china leaves\")\n    daily_saving -= 5731496*0.85;\n    daily_saving += 5731496*0.40;\n  }\n  if (d.getTime() == new Date(2020,2,22).getTime())\n  {//rest of europe \n    daily_saving += 993706;\n\n  }\n  if (d.getTime() == new Date(2020,2,20).getTime())\n  {//Japan\n    daily_saving += 981746*0.4;\n\n  }\n  \n  i = i + daily_saving;\n}\nv.push(i)\n\nfunction readcsv()\n{\n  fs.createReadStream('carbondata.csv')\n  .pipe(csv())\n  .on('data', (data) => results.push(data))\n  .on('end', () => {\n    console.log(results);\n    // [\n    //   { NAME: 'Daffy Duck', AGE: '24' },\n    //   { NAME: 'Bugs Bunny', AGE: '22' }\n    // ]\n  })\n}\n\nvar estimation = 33990000000;\nconst style = {\n  position: \"absolute\",\n  top: 0, // computed based on child and parent's height\n  right: 40,\n  fontSize: 28,\n  textAlign: \"center\",\n  fontWeight: \"bold\",\n  fontstyle: \"italic\",\n  color : \"rgb(50,0,133)\"\n};\nconst style1 = {\n  fontSize: 25,\n  textAlign: \"centre\",\n  fontWeight: \"bold\",\n  color: \"rgb(50,0,133)\",\n  backgroundColor : 'rgba(0,0,0,0)'\n};\nfunction home(){\n \n  return (\n\n    <SiteWrapper>\n    <Page.Content title=\"Carbon Emission Savings during COVID-19\">\n\n      <Grid.Row cards={true}>\n      <Grid.Col width={6} sm={6} lg={6}>\n      <Card>\n          <Card.Status />\n            <Card.Header>\n              <Card.Title>CO2 Emissions Saved</Card.Title>\n            </Card.Header>\n            <Card.Body>\n            <ProgressCard\n                  header={this.state['country']}\n                  content=\"76\"\n                  progressColor=\"yellow\"\n                  progressWidth={34}\n                />\n              <Header.H1 className=\"mb-1\">{((da_sa[da_sa.length - 1])).toLocaleString(navigator.language,{ minimumFractionDigits: 0 }) + \" MT\"}</Header.H1>\n            </Card.Body>\n        </Card>\n        </Grid.Col>\n        <Grid.Col width={6} sm={6} lg={6}>\n        <Card>\n          <Card.Status />\n            <Card.Header>\n              <Card.Title>Total estimated CO2 emission for the year 2020</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Header.H1 className=\"mb-1\">{estimation.toLocaleString(navigator.language,{ minimumFractionDigits: 0 })+\" MT\"}</Header.H1>\n            </Card.Body>\n        </Card>\n        </Grid.Col>\n        <Grid.Col width={6} sm={6} lg={6}>\n        <Card>\n      <Card.Status />\n      <Card.Header>\n        <Card.Title>Data Updated On</Card.Title>\n      </Card.Header>\n      <Card.Body>\n      <Header.H1 className=\"mb-1\">{getDates()}</Header.H1>\n      </Card.Body>\n    </Card>\n\n        </Grid.Col>\n        \n        <Grid.Col width={6} sm={6} lg={6}>\n        <Card>\n          <Card.Status />\n            <Card.Header>\n              <Card.Title>Percentage of Total Estimate Saved</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Header.H1 className=\"mb-1\">{(da_sa[da_sa.length - 1]*100/estimation).toFixed(2) + \" %\"}</Header.H1>\n            </Card.Body>\n        </Card>\n          \n        </Grid.Col>\n        {/*<Grid.Col width={6} sm={4} lg={2}>\n            <StatsCard layout={1} movement={-1} total=\"621\" label=\"Products\" />\n  </Grid.Col>*/}\n        </Grid.Row>\n        <Grid.Row>\n            \n\n            <Grid.Col lg={12}>\n              <Card title=\"CO2 Emission Savings\" body={<ReactSimpleMap />} />\n            </Grid.Col>\n          </Grid.Row>\n        <Grid.Row>\n        <Grid.Col lg={12}>\n          <Card>\n            <Card.Header>\n              <Card.Title>Development Activity</Card.Title>\n            </Card.Header>\n            <C3Chart\n              style={{ height: \"10rem\" }}\n              data={{\n                columns: [v],\n                type: \"area\", // default type of chart\n                groups: [[\"data1\", \"data2\", \"data3\"]],\n                colors: {\n                  data1: colors[\"green\"],\n                },\n                names: {\n                  // name of each serie\n                  data1: \"CO2 savings\",\n                },\n                axes: { data1: \"y2\", data2: \"x1\" },\n              }}\n              axis={{\n                y: {\n                  show: true,\n                },\n                x: {\n                  tick: { format: \"%d/%m\" },\n                  padding: {\n                    left: 0,\n                    right: 0,\n                  },\n                  show: true,\n                },\n              }}\n              legend={{\n                position: \"inset\",\n                padding: 0,\n                inset: {\n                  anchor: \"top-left\",\n                  x: 20,\n                  y: 8,\n                  step: 10,\n                },\n              }}\n              tooltip={{\n                format: {\n                  title: function(x) {\n                    return [];\n                  },\n                },\n              }}\n              padding={{\n                bottom: 0,\n                left: -1,\n                right: -1,\n              }}\n              point={{\n                show: false,\n              }}\n            />\n\n            {table()}\n            </Card>\n        </Grid.Col>\n        <Grid.Col>\n        <CSVReader onFileLoaded={(data, fileInfo) => console.dir(data, fileInfo)} />\n        </Grid.Col>\n      </Grid.Row>\n\n    </Page.Content>\n  </SiteWrapper>\n  );\n}\n\n\nexport default home;\n"]},"metadata":{},"sourceType":"module"}