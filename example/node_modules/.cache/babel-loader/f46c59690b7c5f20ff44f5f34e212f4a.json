{"ast":null,"code":"import _classCallCheck from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/src/HomePage.react.js\";\nimport * as React from \"react\";\nimport ReactSimpleMap from \"./ReactSimpleMap\";\nimport table from \"./table\";\nimport Header from \"./Header/Header.react\";\nimport { Page, Avatar, Icon, Grid, Card, Text, Table, Alert, Progress, colors, Dropdown, Button, StampCard, StatsCard, ProgressCard, Badge, TabbedCard, PricingCard } from \"tabler-react\";\nimport C3Chart from \"react-c3js\"; //import DownloadLink from \"react-download-link\";\n//import c3 from \"react-c3js\";\n\nimport SiteWrapper from \"./SiteWrapper.react\";\nimport mydata from \"./carbondata.json\";\n\nvar csv = require('csv-parser');\n\nvar fs = require('fs');\n\nvar results = []; //import CardFooter from \"../../src/components/Card/CardFooter.react\";\n//import CardBody from \"../../src/components/Card/CardBody.react\";\n\n/*onst  mydata = [\n  {country : \"China\", daily : 5731496, start_date : new Date(2020,0,20),end_date : new Date(2020,2,20),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n  {country : \"India\", daily : 1823594, start_date : new Date(2020,2,22),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"USA\", daily : 12898866, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n  {country : \"Japan\", daily : 981746, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n  {country : \"Italy\", daily : 309127/0.85, start_date : new Date(2020,2,9),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Spain\", daily : 239046/0.85, start_date : new Date(2020,2,14),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"France\", daily : 333728/0.85, start_date : new Date(2020,2,17),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Germany\", daily : 428368/0.85, start_date : new Date(2020,2,22),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"UK\", daily : 340751/0.85, start_date : new Date(2020,2,23),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Belgium\", daily :59255/0.85, start_date : new Date(2020,2,18),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Rest OF Europe\", daily : 993706/0.4, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,22),optimum_end:new Date()}\n]\n*/\n//console.log(new Date(2020,0,20))\n\n/*for (var d = new Date(2020, 0, 14); d <= today; d.setDate(d.getDate() + 1)) {\n  arr.push(d);\n  v.push(i);\n  st = 0;\n  console.log(\"date \"+d.getHours())\n  mydata.forEach(function(p) {\n    var lock =0;\n    var opt =0;\n    console.log(\"date \"+ getDates(d))\n    //console.log(\"datapoint\"+p['country']+(p['end_date'] instanceof Date)+(p['start_date'] instanceof Date)+(p['optimum_start']instanceof Date)+(p['optimum_end']instanceof Date))\n    //console.log(\"datapoint\"+getDates(p['end_date'])+getDates(p['start_date'])+getDates(p['optimum_start'])+getDates(p['optimum_end']))\n    \n    if (p['end_date'].getTime() >= d.getTime() && p['start_date'].getTime()<= d.getTime())\n    { lock = ((d-p['start_date'])/(1000*60*60*24))*p['daily']*0.85\n      console.log(\"firstcase lock\"+lock)}\n    else if (p['end_date'].getTime() < d.getTime())\n    {\n      lock = ((p['end_date']-p['start_date'])/(1000*60*60*24))*p['daily']*0.85\n      console.log(\"secondcase lock\"+lock)\n    }\n    else if (p['start_date'].getTime() > d.getTime())\n    {\n      lock = 0\n      console.log(\"thirdcase lock\"+lock)\n    }\n    if (p['optimum_end'].getTime() >= d.getTime() && p['optimum_start'].getTime()<= d.getTime())\n    { opt= ((d-p['optimum_start'])/(1000*60*60*24))*p['daily']*0.4\n    console.log(\"firstcase opti\"+opt)}\n    else if (p['end_date'].getTime() < d.getTime())\n    {\n      opt = ((p['optimum_end']-p['optimum_start'])/(1000*60*60*24))*p['daily']*0.4\n      console.log(\"secondcase opti\"+opt)\n    }\n    else if (p['optimum_start'].getTime() > d.getTime())\n    {\n      opt = 0\n      console.log(\"thirdcase opti\"+opt)\n    }\n    p['Total_Saved']+=(lock+opt)\n    if (d.getTime() == (new Date()).getTime())\n    {console.log(\"country and total saved\"+p['country']+p['Total_Saved'])}\n    st += lock+opt \n    \n  });\n  da_sa.push(st)\n  console.log(\"date\"+d+\" \"+st)\n  \n  //console.log(d)\n  //console.log(d.getTime() == new Date(2020,0,20).getTime())\n\n  if (d.getTime() == new Date(2020, 0, 20).getTime()) {\n    //china\n    daily_saving += 5731496*0.85;\n    //console.log(\"in side china\")\n  }\n  if (d.getTime() == new Date(2020, 2, 9).getTime()) {\n    // Italy\n    daily_saving += 309127;\n  }\n  if (d.getTime() == new Date(2020, 2, 14).getTime()) {\n    //spain\n    daily_saving += 239046;\n  }\n  if (d.getTime() == new Date(2020, 2, 17).getTime()) {\n    //france\n    daily_saving += 333728;\n  }\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //germany\n    daily_saving += 428368;\n  }\n  if (d.getTime() == new Date(2020, 2, 23).getTime()) {\n    //UK\n    daily_saving += 340751;\n  }\n  if (d.getTime() == new Date(2020, 2, 18).getTime()) {\n    //belgium\n    daily_saving += 59255;\n  }\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //india\n    daily_saving += 1823594*0.85;\n  }\n  if (d.getTime() == new Date(2020, 2, 28).getTime()) {\n    //USA\n    //console.log(\"USA joins\")\n    daily_saving += 12898866*0.40;\n  }\n  if (d.getTime() == new Date(2020, 2, 20).getTime()) {\n    //china leaves\n    //console.log(\"china leaves\")\n    daily_saving -= 5731496*0.85;\n    daily_saving += 5731496*0.40;\n  }\n  if (d.getTime() == new Date(2020,2,22).getTime())\n  {//rest of europe \n    daily_saving += 993706;\n\n  }\n  if (d.getTime() == new Date(2020,2,20).getTime())\n  {//Japan\n    daily_saving += 981746*0.4;\n\n  }\n  \n  i = i + daily_saving;\n}\n*/\n\nvar arr = [\"data2\"];\nvar v = [\"data1\"];\nvar daily_saving = 0;\nvar i = 0;\nvar da_sa = [];\nvar st = 0;\nmydata.forEach(function (p) {\n  //console.log(\"datapoint\"+p['country']+p['end_date']+p['start_date']+p['optimum_start']+p['optimum_end'])\n  if (p['end_date'].length > 0) {\n    var l = p['end_date']; //console.log(\"inside if end\"+l[0]+l[1]+l[2])\n\n    if (l[0] && l[1] && l[2]) {\n      var year = l[0];\n      var month = l[1];\n      var day = l[2];\n      p['end_date'] = new Date(year, month, day);\n    }\n  } else {\n    p['end_date'] = new Date(); //console.log(\"else end \"+p['end_date'])\n  }\n\n  if (p['start_date'].length > 0) {\n    var l = p['start_date']; //console.log(\"inside if start\"+(l[0] == 2020)+\" \"+(l[1] == 0)+\" \"+(l[2] == 20))\n\n    if (l[0]) {\n      var year = l[0];\n      var month = l[1];\n      var day = l[2];\n\n      if (l[2] == 20 && l[1] == 0) {\n        //console.log(\"inside special if\")\n        p['start_date'] = new Date(2020, 0, 20);\n      }\n\n      p['start_date'] = new Date(year, month, day);\n    }\n  } else {\n    p['start_date'] = new Date(); //console.log(\"else start \"+p['start_date'])\n  }\n\n  if (p['optimum_start'].length > 0) {\n    if (p['start_date'].length > 0) {\n      console.log(\"special if\");\n      p.end_date = p.optimum_start;\n    }\n\n    var l = p['optimum_start']; //console.log(\"inside if optistart\"+l[0]+l[1]+l[2])\n\n    if (l[0] && l[1] && l[2]) {\n      var year = l[0];\n      var month = l[1];\n      var day = l[2];\n      p['optimum_start'] = new Date(year, month, day);\n    }\n  } else {\n    p['optimum_start'] = new Date(); //console.log(\"else opti start \"+p['optimum_start'])\n  }\n\n  if (p['optimum_end'].length > 0) {\n    var l = p['optimum_end']; //console.log(\"inside if optiend\"[0]+l[1]+l[2])\n\n    if (l[0] && l[1] && l[2]) {\n      var year = l[0];\n      var month = l[1];\n      var day = l[2];\n      p['optimum_end'] = new Date(year, month, day);\n    }\n  } else {\n    p['optimum_end'] = new Date(); //console.log(\"else opti end \"+p['optimum_end'])\n  }\n\n  var tmp = calc(p);\n  p['Total_Saved'] = tmp;\n  st += tmp; //console.log(\"datapoint2\"+p['country']+p['end_date']+p['start_date']+p['optimum_start']+p['optimum_end'])\n});\n\nfunction getDates(d) {\n  return d.getDate() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getFullYear();\n}\n\nfunction calc(p) {\n  var t = new Date();\n  var day_lockdown = (p['end_date'] - p['start_date']) / (1000 * 60 * 60 * 24) + 0.25;\n  var daily = p['daily'];\n  var day_opt = (p['optimum_end'] - p['optimum_start']) / (1000 * 60 * 60 * 24) + 0.25;\n  return (day_lockdown * daily + day_opt * daily * 0.5) / 2;\n}\n\nvar estimation = 31557;\nvar style = {\n  position: \"absolute\",\n  top: 0,\n  // computed based on child and parent's height\n  right: 40,\n  fontSize: 28,\n  textAlign: \"center\",\n  fontWeight: \"bold\",\n  fontstyle: \"italic\",\n  color: \"rgb(50,0,133)\"\n};\nvar style1 = {\n  fontSize: 25,\n  textAlign: \"centre\",\n  fontWeight: \"bold\",\n  color: \"rgb(50,0,133)\",\n  backgroundColor: 'rgba(0,0,0,0)'\n};\n\nfunction getDates(d) {\n  return d.getDate() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getFullYear();\n}\n\nfunction calc(p) {\n  var t = new Date();\n  var day_lockdown = (p['end_date'] - p['start_date']) / (1000 * 60 * 60 * 24) + 0.25;\n  var daily = p['daily'];\n  var day_opt = (p['optimum_end'] - p['optimum_start']) / (1000 * 60 * 60 * 24) + 0.25;\n  return (day_lockdown * daily + day_opt * daily * 0.5) / 2;\n}\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HomePage, _React$Component);\n\n  function HomePage(props) {\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HomePage).call(this, props));\n    _this.callbackFunction = _this.callbackFunction.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this.handleChange = this.handleChange.bind(this);\n\n    _this.State = {\n      country: \"Japan\"\n    };\n    return _this;\n  }\n\n  _createClass(HomePage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      this.callbackFunction = function (childData) {\n        _this2.setState({\n          country: childData\n        });\n      };\n\n      return React.createElement(SiteWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(Page.Content, {\n        title: \"Carbon Emission Savings during COVID-19\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        cards: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(Grid.Col, {\n        width: 6,\n        sm: 6,\n        lg: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(Card.Status, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }), React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, \"CO2 Emissions Saved\")), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(Header.H1, {\n        className: \"mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, st.toLocaleString(navigator.language, {\n        minimumFractionDigits: 0\n      }) + \" Million MT\")))), React.createElement(Grid.Col, {\n        width: 6,\n        sm: 6,\n        lg: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(Card.Status, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }), React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, \"Total estimated CO2 emission for the year 2020\")), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(Header.H1, {\n        className: \"mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, estimation.toLocaleString(navigator.language, {\n        minimumFractionDigits: 0\n      }) + \" Million MT\")))), React.createElement(Grid.Col, {\n        width: 6,\n        sm: 6,\n        lg: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(Card.Status, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }), React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, \"Data Updated On\")), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(Header.H1, {\n        className: \"mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, getDates(new Date()))))), React.createElement(Grid.Col, {\n        width: 6,\n        sm: 6,\n        lg: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(Card.Status, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }), React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, \"Percentage of Total Estimate Saved\")), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, React.createElement(Header.H1, {\n        className: \"mb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, (st * 100 / estimation).toFixed(2) + \" %\"))))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, React.createElement(Grid.Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(ProgressCard, {\n        header: this.state['country'],\n        content: mydata.find(function (k) {\n          return k['country'] == _this2.state.country;\n        })['Total_Saved'].toLocaleString(navigator.language, {\n          minimumFractionDigits: 2\n        }) + \" Million MT\",\n        progressColor: \"green\",\n        progressWidth: mydata.find(function (k) {\n          return k['country'] == _this2.state.country;\n        })['Total_Saved'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      })), React.createElement(Grid.Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(ProgressCard, {\n        header: this.state['country'],\n        content: (mydata.find(function (k) {\n          return k['country'] == _this2.state.country;\n        })['Total_Saved'] * 100 / estimation).toLocaleString(navigator.language, {\n          minimumFractionDigits: 2\n        }) + \" %\",\n        progressColor: mydata.find(function (k) {\n          return k['country'] == _this2.state.country;\n        })['Total_Saved'] * 100 / st > 0.1 ? \"green\" : \"red\",\n        progressWidth: mydata.find(function (k) {\n          return k['country'] == _this2.state.country;\n        })['Total_Saved'] * 100 * 100 / estimation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(Grid.Col, {\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"CO2 Emission Savings\",\n        body: React.createElement(ReactSimpleMap, {\n          parentCallback: this.callbackFunction,\n          data: mydata,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, React.createElement(Grid.Col, {\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, \"Development Activity\")), React.createElement(C3Chart, {\n        style: {\n          height: \"10rem\"\n        },\n        data: {\n          columns: [v],\n          type: \"area\",\n          // default type of chart\n          groups: [[\"data1\", \"data2\", \"data3\"]],\n          colors: {\n            data1: colors[\"green\"]\n          },\n          names: {\n            // name of each serie\n            data1: \"CO2 savings\"\n          },\n          axes: {\n            data1: \"y2\",\n            data2: \"x1\"\n          }\n        },\n        axis: {\n          y: {\n            show: true\n          },\n          x: {\n            tick: {\n              format: \"%d/%m\"\n            },\n            padding: {\n              left: 0,\n              right: 0\n            },\n            show: true\n          }\n        },\n        legend: {\n          position: \"inset\",\n          padding: 0,\n          inset: {\n            anchor: \"top-left\",\n            x: 20,\n            y: 8,\n            step: 10\n          }\n        },\n        tooltip: {\n          format: {\n            title: function title(x) {\n              return [];\n            }\n          }\n        },\n        padding: {\n          bottom: 0,\n          left: -1,\n          right: -1\n        },\n        point: {\n          show: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }), table())), React.createElement(Grid.Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return HomePage;\n}(React.Component);\n\nexport default HomePage;","map":{"version":3,"sources":["/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/src/HomePage.react.js"],"names":["React","ReactSimpleMap","table","Header","Page","Avatar","Icon","Grid","Card","Text","Table","Alert","Progress","colors","Dropdown","Button","StampCard","StatsCard","ProgressCard","Badge","TabbedCard","PricingCard","C3Chart","SiteWrapper","mydata","csv","require","fs","results","arr","v","daily_saving","i","da_sa","st","forEach","p","length","l","year","month","day","Date","console","log","end_date","optimum_start","tmp","calc","getDates","d","getDate","getMonth","getFullYear","t","day_lockdown","daily","day_opt","estimation","style","position","top","right","fontSize","textAlign","fontWeight","fontstyle","color","style1","backgroundColor","HomePage","props","callbackFunction","bind","State","country","childData","setState","toLocaleString","navigator","language","minimumFractionDigits","toFixed","state","find","k","height","columns","type","groups","data1","names","axes","data2","y","show","x","tick","format","padding","left","inset","anchor","step","title","bottom","Component"],"mappings":"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","sourcesContent":["// @flow\n\nimport * as React from \"react\";\nimport ReactSimpleMap from \"./ReactSimpleMap\";\nimport table from \"./table\";\nimport Header from \"./Header/Header.react\";\nimport {\n  Page,\n  Avatar,\n  Icon,\n  Grid,\n  Card,\n  Text,\n  Table,\n  Alert,\n  Progress,\n  colors,\n  Dropdown,\n  Button,\n  StampCard,\n  StatsCard,\n  ProgressCard,\n  Badge,\n  TabbedCard,\n  PricingCard\n} from \"tabler-react\";\n\nimport C3Chart from \"react-c3js\";\n//import DownloadLink from \"react-download-link\";\n//import c3 from \"react-c3js\";\nimport SiteWrapper from \"./SiteWrapper.react\";\nimport mydata from \"./carbondata.json\"\nconst csv = require('csv-parser')\nconst fs = require('fs')\nconst results = [];\n//import CardFooter from \"../../src/components/Card/CardFooter.react\";\n//import CardBody from \"../../src/components/Card/CardBody.react\";\n/*onst  mydata = [\n  {country : \"China\", daily : 5731496, start_date : new Date(2020,0,20),end_date : new Date(2020,2,20),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n  {country : \"India\", daily : 1823594, start_date : new Date(2020,2,22),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"USA\", daily : 12898866, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n  {country : \"Japan\", daily : 981746, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n  {country : \"Italy\", daily : 309127/0.85, start_date : new Date(2020,2,9),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Spain\", daily : 239046/0.85, start_date : new Date(2020,2,14),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"France\", daily : 333728/0.85, start_date : new Date(2020,2,17),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Germany\", daily : 428368/0.85, start_date : new Date(2020,2,22),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"UK\", daily : 340751/0.85, start_date : new Date(2020,2,23),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Belgium\", daily :59255/0.85, start_date : new Date(2020,2,18),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n  {country : \"Rest OF Europe\", daily : 993706/0.4, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,22),optimum_end:new Date()}\n]\n*/\n\n//console.log(new Date(2020,0,20))\n/*for (var d = new Date(2020, 0, 14); d <= today; d.setDate(d.getDate() + 1)) {\n  arr.push(d);\n  v.push(i);\n  st = 0;\n  console.log(\"date \"+d.getHours())\n  mydata.forEach(function(p) {\n    var lock =0;\n    var opt =0;\n    console.log(\"date \"+ getDates(d))\n    //console.log(\"datapoint\"+p['country']+(p['end_date'] instanceof Date)+(p['start_date'] instanceof Date)+(p['optimum_start']instanceof Date)+(p['optimum_end']instanceof Date))\n    //console.log(\"datapoint\"+getDates(p['end_date'])+getDates(p['start_date'])+getDates(p['optimum_start'])+getDates(p['optimum_end']))\n    \n    if (p['end_date'].getTime() >= d.getTime() && p['start_date'].getTime()<= d.getTime())\n    { lock = ((d-p['start_date'])/(1000*60*60*24))*p['daily']*0.85\n      console.log(\"firstcase lock\"+lock)}\n    else if (p['end_date'].getTime() < d.getTime())\n    {\n      lock = ((p['end_date']-p['start_date'])/(1000*60*60*24))*p['daily']*0.85\n      console.log(\"secondcase lock\"+lock)\n    }\n    else if (p['start_date'].getTime() > d.getTime())\n    {\n      lock = 0\n      console.log(\"thirdcase lock\"+lock)\n    }\n    if (p['optimum_end'].getTime() >= d.getTime() && p['optimum_start'].getTime()<= d.getTime())\n    { opt= ((d-p['optimum_start'])/(1000*60*60*24))*p['daily']*0.4\n    console.log(\"firstcase opti\"+opt)}\n    else if (p['end_date'].getTime() < d.getTime())\n    {\n      opt = ((p['optimum_end']-p['optimum_start'])/(1000*60*60*24))*p['daily']*0.4\n      console.log(\"secondcase opti\"+opt)\n    }\n    else if (p['optimum_start'].getTime() > d.getTime())\n    {\n      opt = 0\n      console.log(\"thirdcase opti\"+opt)\n    }\n    p['Total_Saved']+=(lock+opt)\n    if (d.getTime() == (new Date()).getTime())\n    {console.log(\"country and total saved\"+p['country']+p['Total_Saved'])}\n    st += lock+opt \n    \n  });\n  da_sa.push(st)\n  console.log(\"date\"+d+\" \"+st)\n  \n  //console.log(d)\n  //console.log(d.getTime() == new Date(2020,0,20).getTime())\n\n  if (d.getTime() == new Date(2020, 0, 20).getTime()) {\n    //china\n    daily_saving += 5731496*0.85;\n    //console.log(\"in side china\")\n  }\n  if (d.getTime() == new Date(2020, 2, 9).getTime()) {\n    // Italy\n    daily_saving += 309127;\n  }\n  if (d.getTime() == new Date(2020, 2, 14).getTime()) {\n    //spain\n    daily_saving += 239046;\n  }\n  if (d.getTime() == new Date(2020, 2, 17).getTime()) {\n    //france\n    daily_saving += 333728;\n  }\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //germany\n    daily_saving += 428368;\n  }\n  if (d.getTime() == new Date(2020, 2, 23).getTime()) {\n    //UK\n    daily_saving += 340751;\n  }\n  if (d.getTime() == new Date(2020, 2, 18).getTime()) {\n    //belgium\n    daily_saving += 59255;\n  }\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //india\n    daily_saving += 1823594*0.85;\n  }\n  if (d.getTime() == new Date(2020, 2, 28).getTime()) {\n    //USA\n    //console.log(\"USA joins\")\n    daily_saving += 12898866*0.40;\n  }\n  if (d.getTime() == new Date(2020, 2, 20).getTime()) {\n    //china leaves\n    //console.log(\"china leaves\")\n    daily_saving -= 5731496*0.85;\n    daily_saving += 5731496*0.40;\n  }\n  if (d.getTime() == new Date(2020,2,22).getTime())\n  {//rest of europe \n    daily_saving += 993706;\n\n  }\n  if (d.getTime() == new Date(2020,2,20).getTime())\n  {//Japan\n    daily_saving += 981746*0.4;\n\n  }\n  \n  i = i + daily_saving;\n}\n*/\nvar arr = [\"data2\"];\nvar v = [\"data1\"];\nvar daily_saving = 0;\nvar i = 0;\nvar da_sa = [];\nvar st = 0 ;\nmydata.forEach(function(p){\n  //console.log(\"datapoint\"+p['country']+p['end_date']+p['start_date']+p['optimum_start']+p['optimum_end'])\n    if (p['end_date'].length >0 )\n    {\n      var l= p['end_date']\n      //console.log(\"inside if end\"+l[0]+l[1]+l[2])\n      if(l[0]&&l[1]&&l[2])\n      {\n      var year = l[0];\n      var month = l[1];\n      var day = l[2];\n      p['end_date'] = new Date(year,month,day)\n      }\n\n      \n    }\n    else \n    {\n      p['end_date'] = new Date()\n      //console.log(\"else end \"+p['end_date'])\n    }\n    if (p['start_date'].length >0)\n    {\n      var l= p['start_date']\n      //console.log(\"inside if start\"+(l[0] == 2020)+\" \"+(l[1] == 0)+\" \"+(l[2] == 20))\n      if(l[0])\n      {\n      var year = l[0];\n      var month = l[1];\n      var day = l[2];\n      if (l[2]== 20 && l[1] == 0)\n      {\n        //console.log(\"inside special if\")\n        p['start_date'] = new Date(2020,0,20)\n      }\n      p['start_date'] = new Date(year,month,day)\n\n      }\n      \n    }\n    else\n    {\n      p['start_date'] = new Date()\n      //console.log(\"else start \"+p['start_date'])\n    }\n    if (p['optimum_start'].length >0)\n    {\n      if (p['start_date'].length>0)\n      {\n        console.log(\"special if\")\n        p.end_date = p.optimum_start\n      }\n      var l= p['optimum_start']\n      //console.log(\"inside if optistart\"+l[0]+l[1]+l[2])\n      if(l[0]&&l[1]&&l[2])\n      {\n      var year = l[0];\n      var month = l[1];\n      var day = l[2];\n      p['optimum_start'] = new Date(year,month,day)\n      }\n      \n      \n    }\n    else\n    {\n      p['optimum_start'] = new Date()\n      //console.log(\"else opti start \"+p['optimum_start'])\n    }\n    if (p['optimum_end'].length>0)\n    {\n      var l= p['optimum_end']\n      //console.log(\"inside if optiend\"[0]+l[1]+l[2])\n      if(l[0]&&l[1]&&l[2])\n      {\n      var year = l[0];\n      var month = l[1];\n      var day = l[2];\n      p['optimum_end'] = new Date(year,month,day)\n      }\n      \n      \n    }\n    else\n    {\n      p['optimum_end'] = new Date()\n      //console.log(\"else opti end \"+p['optimum_end'])\n    }\n    var tmp = calc(p)\n    p['Total_Saved'] = tmp\n    st+=tmp\n    //console.log(\"datapoint2\"+p['country']+p['end_date']+p['start_date']+p['optimum_start']+p['optimum_end'])\n  })\nfunction getDates(d)\n{\n  return d.getDate()+\"/\"+(d.getMonth()+1)+\"/\"+d.getFullYear();\n}\n\nfunction calc(p)\n{\n  var t = new Date()\n  var day_lockdown = (p['end_date']-p['start_date'])/(1000*60*60*24)+0.25\n  var daily = p['daily']\n  var day_opt = (p['optimum_end']-p['optimum_start'])/(1000*60*60*24)+0.25\n  return (day_lockdown*daily + day_opt*daily*0.5)/2\n}\n\nvar estimation = 31557;\nconst style = {\n  position: \"absolute\",\n  top: 0, // computed based on child and parent's height\n  right: 40,\n  fontSize: 28,\n  textAlign: \"center\",\n  fontWeight: \"bold\",\n  fontstyle: \"italic\",\n  color : \"rgb(50,0,133)\"\n};\nconst style1 = {\n  fontSize: 25,\n  textAlign: \"centre\",\n  fontWeight: \"bold\",\n  color: \"rgb(50,0,133)\",\n  backgroundColor : 'rgba(0,0,0,0)'\n};\nfunction getDates(d)\n{\n  return d.getDate()+\"/\"+(d.getMonth()+1)+\"/\"+d.getFullYear();\n}\n\nfunction calc(p)\n{\n  var t = new Date()\n  var day_lockdown = (p['end_date']-p['start_date'])/(1000*60*60*24)+0.25\n  var daily = p['daily']\n  var day_opt = (p['optimum_end']-p['optimum_start'])/(1000*60*60*24)+0.25\n  return (day_lockdown*daily + day_opt*daily*0.5)/2\n}\n\nclass HomePage extends React.Component<void,state>{\n\n\n\n  constructor(props)\n{\n  super(props);\n  this.callbackFunction = this.callbackFunction.bind(this);\n  //this.handleChange = this.handleChange.bind(this);\n  this.State={\n    country:\"Japan\"\n  \n\n  }\n};\n\n\nrender() {\n this.callbackFunction = (childData) => {  this.setState({country: childData})}\n  return (\n\n    <SiteWrapper>\n    <Page.Content title=\"Carbon Emission Savings during COVID-19\">\n\n      <Grid.Row cards={true}>\n      <Grid.Col width={6} sm={6} lg={6}>\n      <Card>\n          <Card.Status />\n            <Card.Header>\n              <Card.Title>CO2 Emissions Saved</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Header.H1 className=\"mb-1\">{((st)).toLocaleString(navigator.language,{ minimumFractionDigits: 0 }) + \" Million MT\"}</Header.H1>\n            </Card.Body>\n        </Card>\n        </Grid.Col>\n        <Grid.Col width={6} sm={6} lg={6}>\n        <Card>\n          <Card.Status />\n            <Card.Header>\n              <Card.Title>Total estimated CO2 emission for the year 2020</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Header.H1 className=\"mb-1\">{estimation.toLocaleString(navigator.language,{ minimumFractionDigits: 0 })+\" Million MT\"}</Header.H1>\n            </Card.Body>\n        </Card>\n        </Grid.Col>\n        <Grid.Col width={6} sm={6} lg={6}>\n        <Card>\n      <Card.Status />\n      <Card.Header>\n        <Card.Title>Data Updated On</Card.Title>\n      </Card.Header>\n      <Card.Body>\n      <Header.H1 className=\"mb-1\">{getDates(new Date())}</Header.H1>\n      </Card.Body>\n    </Card>\n\n        </Grid.Col>\n        \n        <Grid.Col width={6} sm={6} lg={6}>\n        <Card>\n          <Card.Status />\n            <Card.Header>\n              <Card.Title>Percentage of Total Estimate Saved</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Header.H1 className=\"mb-1\">{(st*100/estimation).toFixed(2) + \" %\"}</Header.H1>\n            </Card.Body>\n        </Card>\n          \n        </Grid.Col>\n        {/*<Grid.Col width={6} sm={4} lg={2}>\n            <StatsCard layout={1} movement={-1} total=\"621\" label=\"Products\" />\n  </Grid.Col>*/}\n        </Grid.Row>\n        <Grid.Row>\n\n        <Grid.Col sm = {6}><ProgressCard\n                  header={this.state['country']}\n                  content={mydata.find(k => k['country'] == this.state.country)['Total_Saved'].toLocaleString(navigator.language,{ minimumFractionDigits: 2 }) + \" Million MT\"}\n                  progressColor=\"green\"\n                  progressWidth={mydata.find(k => k['country'] == this.state.country)['Total_Saved']}\n                /></Grid.Col>\n                <Grid.Col sm = {6}>\n                <ProgressCard\n                  header={this.state['country']}\n                  content={(mydata.find(k => k['country'] == this.state.country)['Total_Saved']*100/estimation).toLocaleString(navigator.language,{ minimumFractionDigits: 2 }) + \" %\"}\n                  progressColor={(mydata.find(k => k['country'] == this.state.country)['Total_Saved']*100/st) > 0.1 ? \"green\" : \"red\"}\n                  progressWidth={mydata.find(k => k['country'] == this.state.country)['Total_Saved']*100*100/estimation}\n                />\n                </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n            \n\n            <Grid.Col lg={12}>\n              <Card title=\"CO2 Emission Savings\" body={<ReactSimpleMap parentCallback = {this.callbackFunction} data = {mydata}/>} />\n            </Grid.Col>\n          </Grid.Row>\n        <Grid.Row>\n        <Grid.Col lg={12}>\n          <Card>\n            <Card.Header>\n              <Card.Title>Development Activity</Card.Title>\n            </Card.Header>\n            <C3Chart\n              style={{ height: \"10rem\" }}\n              data={{\n                columns: [v],\n                type: \"area\", // default type of chart\n                groups: [[\"data1\", \"data2\", \"data3\"]],\n                colors: {\n                  data1: colors[\"green\"],\n                },\n                names: {\n                  // name of each serie\n                  data1: \"CO2 savings\",\n                },\n                axes: { data1: \"y2\", data2: \"x1\" },\n              }}\n              axis={{\n                y: {\n                  show: true,\n                },\n                x: {\n                  tick: { format: \"%d/%m\" },\n                  padding: {\n                    left: 0,\n                    right: 0,\n                  },\n                  show: true,\n                },\n              }}\n              legend={{\n                position: \"inset\",\n                padding: 0,\n                inset: {\n                  anchor: \"top-left\",\n                  x: 20,\n                  y: 8,\n                  step: 10,\n                },\n              }}\n              tooltip={{\n                format: {\n                  title: function(x) {\n                    return [];\n                  },\n                },\n              }}\n              padding={{\n                bottom: 0,\n                left: -1,\n                right: -1,\n              }}\n              point={{\n                show: false,\n              }}\n            />\n\n            {table()}\n            </Card>\n        </Grid.Col>\n        <Grid.Col>\n        \n        </Grid.Col>\n      </Grid.Row>\n\n    </Page.Content>\n  </SiteWrapper>\n  );\n}\n}\n\n\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}