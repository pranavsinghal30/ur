{"ast":null,"code":"import _classCallCheck from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/src/ReactSimpleMap/ReactSimpleMap.react.js\";\nimport * as React from \"react\";\nimport { ComposableMap, ZoomableGroup, Geographies, Geography } from \"react-simple-maps\";\nimport data from \"./data/world-50m.json\";\nimport { scaleLinear } from \"d3-scale\";\nimport { Component } from \"react\";\n\nfunction value(p, k) {\n  if (k == 'end_date') {\n    return parseInt((p[k] - p['start_date']) / (1000 * 60 * 60 * 24)).toLocaleString(navigator.language, {\n      minimumFractionDigits: 0\n    });\n  } else if (k == 'start_date') {\n    //console.log(p['country']+(p['start_date'].getTime()==(new Date().getTime())))\n    if (p['start_date'].getTime() == new Date().getTime()) {\n      //console.log(\"inside if \")\n      return p['optimum_start'].getDate() + \"/\" + (p['optimum_start'].getMonth() + 1);\n    }\n\n    return p[k].getDate() + \"/\" + (p[k].getMonth() + 1);\n  } else if (k == 'Total_Saved') {\n    return ((p['end_date'] - p['start_date']) / (1000 * 60 * 60 * 24) * p['daily'] * 0.85 + (p['optimum_end'] - p['optimum_start']) / (1000 * 60 * 60 * 24) * p['daily'] * 0.4).toLocaleString(navigator.language, {\n      minimumFractionDigits: 0\n    });\n  } else if (k == 'daily') {\n    return p[k].toLocaleString(navigator.language, {\n      minimumFractionDigits: 0\n    });\n  } else if (k == 'optimum_start' || k == 'optimum_end') {\n    return \"\";\n  } else {\n    return p[k].toString();\n  }\n}\n\nvar max = 0;\nvar min = Number.MAX_VALUE;\nvar mydata = [{\n  name: \"China\",\n  daily: 5731496,\n  start_date: new Date(2020, 0, 20),\n  end_date: new Date(2020, 2, 20),\n  Total_Saved: 0,\n  optimum_start: new Date(2020, 2, 20),\n  optimum_end: new Date()\n}, {\n  name: \"India\",\n  daily: 1823594,\n  start_date: new Date(2020, 2, 22),\n  end_date: new Date(),\n  Total_Saved: 0,\n  optimum_start: new Date(),\n  optimum_end: new Date()\n}, {\n  name: \"United States\",\n  daily: 12898866,\n  start_date: new Date(),\n  end_date: new Date(),\n  Total_Saved: 0,\n  optimum_start: new Date(2020, 2, 20),\n  optimum_end: new Date()\n}, {\n  name: \"Japan\",\n  daily: 981746,\n  start_date: new Date(),\n  end_date: new Date(),\n  Total_Saved: 0,\n  optimum_start: new Date(2020, 2, 20),\n  optimum_end: new Date()\n}, {\n  name: \"Italy\",\n  daily: 309127 / 0.85,\n  start_date: new Date(2020, 2, 9),\n  end_date: new Date(),\n  Total_Saved: 0,\n  optimum_start: new Date(),\n  optimum_end: new Date()\n}, {\n  name: \"Spain\",\n  daily: 239046 / 0.85,\n  start_date: new Date(2020, 2, 14),\n  end_date: new Date(),\n  Total_Saved: 0,\n  optimum_start: new Date(),\n  optimum_end: new Date()\n}, {\n  name: \"France\",\n  daily: 333728 / 0.85,\n  start_date: new Date(2020, 2, 17),\n  end_date: new Date(),\n  Total_Saved: 0,\n  optimum_start: new Date(),\n  optimum_end: new Date()\n}, {\n  name: \"Germany\",\n  daily: 428368 / 0.85,\n  start_date: new Date(2020, 2, 22),\n  end_date: new Date(),\n  Total_Saved: 0,\n  optimum_start: new Date(),\n  optimum_end: new Date()\n}, {\n  name: \"UK\",\n  daily: 340751 / 0.85,\n  start_date: new Date(2020, 2, 23),\n  end_date: new Date(),\n  Total_Saved: 0,\n  optimum_start: new Date(),\n  optimum_end: new Date()\n}, {\n  name: \"Belgium\",\n  daily: 59255 / 0.85,\n  start_date: new Date(2020, 2, 18),\n  end_date: new Date(),\n  Total_Saved: 0,\n  optimum_start: new Date(),\n  optimum_end: new Date()\n}, {\n  name: \"Rest OF Europe\",\n  daily: 993706 / 0.4,\n  start_date: new Date(),\n  end_date: new Date(),\n  Total_Saved: 0,\n  optimum_start: new Date(2020, 2, 22),\n  optimum_end: new Date()\n}];\nvar wrapperStyles = {\n  width: \"100%\",\n  height: \"auto\",\n  maxWidth: \"100%\",\n  margin: \"0 auto\",\n  fontFamily: \"Roboto, sans-serif\"\n};\n{\n  /*}\n  function calc(p) {\n   return (\n     ((((p['end_date']-p['start_date'])/(1000*60*60*24))*p['daily']*0.85)+(((p['optimum_end']-p['optimum_start'])/(1000*60*60*24))*p['daily']*0.4))\n   );\n  }\n  //const values = []\n  function change() {\n   this.props.data.map(s => (s.Total_Saved = calc(s)));\n  }\n  function range() {\n   this.props.data.forEach(function(o) {\n     min = Math.min(min, calc(o) == 0 ? Number.MAX_VALUE : calc(o));\n     max = Math.max(max, calc(o));\n   });\n   //console.log(\"max\" + max);\n   //console.log(\"min\" + min);\n  }*/\n}\n\nvar ReactSimpleMap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ReactSimpleMap, _Component);\n\n  function ReactSimpleMap(props) {\n    var _this;\n\n    _classCallCheck(this, ReactSimpleMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactSimpleMap).call(this, props));\n\n    _this.range = function () {\n      _this.props.data.forEach(function (o) {\n        min = Math.min(min, this.calc(o) == 0 ? Number.MAX_VALUE : this.calc(o));\n        max = Math.max(max, this.calc(o));\n      }); //console.log(\"max\" + max);\n      //console.log(\"min\" + min);\n\n    };\n\n    _this.change = function () {\n      _this.props.data.map(function (s) {\n        return s.Total_Saved = _this.calc(s);\n      });\n    };\n\n    _this.handleClick = function (geography, evt) {\n      var x = evt.clientX;\n      var y = evt.clientY + window.pageYOffset;\n\n      _this.sendData(geography.properties.name); //console.log(geography.properties.ISO_A3);\n\n\n      _this.setState({\n        country: geography.properties.name,\n        origin: {\n          x: x,\n          y: y\n        },\n        content: geography.properties.name + \": \" + (_this.props.data.find(function (s) {\n          return s.name == geography.properties.name;\n        }) ? _this.calc(_this.props.data.find(function (s) {\n          return s.name == geography.properties.name;\n        })).toLocaleString(navigator.language, {\n          minimumFractionDigits: 0\n        }) + \" MT\" : \"NA\")\n      });\n    };\n\n    _this.handleMove = function (geography, evt) {\n      var x = evt.clientX;\n      var y = evt.clientY + window.pageYOffset; //console.log(geography.properties.ISO_A3);\n\n      _this.setState({\n        country: geography.properties.name,\n        origin: {\n          x: x,\n          y: y\n        },\n        content: geography.properties.name + \": \" + (_this.props.data.find(function (s) {\n          return s.name == geography.properties.name;\n        }) ? _this.calc(_this.props.data.find(function (s) {\n          return s.name == geography.properties.name;\n        })).toLocaleString(navigator.language, {\n          minimumFractionDigits: 0\n        }) + \" MT\" : \"NA\")\n      });\n    };\n\n    _this.handleLeave = function () {\n      _this.setState({\n        content: \"\"\n      });\n    };\n\n    _this.state = {\n      origin: {\n        x: 0,\n        y: 0\n      },\n      content: \"\"\n    };\n\n    _this.calc();\n\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.sendData = _this.sendData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.calc = _this.calc.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.change = _this.change.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.range = _this.range.bind(_assertThisInitialized(_assertThisInitialized(_this))); //var this.props.data = this.props.data\n\n    return _this;\n  }\n\n  _createClass(ReactSimpleMap, [{\n    key: \"sendData\",\n    value: function sendData(e) {\n      this.props.parentCallback(e);\n    }\n  }, {\n    key: \"calc\",\n    value: function calc(p) {\n      return (p['end_date'] - p['start_date']) / (1000 * 60 * 60 * 24) * p['daily'] * 0.85 + (p['optimum_end'] - p['optimum_start']) / (1000 * 60 * 60 * 24) * p['daily'] * 0.4;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      this.change();\n      this.range();\n      var popScale = scaleLinear().domain([min, (max + min) / 5, max]).range([\"#A4DE02\", \"#76BA1B\", \"#1E5631\"]);\n      return React.createElement(\"div\", {\n        style: wrapperStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, this.state.content && React.createElement(\"div\", {\n        style: {\n          position: \"fixed\",\n          top: this.state.origin.y + 20 - window.scrollY,\n          left: this.state.origin.x,\n          zIndex: 999999,\n          textAlign: \"center\",\n          border: \"1px grey solid\",\n          borderRadius: 3,\n          padding: 4,\n          backgroundColor: \"#fff\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, this.state.content), React.createElement(ComposableMap, {\n        projectionConfig: {\n          scale: 205,\n          rotation: [-11, 0, 0]\n        },\n        style: {\n          width: \"100%\",\n          height: \"auto\"\n        },\n        width: 900,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(ZoomableGroup, {\n        center: [0, 20],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Geographies, {\n        geography: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, function (geographies, projection) {\n        return geographies.map(function (geography, i) {\n          var country = _this2.props.data.find(function (s) {\n            return s.name == geography.properties.name;\n          });\n\n          return React.createElement(Geography, {\n            key: geography.properties.ISO_A3 + i,\n            geography: geography,\n            onMouseMove: _this2.handleMove,\n            onMouseDown: _this2.handleClick,\n            onMouseLeave: _this2.handleLeave,\n            projection: projection,\n            style: {\n              default: {\n                fill: country ? popScale(_this2.calc(country)) : \"#e8f4f8\",\n                stroke: \"#607D8B\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              },\n              hover: {\n                fill: country ? popScale(_this2.calc(country) + 100) : \"#e8f4f8\",\n                stroke: \"#607D8B\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              },\n              pressed: {\n                fill: \"#263238\",\n                stroke: \"#607D8B\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218\n            },\n            __self: this\n          });\n        });\n      }))));\n    }\n  }]);\n\n  return ReactSimpleMap;\n}(Component);\n\nexport default ReactSimpleMap;","map":{"version":3,"sources":["/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/src/ReactSimpleMap/ReactSimpleMap.react.js"],"names":["React","ComposableMap","ZoomableGroup","Geographies","Geography","data","scaleLinear","Component","value","p","k","parseInt","toLocaleString","navigator","language","minimumFractionDigits","getTime","Date","getDate","getMonth","toString","max","min","Number","MAX_VALUE","mydata","name","daily","start_date","end_date","Total_Saved","optimum_start","optimum_end","wrapperStyles","width","height","maxWidth","margin","fontFamily","ReactSimpleMap","props","range","forEach","o","Math","calc","change","map","s","handleClick","geography","evt","x","clientX","y","clientY","window","pageYOffset","sendData","properties","setState","country","origin","content","find","handleMove","handleLeave","state","bind","e","parentCallback","popScale","domain","position","top","scrollY","left","zIndex","textAlign","border","borderRadius","padding","backgroundColor","scale","rotation","geographies","projection","i","ISO_A3","default","fill","stroke","strokeWidth","outline","hover","pressed"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from \"react\";\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n} from \"react-simple-maps\";\nimport data from \"./data/world-50m.json\";\nimport { scaleLinear } from \"d3-scale\";\nimport { Component } from \"react\";\nfunction value(p,k)\n  {\n   if (k == 'end_date')\n   {\n       return parseInt((p[k]-p['start_date'])/(1000*60*60*24)).toLocaleString(navigator.language, { minimumFractionDigits: 0 })\n   } \n   else if ( k == 'start_date')\n   {  //console.log(p['country']+(p['start_date'].getTime()==(new Date().getTime())))\n       if ((p['start_date'].getTime()) == (new Date().getTime()))\n       {//console.log(\"inside if \")\n         return p['optimum_start'].getDate()+\"/\"+(p['optimum_start'].getMonth()+1)}\n       \n       return p[k].getDate()+\"/\"+(p[k].getMonth()+1)\n   }\n   else if ( k == 'Total_Saved')\n   {\n       return ((((p['end_date']-p['start_date'])/(1000*60*60*24))*p['daily']*0.85)+(((p['optimum_end']-p['optimum_start'])/(1000*60*60*24))*p['daily']*0.4)).toLocaleString(navigator.language, { minimumFractionDigits: 0 })\n   }\n   else if (k == 'daily')\n   {\n     return (p[k]).toLocaleString(navigator.language, { minimumFractionDigits: 0 })\n   }\n   else if (k == 'optimum_start' || k == 'optimum_end')\n   {\n     return \"\"\n   }\n   else \n   {\n       return p[k].toString()\n   }\n  }\nvar max = 0;\nvar min = Number.MAX_VALUE;\nconst mydata = [\n\n    {name : \"China\", daily : 5731496, start_date : new Date(2020,0,20),end_date : new Date(2020,2,20),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n    {name : \"India\", daily : 1823594, start_date : new Date(2020,2,22),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n    {name : \"United States\", daily : 12898866, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n    {name : \"Japan\", daily : 981746, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n    {name : \"Italy\", daily : 309127/0.85, start_date : new Date(2020,2,9),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n    {name : \"Spain\", daily : 239046/0.85, start_date : new Date(2020,2,14),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n    {name : \"France\", daily : 333728/0.85, start_date : new Date(2020,2,17),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n    {name : \"Germany\", daily : 428368/0.85, start_date : new Date(2020,2,22),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n    {name : \"UK\", daily : 340751/0.85, start_date : new Date(2020,2,23),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n    {name : \"Belgium\", daily :59255/0.85, start_date : new Date(2020,2,18),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n    {name : \"Rest OF Europe\", daily : 993706/0.4, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,22),optimum_end:new Date()}\n];\nconst wrapperStyles = {\n  width: \"100%\",\n  height: \"auto\",\n  maxWidth: \"100%\",\n  margin: \"0 auto\",\n  fontFamily: \"Roboto, sans-serif\",\n};\n\ntype State = {\n  origin: { x: number, y: number },\n  content: string,\n};\n{/*}\nfunction calc(p) {\n  return (\n    ((((p['end_date']-p['start_date'])/(1000*60*60*24))*p['daily']*0.85)+(((p['optimum_end']-p['optimum_start'])/(1000*60*60*24))*p['daily']*0.4))\n  );\n}\n//const values = []\nfunction change() {\n  this.props.data.map(s => (s.Total_Saved = calc(s)));\n}\n\nfunction range() {\n  this.props.data.forEach(function(o) {\n    min = Math.min(min, calc(o) == 0 ? Number.MAX_VALUE : calc(o));\n    max = Math.max(max, calc(o));\n  });\n  //console.log(\"max\" + max);\n  //console.log(\"min\" + min);\n}*/}\nclass ReactSimpleMap extends Component {\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      origin: { x: 0, y: 0 },\n      content: \"\",\n\n    }\n    this.calc();\n    this.handleClick = this.handleClick.bind(this)\n    this.sendData = this.sendData.bind(this)\n    this.calc = this.calc.bind(this)\n    this.change = this.change.bind(this)\n    this.range = this.range.bind(this)\n    //var this.props.data = this.props.data\n  }\n  sendData(e){\n    this.props.parentCallback(e);}\n\n  calc(p){\n        return ((((p['end_date']-p['start_date'])/(1000*60*60*24))*p['daily']*0.85)+(((p['optimum_end']-p['optimum_start'])/(1000*60*60*24))*p['daily']*0.4))\n      \n    }\n  range = () => {\n      this.props.data.forEach(function(o) {\n        min = Math.min(min, this.calc(o) == 0 ? Number.MAX_VALUE : this.calc(o));\n        max = Math.max(max, this.calc(o));\n      });\n      //console.log(\"max\" + max);\n      //console.log(\"min\" + min);\n    }\n    //const values = []\n  change = () => {\n      this.props.data.map(s => (s.Total_Saved = this.calc(s)));\n    }\n    \n\n  handleClick = (\n    geography: { properties: { name: string, pop_est: string } },\n    evt: SyntheticMouseEvent<>\n  ): void => {\n    const x = evt.clientX;\n    const y = evt.clientY + window.pageYOffset;\n    this.sendData(geography.properties.name)\n    //console.log(geography.properties.ISO_A3);\n    this.setState({\n      country : geography.properties.name,\n      origin: { x, y },\n      content:\n        geography.properties.name +\n        \": \" +\n        (this.props.data.find(s => s.name == geography.properties.name)\n          ? this.calc(this.props.data.find(s => s.name == geography.properties.name)).toLocaleString(navigator.language, { minimumFractionDigits: 0 })+\" MT\"\n          : \"NA\"),\n    });\n  };\n\n  \n  handleMove = (\n    geography: { properties: { name: string, pop_est: string } },\n    evt: SyntheticMouseEvent<>\n  ): void => {\n    const x = evt.clientX;\n    const y = evt.clientY + window.pageYOffset;\n    //console.log(geography.properties.ISO_A3);\n    this.setState({\n      country : geography.properties.name,\n      origin: { x, y },\n      content:\n        geography.properties.name +\n        \": \" +\n        (this.props.data.find(s => s.name == geography.properties.name)\n          ? this.calc(this.props.data.find(s => s.name == geography.properties.name)).toLocaleString(navigator.language, { minimumFractionDigits: 0 })+\" MT\"\n          : \"NA\"),\n    });\n  };\n\n  handleLeave = ():void => {\n    this.setState({ content: \"\" });\n  };\n\n  render(){\n    this.change();\n    this.range();\n    const popScale = scaleLinear()\n      .domain([min, (max + min) / 5, max])\n      .range([\"#A4DE02\", \"#76BA1B\", \"#1E5631\"]);\n\n    return (\n      <div style={wrapperStyles}>\n        {this.state.content && (\n          <div\n            style={{\n              position: \"fixed\",\n              top: this.state.origin.y + 20 - window.scrollY,\n              left: this.state.origin.x,\n              zIndex: 999999,\n              textAlign: \"center\",\n              border: \"1px grey solid\",\n              borderRadius: 3,\n              padding: 4,\n              backgroundColor: \"#fff\",\n            }}\n          >\n            {this.state.content}\n          </div>\n        )}\n\n        <ComposableMap\n          projectionConfig={{\n            scale: 205,\n            rotation: [-11, 0, 0],\n          }}\n          style={{\n            width: \"100%\",\n            height: \"auto\",\n          }}\n          width={900}\n        >\n          <ZoomableGroup center={[0, 20]}>\n            <Geographies geography={data}>\n              {(geographies, projection) =>\n                geographies.map((geography, i) => {\n                  const country = this.props.data.find(\n                    s => s.name == geography.properties.name\n                  );\n                  return (\n                    <Geography\n                      key={geography.properties.ISO_A3 + i}\n                      geography={geography}\n                      onMouseMove={this.handleMove}\n                      onMouseDown = {this.handleClick}\n                      onMouseLeave={this.handleLeave}\n                      projection={projection}\n                      style={{\n                        default: {\n                          fill: country ? popScale(this.calc(country)) : \"#e8f4f8\",\n                          stroke: \"#607D8B\",\n                          strokeWidth: 0.75,\n                          outline: \"none\",\n                        },\n                        hover: {\n                          fill: country\n                            ? popScale(this.calc(country) + 100)\n                            : \"#e8f4f8\",\n                          stroke: \"#607D8B\",\n                          strokeWidth: 0.75,\n                          outline: \"none\",\n                        },\n                        pressed: {\n                          fill: \"#263238\",\n                          stroke: \"#607D8B\",\n                          strokeWidth: 0.75,\n                          outline: \"none\",\n                        },\n                      }}\n                    />\n                  );\n                })\n              }\n            </Geographies>\n          </ZoomableGroup>\n        </ComposableMap>\n      </div>\n    );\n  }\n}\n\nexport default ReactSimpleMap;\n"]},"metadata":{},"sourceType":"module"}