{
  "ast": null,
  "code": "import _classCallCheck from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/src/ReactSimpleMap/ReactSimpleMap.react.js\";\nimport * as React from \"react\";\nimport { ComposableMap, ZoomableGroup, Geographies, Geography } from \"react-simple-maps\";\nimport data from \"./data/world-50m.json\";\nimport { scaleLinear } from \"d3-scale\";\n\nfunction value(p, k) {\n  if (k == 'end_date') {\n    return parseInt((p[k] - p['start_date']) / (1000 * 60 * 60 * 24));\n  } else if (k == 'start_date') {\n    return p[k].getDate() + \"/\" + p[k].getMonth();\n  } else if (k == 'Total_Saved') {\n    return parseInt((p['end_date'] - p['start_date']) / (1000 * 60 * 60 * 24)) * p['daily'];\n  } else {\n    return p[k].toString();\n  }\n}\n\nvar max = 0;\nvar min = 0;\nvar mydata = [{\n  name: \"China\",\n  daily: 5731456,\n  start_date: new Date(2020, 1, 14),\n  end_date: new Date(2020, 2, 20),\n  Total_Saved: 0\n}, {\n  name: \"India\",\n  daily: 1823594,\n  start_date: new Date(2020, 2, 22),\n  end_date: new Date(),\n  Total_Saved: 0\n}, {\n  name: \"United States\",\n  daily: 12898866,\n  start_date: new Date(2020, 2, 28),\n  end_date: new Date(),\n  Total_Saved: 0\n}, {\n  name: \"Japan\",\n  daily: \"0\",\n  start_date: new Date(2020, 1, 14),\n  end_date: new Date(),\n  Total_Saved: 0\n}, {\n  name: \"Italy\",\n  daily: 309127,\n  start_date: new Date(2020, 2, 9),\n  end_date: new Date(),\n  Total_Saved: 0\n}, {\n  name: \"Spain\",\n  daily: 239046,\n  start_date: new Date(2020, 2, 14),\n  end_date: new Date(),\n  Total_Saved: 0\n}, {\n  name: \"France\",\n  daily: 333728,\n  start_date: new Date(2020, 2, 17),\n  end_date: new Date(),\n  Total_Saved: 0\n}, {\n  name: \"Germany\",\n  daily: 428368,\n  start_date: new Date(2020, 2, 22),\n  end_date: new Date(),\n  Total_Saved: 0\n}, {\n  name: \"United Kingdom\",\n  daily: 340751,\n  start_date: new Date(2020, 2, 23),\n  end_date: new Date(),\n  Total_Saved: 0\n}, {\n  name: \"Belgium\",\n  daily: 829571,\n  start_date: new Date(2020, 1, 14),\n  end_date: new Date(),\n  Total_Saved: 0\n}];\nvar wrapperStyles = {\n  width: \"100%\",\n  height: \"auto\",\n  maxWidth: \"100%\",\n  margin: \"0 auto\",\n  fontFamily: \"Roboto, sans-serif\"\n};\n\nfunction calc(p) {\n  return parseInt((p['end_date'] - p['start_date']) / (1000 * 60 * 60 * 24)) * p['daily'];\n} //const values = []\n\n\nfunction change() {\n  mydata.map(function (s) {\n    return s.Total_Saved = calc(s);\n  });\n}\n\nfunction range() {\n  mydata.forEach(function (o) {\n    Object.keys(o).forEach(function (k) {\n      if (k !== 'country' && o[k] !== null) {\n        min = Math.min(min, o[k]);\n        max = Math.max(max, o[k]);\n      }\n    });\n  });\n  console.log(\"max\" + max);\n  console.log(\"min\" + min);\n}\n\nvar ReactSimpleMap =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ReactSimpleMap, _React$PureComponent);\n\n  function ReactSimpleMap() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ReactSimpleMap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ReactSimpleMap)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      origin: {\n        x: 0,\n        y: 0\n      },\n      content: \"\"\n    };\n\n    _this.handleMove = function (geography, evt) {\n      var x = evt.clientX;\n      var y = evt.clientY + window.pageYOffset;\n      console.log(geography.properties.ISO_A3);\n\n      _this.setState({\n        origin: {\n          x: x,\n          y: y\n        },\n        content: geography.properties.name + \": \" + (mydata.find(function (s) {\n          return s.name == geography.properties.name;\n        }) ? calc(mydata.find(function (s) {\n          return s.name == geography.properties.name;\n        })) : \"NA\")\n      });\n    };\n\n    _this.handleLeave = function () {\n      _this.setState({\n        content: \"\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ReactSimpleMap, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      change();\n      range();\n      var popScale = scaleLinear().domain([min, (max + min) / 2, max]).range([\"#A4DE02\", \"#76BA1B\", \"#1E5631\"]);\n      return React.createElement(\"div\", {\n        style: wrapperStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, this.state.content && React.createElement(\"div\", {\n        style: {\n          position: \"fixed\",\n          top: this.state.origin.y + 20 - window.scrollY,\n          left: this.state.origin.x,\n          zIndex: 999999,\n          textAlign: \"center\",\n          border: \"1px grey solid\",\n          borderRadius: 3,\n          padding: 4,\n          backgroundColor: \"#fff\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, this.state.content), React.createElement(ComposableMap, {\n        projectionConfig: {\n          scale: 205,\n          rotation: [-11, 0, 0]\n        },\n        style: {\n          width: \"100%\",\n          height: \"auto\"\n        },\n        width: 900,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(ZoomableGroup, {\n        center: [0, 20],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Geographies, {\n        geography: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, function (geographies, projection) {\n        return geographies.map(function (geography, i) {\n          var country = mydata.find(function (s) {\n            return s.name == geography.properties.name;\n          });\n          return React.createElement(Geography, {\n            key: geography.properties.ISO_A3 + i,\n            geography: geography,\n            onMouseMove: _this2.handleMove,\n            onMouseLeave: _this2.handleLeave,\n            projection: projection,\n            style: {\n              default: {\n                fill: country ? popScale(calc(country)) : \"#e8f4f8\",\n                stroke: \"#607D8B\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              },\n              hover: {\n                fill: country ? popScale(calc(country) + 100) : \"#e8f4f8\",\n                stroke: \"#607D8B\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              },\n              pressed: {\n                fill: \"#263238\",\n                stroke: \"#607D8B\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          });\n        });\n      }))));\n    }\n  }]);\n\n  return ReactSimpleMap;\n}(React.PureComponent);\n\nexport default ReactSimpleMap;",
  "map": {
    "version": 3,
    "sources": [
      "/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/src/ReactSimpleMap/ReactSimpleMap.react.js"
    ],
    "names": [
      "React",
      "ComposableMap",
      "ZoomableGroup",
      "Geographies",
      "Geography",
      "data",
      "scaleLinear",
      "value",
      "p",
      "k",
      "parseInt",
      "getDate",
      "getMonth",
      "toString",
      "max",
      "min",
      "mydata",
      "name",
      "daily",
      "start_date",
      "Date",
      "end_date",
      "Total_Saved",
      "wrapperStyles",
      "width",
      "height",
      "maxWidth",
      "margin",
      "fontFamily",
      "calc",
      "change",
      "map",
      "s",
      "range",
      "forEach",
      "o",
      "Object",
      "keys",
      "Math",
      "console",
      "log",
      "ReactSimpleMap",
      "state",
      "origin",
      "x",
      "y",
      "content",
      "handleMove",
      "geography",
      "evt",
      "clientX",
      "clientY",
      "window",
      "pageYOffset",
      "properties",
      "ISO_A3",
      "setState",
      "find",
      "handleLeave",
      "popScale",
      "domain",
      "position",
      "top",
      "scrollY",
      "left",
      "zIndex",
      "textAlign",
      "border",
      "borderRadius",
      "padding",
      "backgroundColor",
      "scale",
      "rotation",
      "geographies",
      "projection",
      "i",
      "country",
      "default",
      "fill",
      "stroke",
      "strokeWidth",
      "outline",
      "hover",
      "pressed",
      "PureComponent"
    ],
    "mappings": "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",
    "sourcesContent": [
      "// @flow\nimport * as React from \"react\";\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n} from \"react-simple-maps\";\nimport data from \"./data/world-50m.json\";\nimport { scaleLinear } from \"d3-scale\";\n\nfunction value(p,k)\n  {\n   if (k == 'end_date')\n   {\n       return parseInt((p[k]-p['start_date'])/(1000*60*60*24))\n   } \n   else if ( k == 'start_date')\n   {\n       return p[k].getDate()+\"/\"+p[k].getMonth()\n   }\n   else if ( k == 'Total_Saved')\n   {\n       return parseInt((p['end_date']-p['start_date'])/(1000*60*60*24))*p['daily']\n   }\n   else \n   {\n       return p[k].toString()\n   }\n  }\nvar max = 0;\nvar min = 0;\nconst  mydata = [\n        {name : \"China\", daily : 5731456, start_date : new Date(2020,1,14),end_date : new Date(2020,2,20),Total_Saved : 0},\n        {name : \"India\", daily : 1823594, start_date : new Date(2020,2,22),end_date : new Date(),Total_Saved : 0},\n        {name : \"United States\", daily : 12898866, start_date : new Date(2020,2,28),end_date : new Date(),Total_Saved : 0},\n        {name : \"Japan\", daily : \"0\", start_date : new Date(2020,1,14),end_date : new Date(),Total_Saved : 0},\n        {name : \"Italy\", daily : 309127, start_date : new Date(2020,2,9),end_date : new Date(),Total_Saved : 0},\n        {name : \"Spain\", daily : 239046, start_date : new Date(2020,2,14),end_date : new Date(),Total_Saved : 0},\n        {name : \"France\", daily : 333728, start_date : new Date(2020,2,17),end_date : new Date(),Total_Saved : 0},\n        {name : \"Germany\", daily : 428368, start_date : new Date(2020,2,22),end_date : new Date(),Total_Saved : 0},\n        {name : \"United Kingdom\", daily : 340751, start_date : new Date(2020,2,23),end_date : new Date(),Total_Saved : 0},\n        {name : \"Belgium\", daily : 829571, start_date : new Date(2020,1,14),end_date : new Date(),Total_Saved : 0}\n      \n      ]\nconst wrapperStyles = {\n  width: \"100%\",\n  height: \"auto\",\n  maxWidth: \"100%\",\n  margin: \"0 auto\",\n  fontFamily: \"Roboto, sans-serif\",\n};\n\ntype State = {\n  origin: { x: number, y: number },\n  content: string,\n};\n\n\n\nfunction calc(p)\n{\n  return parseInt((p['end_date']-p['start_date'])/(1000*60*60*24))*p['daily']\n}\n//const values = []\nfunction change()\n{\n  mydata.map(s => s.Total_Saved = calc(s))\n}\n\nfunction range()\n{ \n  mydata.forEach(function (o) {\n    Object.keys(o).forEach(function (k) {                \n        if (k !== 'country' && o[k] !== null) {\n            min = Math.min(min, o[k]);\n            max = Math.max(max, o[k]);\n        }\n    });\n  });\n  console.log(\"max\"+max)\n  console.log(\"min\"+min)\n}\nclass ReactSimpleMap extends React.PureComponent<void, State> {\n  state = {\n    origin: { x: 0, y: 0 },\n    content: \"\",\n  };\n\n  handleMove = (\n    geography: { properties: { name: string, pop_est: string } },\n    evt: SyntheticMouseEvent<>\n  ): void => {\n    const x = evt.clientX;\n    const y = evt.clientY + window.pageYOffset;\n    console.log(geography.properties.ISO_A3)\n    this.setState({\n\n      origin: { x, y },\n      content: geography.properties.name + \": \" + ( mydata.find(s=> s.name == geography.properties.name ) ? calc(mydata.find(s=> s.name == geography.properties.name )) : \"NA\")\n    });\n  };\n\n  handleLeave = (): void => {\n    this.setState({ content: \"\" });\n  };\n\n\n  render() {\n    change()\n    range()\n    const popScale = scaleLinear()\n  .domain([min,(max+min)/2,max])\n  .range([\"#A4DE02\",\"#76BA1B\",\"#1E5631\"]);\n\n    return (\n      <div style={wrapperStyles}>\n        {this.state.content && (\n          <div\n            style={{\n              position: \"fixed\",\n              top: this.state.origin.y + 20 - window.scrollY,\n              left: this.state.origin.x,\n              zIndex: 999999,\n              textAlign: \"center\",\n              border: \"1px grey solid\",\n              borderRadius: 3,\n              padding: 4,\n              backgroundColor: \"#fff\",\n            }}\n          >\n            {this.state.content}\n          </div>\n        )}\n      \n        <ComposableMap\n          projectionConfig={{\n            scale: 205,\n            rotation: [-11, 0, 0],\n          }}\n          style={{\n            width: \"100%\",\n            height: \"auto\",\n          }}\n          width={900}\n        >\n          <ZoomableGroup center={[0, 20]}>\n            <Geographies geography={data}>\n              {(geographies,projection) =>\n                geographies.map((geography,i)=>{\n                  const country = mydata.find(s=> s.name == geography.properties.name );\n                  return (\n                  <Geography\n                    key = {geography.properties.ISO_A3+i}\n                    geography={geography}\n                    onMouseMove={this.handleMove}\n                    onMouseLeave={this.handleLeave}\n                    projection = { projection}\n                    style={{\n                      default: {\n                        fill : country ? popScale(calc(country)) : \"#e8f4f8\",\n                        stroke: \"#607D8B\",\n                        strokeWidth: 0.75,\n                        outline: \"none\",\n                      },\n                      hover: {\n                        fill : country ? popScale(calc(country)+100) : \"#e8f4f8\",\n                        stroke: \"#607D8B\",\n                        strokeWidth: 0.75,\n                        outline: \"none\",\n                      },\n                      pressed: {\n                        fill: \"#263238\",\n                        stroke: \"#607D8B\",\n                        strokeWidth: 0.75,\n                        outline: \"none\",\n                      },\n                    }}\n                  />\n                )\n                  })\n              }\n            \n            </Geographies>\n          </ZoomableGroup>\n        </ComposableMap>\n      </div>\n    );\n  }\n}\n\nexport default ReactSimpleMap;"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
