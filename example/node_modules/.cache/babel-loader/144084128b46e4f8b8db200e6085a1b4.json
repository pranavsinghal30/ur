{"ast":null,"code":"import _classCallCheck from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/src/table.js\";\nimport * as React from \"react\";\nimport { Component } from \"react\";\nimport { Page, Avatar, Icon, Grid, Card, Text, Table, Alert, Progress, colors, Dropdown, Button, StampCard, StatsCard, ProgressCard, Badge } from \"tabler-react\";\nvar data = [{\n  country: \"China\",\n  daily: 5731496,\n  start_date: new Date(2020, 0, 20),\n  end_date: new Date(2020, 2, 20),\n  Total_Saved: 0,\n  optimum_start: new Date(2020, 2, 20),\n  optimum_end: new Date()\n}, {\n  country: \"India\",\n  daily: 1823594,\n  start_date: new Date(2020, 2, 22),\n  end_date: new Date(),\n  Total_Saved: 0,\n  optimum_start: new Date(),\n  optimum_end: new Date()\n}, {\n  country: \"USA\",\n  daily: 12898866,\n  start_date: new Date(),\n  end_date: new Date(),\n  Total_Saved: 0,\n  optimum_start: new Date(2020, 2, 20),\n  optimum_end: new Date()\n}, {\n  country: \"Japan\",\n  daily: 981746,\n  start_date: new Date(),\n  end_date: new Date(),\n  Total_Saved: 0,\n  optimum_start: new Date(2020, 2, 20),\n  optimum_end: new Date()\n}, {\n  country: \"Italy\",\n  daily: 309127 / 0.85,\n  start_date: new Date(2020, 2, 9),\n  end_date: new Date(),\n  Total_Saved: 0,\n  optimum_start: new Date(),\n  optimum_end: new Date()\n}, {\n  country: \"Spain\",\n  daily: 239046 / 0.85,\n  start_date: new Date(2020, 2, 14),\n  end_date: new Date(),\n  Total_Saved: 0,\n  optimum_start: new Date(),\n  optimum_end: new Date()\n}, {\n  country: \"France\",\n  daily: 333728 / 0.85,\n  start_date: new Date(2020, 2, 17),\n  end_date: new Date(),\n  Total_Saved: 0,\n  optimum_start: new Date(),\n  optimum_end: new Date()\n}, {\n  country: \"Germany\",\n  daily: 428368 / 0.85,\n  start_date: new Date(2020, 2, 22),\n  end_date: new Date(),\n  Total_Saved: 0,\n  optimum_start: new Date(),\n  optimum_end: new Date()\n}, {\n  country: \"UK\",\n  daily: 340751 / 0.85,\n  start_date: new Date(2020, 2, 23),\n  end_date: new Date(),\n  Total_Saved: 0,\n  optimum_start: new Date(),\n  optimum_end: new Date()\n}, {\n  country: \"Belgium\",\n  daily: 59255 / 0.85,\n  start_date: new Date(2020, 2, 18),\n  end_date: new Date(),\n  Total_Saved: 0,\n  optimum_start: new Date(),\n  optimum_end: new Date()\n}, {\n  country: \"Rest OF Europe\",\n  daily: 993706 / 0.4,\n  start_date: new Date(),\n  end_date: new Date(),\n  Total_Saved: 0,\n  optimum_start: new Date(2020, 2, 22),\n  optimum_end: new Date()\n}];\n\nfunction value(p, k) {\n  if (k == 'end_date') {\n    return parseInt((p[k] - p['start_date']) / (1000 * 60 * 60 * 24)).toLocaleString(navigator.language, {\n      minimumFractionDigits: 0\n    });\n  } else if (k == 'start_date') {\n    console.log(p['country'] + (p['start_date'].getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\n\n    if (p['start_date'].getTime() == new Date().getTime()) {\n      console.log(\"inside if \");\n      return p['optimum_start'].getDate() + \"/\" + (p['optimum_start'].getMonth() + 1);\n    }\n\n    return p[k].getDate() + \"/\" + (p[k].getMonth() + 1);\n  } else if (k == 'Total_Saved') {\n    return p[\"Total_Saved\"].toLocaleString(navigator.language, {\n      minimumFractionDigits: 0\n    });\n  } else if (k == 'daily') {\n    return p[k].toLocaleString(navigator.language, {\n      minimumFractionDigits: 0\n    });\n  } else if (k == 'optimum_start' || k == 'optimum_end') {\n    return \"\";\n  } else {\n    return p[k].toString();\n  }\n}\n\nvar style = {\n  textAlign: 'centre',\n  width: 100\n};\n\nvar MyTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyTable, _Component);\n\n  function MyTable(props) {\n    var _this;\n\n    _classCallCheck(this, MyTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyTable).call(this, props));\n    _this.data = _this.props.data;\n    return _this;\n  }\n\n  _createClass(MyTable, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Table, {\n        responsive: true,\n        highlightRowOnHover: true,\n        hasOutline: true,\n        verticalAlign: \"center\",\n        cards: true,\n        className: \"text-nowrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Table.ColHeader, {\n        colSpan: 1,\n        alignContent: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Country\"), React.createElement(Table.ColHeader, {\n        alignContent: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Start Date\"), React.createElement(Table.ColHeader, {\n        alignContent: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Days Since Lowered production\"), React.createElement(Table.ColHeader, {\n        alignContent: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Total CO2 emissions from fuel combustion\"), React.createElement(Table.ColHeader, {\n        alignContent: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Other energy industry own use*\"), React.createElement(Table.ColHeader, {\n        alignContent: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Manuf. industries  and construction\"), React.createElement(Table.ColHeader, {\n        alignContent: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Transport\"), React.createElement(Table.ColHeader, {\n        alignContent: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Residential\"), React.createElement(Table.ColHeader, {\n        alignContent: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Commercial and public services\"), React.createElement(Table.ColHeader, {\n        alignContent: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Daily Saving\"), React.createElement(Table.ColHeader, {\n        alignContent: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Total Saved till Now\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.data.map(function (p) {\n        return React.createElement(Table.Row, {\n          key: p.country,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, Object.keys(p).filter(function (k) {\n          return k !== \"Total_Saved\" && k !== \"optimum_start\" && k !== \"optimum_end\" && k !== \"CO2 saved from Manuf, Const & commercial\" && k !== \"CO2 saved from Transport\";\n        }).map(function (k) {\n          return React.createElement(Table.Col, {\n            key: p.country + '' + k,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            suppressContentEditableWarning: \"False\",\n            contentEditable: \"False\",\n            value: k,\n            style: style,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, React.createElement(Text, {\n            size: \"sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, value(p, k))));\n        }));\n      })));\n    }\n  }]);\n\n  return MyTable;\n}(Component);\n\nexport default MyTable;","map":{"version":3,"sources":["/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/src/table.js"],"names":["React","Component","Page","Avatar","Icon","Grid","Card","Text","Table","Alert","Progress","colors","Dropdown","Button","StampCard","StatsCard","ProgressCard","Badge","data","country","daily","start_date","Date","end_date","Total_Saved","optimum_start","optimum_end","value","p","k","parseInt","toLocaleString","navigator","language","minimumFractionDigits","console","log","getTime","getDate","getMonth","toString","style","textAlign","width","MyTable","props","map","Object","keys","filter"],"mappings":"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","sourcesContent":["\n\nimport * as React from \"react\";\nimport { Component } from \"react\";\nimport {\n    Page,\n    Avatar,\n    Icon,\n    Grid,\n    Card,\n    Text,\n    Table,\n    Alert,\n    Progress,\n    colors,\n    Dropdown,\n    Button,\n    StampCard,\n    StatsCard,\n    ProgressCard,\n    Badge,\n  } from \"tabler-react\";\n  const  data = [\n    {country : \"China\", daily : 5731496, start_date : new Date(2020,0,20),end_date : new Date(2020,2,20),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n    {country : \"India\", daily : 1823594, start_date : new Date(2020,2,22),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n    {country : \"USA\", daily : 12898866, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n    {country : \"Japan\", daily : 981746, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,20),optimum_end:new Date()},\n    {country : \"Italy\", daily : 309127/0.85, start_date : new Date(2020,2,9),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n    {country : \"Spain\", daily : 239046/0.85, start_date : new Date(2020,2,14),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n    {country : \"France\", daily : 333728/0.85, start_date : new Date(2020,2,17),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n    {country : \"Germany\", daily : 428368/0.85, start_date : new Date(2020,2,22),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n    {country : \"UK\", daily : 340751/0.85, start_date : new Date(2020,2,23),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n    {country : \"Belgium\", daily :59255/0.85, start_date : new Date(2020,2,18),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(),optimum_end:new Date()},\n    {country : \"Rest OF Europe\", daily : 993706/0.4, start_date : new Date(),end_date : new Date(),Total_Saved : 0,optimum_start:new Date(2020,2,22),optimum_end:new Date()}\n\n  ]\n  function value(p,k)\n  {\n   if (k == 'end_date')\n   {\n       return parseInt((p[k]-p['start_date'])/(1000*60*60*24)).toLocaleString(navigator.language, { minimumFractionDigits: 0 })\n   } \n   else if ( k == 'start_date')\n   {  console.log(p['country']+(p['start_date'].getTime()-(new Date().getTime()))/(1000*60*60*24))\n       if ((p['start_date'].getTime()) == (new Date().getTime()))\n       {console.log(\"inside if \")\n         return p['optimum_start'].getDate()+\"/\"+(p['optimum_start'].getMonth()+1)}\n       \n       return p[k].getDate()+\"/\"+(p[k].getMonth()+1)\n   }\n   else if ( k == 'Total_Saved')\n   {\n       return p[\"Total_Saved\"].toLocaleString(navigator.language, { minimumFractionDigits: 0 })\n   }\n   else if (k == 'daily')\n   {\n     return (p[k]).toLocaleString(navigator.language, { minimumFractionDigits: 0 })\n   }\n   else if (k == 'optimum_start' || k == 'optimum_end')\n   {\n     return \"\"\n   }\n   else \n   {\n       return p[k].toString()\n   }\n  }\nconst style = \n{\n  textAlign : 'centre',\n  width : 100\n}\nclass MyTable extends Component\n{\n  constructor(props)\n  {\n    super(props)\n    this.data = this.props.data;\n  }\n   render()\n   { \n   return (\n   <Table\n   responsive\n   highlightRowOnHover\n   hasOutline\n   verticalAlign=\"center\"\n   cards\n   className=\"text-nowrap\"\n  >\n  \n    <Table.Header>\n      <Table.Row>\n        <Table.ColHeader colSpan={1} alignContent=\"left\">Country</Table.ColHeader>\n        <Table.ColHeader alignContent=\"left\">Start Date</Table.ColHeader>\n        <Table.ColHeader alignContent=\"left\">Days Since Lowered production</Table.ColHeader>\n        <Table.ColHeader alignContent=\"left\">Total CO2 emissions from fuel combustion</Table.ColHeader>        \n        <Table.ColHeader alignContent=\"left\">Other energy industry own use*</Table.ColHeader>\n        <Table.ColHeader alignContent=\"left\">Manuf. industries  and construction</Table.ColHeader>\n        <Table.ColHeader alignContent=\"left\">Transport</Table.ColHeader>\n        <Table.ColHeader alignContent=\"left\">Residential</Table.ColHeader>\n        <Table.ColHeader alignContent=\"left\">Commercial and public services</Table.ColHeader>\n        <Table.ColHeader alignContent=\"left\">Daily Saving</Table.ColHeader>\n        <Table.ColHeader alignContent=\"left\">Total Saved till Now</Table.ColHeader>        \n\n        \n      </Table.Row>\n    </Table.Header>\n    <Table.Body>\n      {this.data.map(p =>\n       <Table.Row key={p.country}>\n           {Object.keys(p).filter(k => (k !== \"Total_Saved\"&&k !== \"optimum_start\" && k !== \"optimum_end\" && k!==\"CO2 saved from Manuf, Const & commercial\"&& k!==\"CO2 saved from Transport\")).map(k => {\n               return (\n                   <Table.Col  key={p.country+''+k}>\n                       <div suppressContentEditableWarning=\"False\" contentEditable=\"False\" value={k}  style = {style}>{/*onInput={this.editColumn.bind(this,{p},{k})}*/}\n                       <Text size=\"sm\" >\n                       {value(p,k)}\n                      </Text></div>\n                       \n                   </Table.Col>\n               );\n           })}\n       </Table.Row>\n       )\n        }\n    </Table.Body>\n    </Table>\n   );\n}\n}\nexport default MyTable;"]},"metadata":{},"sourceType":"module"}