{
  "ast": null,
  "code": "var _jsxFileName = \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/src/HomePage.react.js\";\nimport * as React from \"react\";\nimport ReactSimpleMap from \"./ReactSimpleMap\";\nimport table from \"./table\";\nimport { Page, Avatar, Icon, Grid, Card, Text, Table, Alert, Progress, colors, Dropdown, Button, StampCard, StatsCard, ProgressCard, Badge } from \"tabler-react\";\nimport C3Chart from \"react-c3js\";\nimport SiteWrapper from \"./SiteWrapper.react\";\nimport { list } from \"postcss\";\nvar today = new Date();\nvar arr = [\"data2\"];\nvar v = [\"data1\"];\nvar daily_saving = 0;\nvar i = 0; //console.log(new Date(2020,0,20))\n\nfor (var d = new Date(2020, 0, 14); d <= today; d.setDate(d.getDate() + 1)) {\n  arr.push(d.getDate() + \"/\" + d.getMonth());\n  v.push(i); //console.log(d)\n  //console.log(d.getTime() == new Date(2020,0,20).getTime())\n\n  if (d.getTime() == new Date(2020, 0, 20).getTime()) {\n    //china\n    daily_saving += 57.31496; //console.log(\"in side china\")\n  }\n\n  if (d.getTime() == new Date(2020, 2, 9).getTime()) {\n    // Italy\n    daily_saving += 3.09127;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 14).getTime()) {\n    //spain\n    daily_saving += 2.39046;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 17).getTime()) {\n    //france\n    daily_saving += 3.33728;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //germany\n    daily_saving += 4.28368;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 23).getTime()) {\n    //UK\n    daily_saving += 3.40751;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 18).getTime()) {\n    //belgium\n    daily_saving += 8.29571;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //rest\n    daily_saving += 9.93706;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //india\n    daily_saving += 18.23594;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 28).getTime()) {\n    //USA\n    //console.log(\"USA joins\")\n    daily_saving += 128.98866;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 20).getTime()) {\n    //china leaves\n    //console.log(\"china leaves\")\n    daily_saving -= 57.31496;\n  }\n\n  i = i + daily_saving / 3399;\n}\n\n{\n  /*\n  renderTableData() {\n   return data.map((student, index) => {\n      const { country, daily, start_date, end_date} = cpuntry //destructuring\n      return (\n         <tr>\n            <td>{country}</td>\n            <td>{daily}</td>\n            <td>{start_date}</td>\n            <td>{end_date}</td>\n            <td>{(end_date-start_date)*daily}</td>\n         </tr>\n      )\n   })\n  }\n  */\n}\nvar estimation = 33.99;\nvar style = {\n  position: 'absolute',\n  top: 0,\n  // computed based on child and parent's height\n  right: 40,\n  fontSize: 28,\n  textAlign: 'center',\n  fontWeight: 'bold',\n  fontstyle: 'italic'\n};\n\nfunction Home() {\n  return React.createElement(Page.Content, {\n    title: \"Dexler Energy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"http://www.dexlerenergy.com/\",\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Visit Us\"), React.createElement(Grid.Row, {\n    cards: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Grid.Col, {\n    width: 5,\n    sm: 4,\n    lg: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(StatsCard, {\n    layout: 1,\n    movement: -15,\n    total: \"15%\",\n    label: \"GDP Loss\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  })), React.createElement(Grid.Col, {\n    width: 5,\n    sm: 6,\n    lg: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(StatsCard, {\n    layout: 1,\n    movement: 3,\n    total: estimation + \" GT\",\n    label: \"Expected Carbon Emission\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), React.createElement(Grid.Col, {\n    width: 5,\n    sm: 6,\n    lg: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(StatsCard, {\n    layout: 1,\n    movement: (100 / 365).toFixed(2),\n    total: parseInt((new Date() - new Date(2019, 9, 1)) / (1000 * 60 * 60 * 24)),\n    label: \"Days Since COVID-19\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })), React.createElement(Grid.Col, {\n    width: 5,\n    sm: 4,\n    lg: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(StatsCard, {\n    layout: 1,\n    movement: ((v[v.length - 1] - v[v.length - 2]) * 100 / v[v.length - 1]).toFixed(2),\n    total: (estimation * v[v.length - 1] / 100).toFixed(2) + \" GT\",\n    label: \"CO2 Emissions Saved\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })), React.createElement(Grid.Col, {\n    width: 5,\n    sm: 4,\n    lg: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(StatsCard, {\n    layout: 1,\n    movement: ((v[v.length - 1] - v[v.length - 2]) * 100 / v[v.length - 1]).toFixed(2),\n    total: v[v.length - 1].toFixed(2) + \" %\",\n    label: \"Savings out of Total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })), React.createElement(Grid.Col, {\n    lg: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Development Activity\")), React.createElement(C3Chart, {\n    style: {\n      height: \"10rem\"\n    },\n    data: {\n      columns: [v],\n      type: \"area\",\n      // default type of chart\n      groups: [[\"data1\", \"data2\", \"data3\"]],\n      colors: {\n        data1: colors[\"green\"]\n      },\n      names: {\n        // name of each serie\n        data1: \"CO2 savings\"\n      },\n      axes: {\n        data1: 'y2',\n        data2: 'x1'\n      }\n    },\n    axis: {\n      y2: {\n        padding: {\n          bottom: 0\n        },\n        show: true\n      },\n      x: {\n        padding: {\n          left: 0,\n          right: 0\n        },\n        show: true\n      }\n    },\n    legend: {\n      position: \"inset\",\n      padding: 0,\n      inset: {\n        anchor: \"top-left\",\n        x: 20,\n        y: 8,\n        step: 10\n      }\n    },\n    tooltip: {\n      format: {\n        title: function title(x) {\n          return \"\";\n        }\n      }\n    },\n    padding: {\n      bottom: 0,\n      left: -1,\n      right: -1\n    },\n    point: {\n      show: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), table())), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, React.createElement(Grid.Col, {\n    width: 6,\n    lg: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, React.createElement(Card, {\n    title: \"World population map\",\n    body: React.createElement(ReactSimpleMap, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  })))));\n}\n\nexport default Home;",
  "map": {
    "version": 3,
    "sources": [
      "/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/src/HomePage.react.js"
    ],
    "names": [
      "React",
      "ReactSimpleMap",
      "table",
      "Page",
      "Avatar",
      "Icon",
      "Grid",
      "Card",
      "Text",
      "Table",
      "Alert",
      "Progress",
      "colors",
      "Dropdown",
      "Button",
      "StampCard",
      "StatsCard",
      "ProgressCard",
      "Badge",
      "C3Chart",
      "SiteWrapper",
      "list",
      "today",
      "Date",
      "arr",
      "v",
      "daily_saving",
      "i",
      "d",
      "setDate",
      "getDate",
      "push",
      "getMonth",
      "getTime",
      "estimation",
      "style",
      "position",
      "top",
      "right",
      "fontSize",
      "textAlign",
      "fontWeight",
      "fontstyle",
      "Home",
      "toFixed",
      "parseInt",
      "length",
      "height",
      "columns",
      "type",
      "groups",
      "data1",
      "names",
      "axes",
      "data2",
      "y2",
      "padding",
      "bottom",
      "show",
      "x",
      "left",
      "inset",
      "anchor",
      "y",
      "step",
      "format",
      "title"
    ],
    "mappings": "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",
    "sourcesContent": [
      "// @flow\n\nimport * as React from \"react\";\nimport ReactSimpleMap from \"./ReactSimpleMap\";\nimport table from \"./table\";\n\n\nimport {\n  Page,\n  Avatar,\n  Icon,\n  Grid,\n  Card,\n  Text,\n  Table,\n  Alert,\n  Progress,\n  colors,\n  Dropdown,\n  Button,\n  StampCard,\n  StatsCard,\n  ProgressCard,\n  Badge,\n} from \"tabler-react\";\n\nimport C3Chart from \"react-c3js\";\n\nimport SiteWrapper from \"./SiteWrapper.react\";\nimport { list } from \"postcss\";\n\nvar today = new Date();\nvar arr = [\"data2\"];\nvar v = [\"data1\"];\nvar daily_saving = 0;\nvar i = 0;\n\n//console.log(new Date(2020,0,20))\nfor (var d = new Date(2020,0,14);d <= today ;d.setDate(d.getDate()+1))\n{\n  arr.push(d.getDate()+\"/\"+d.getMonth());\n  v.push(i);\n  //console.log(d)\n  //console.log(d.getTime() == new Date(2020,0,20).getTime())\n  \n  if (d.getTime() == new Date(2020,0,20).getTime())\n  {//china\n    daily_saving+=57.31496;\n    //console.log(\"in side china\")\n  }\n  if (d.getTime() == new Date(2020,2,9).getTime())\n  { // Italy\n    daily_saving+=3.09127;\n  }\n  if (d.getTime() == new Date(2020,2,14).getTime())\n  {//spain\n    daily_saving+=2.39046;\n  }  \n  if (d.getTime() == new Date(2020,2,17).getTime())\n  {//france\n    daily_saving+=3.33728;\n  }\n  if (d.getTime() == new Date(2020,2,22).getTime())\n  {//germany\n    daily_saving+=4.28368;\n  }\n  if (d.getTime() == new Date(2020,2,23).getTime())\n  {//UK\n    daily_saving+=3.40751;\n  }\n  if (d.getTime() == new Date(2020,2,18).getTime())\n  {//belgium\n    daily_saving+=8.29571;\n  }\n  if (d.getTime() == new Date(2020,2,22).getTime())\n  {//rest\n    daily_saving+=9.93706;\n  }\n  if (d.getTime() == new Date(2020,2,22).getTime())\n  {//india\n    daily_saving+=18.23594;\n  }\n  if (d.getTime() == new Date(2020,2,28).getTime())\n  {//USA\n    //console.log(\"USA joins\")\n    daily_saving+=128.98866;\n  }\n  if (d.getTime() == new Date(2020,2,20).getTime())\n  {//china leaves\n    //console.log(\"china leaves\")\n    daily_saving-=57.31496;\n  }\n  i = i+daily_saving/3399;\n}\n{/*\nrenderTableData() {\n  return data.map((student, index) => {\n     const { country, daily, start_date, end_date} = cpuntry //destructuring\n     return (\n        <tr>\n           <td>{country}</td>\n           <td>{daily}</td>\n           <td>{start_date}</td>\n           <td>{end_date}</td>\n           <td>{(end_date-start_date)*daily}</td>\n        </tr>\n     )\n  })\n}\n*/}\nvar estimation = 33.99 \nconst style =  {\n  position: 'absolute',\n    top: 0,    // computed based on child and parent's height\n    right : 40,\n    fontSize :  28,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontstyle: 'italic'\n};\nfunction Home() {\n\n\n  return (\n    \n      <Page.Content title=\"Dexler Energy\">\n        \n            <a href= \"http://www.dexlerenergy.com/\" style = {style}>Visit Us</a>\n\n        <Grid.Row cards={true}>\n          <Grid.Col width={5} sm={4} lg={2}>\n            <StatsCard layout={1} movement={-15} total=\"15%\" label=\"GDP Loss\" />\n          </Grid.Col>\n          <Grid.Col width={5} sm={6} lg={2}>\n            <StatsCard\n              layout={1}\n              movement={3}\n              total={estimation + \" GT\"}\n              label=\"Expected Carbon Emission\"\n            />\n          </Grid.Col>\n          <Grid.Col width={5} sm={6} lg={2}>\n            <StatsCard layout={1} movement = {(100/365).toFixed(2)} total={ parseInt((new Date() - new Date(2019,9,1))/(1000*60*60*24)) } label=\"Days Since COVID-19\" />\n          </Grid.Col>\n          <Grid.Col width={5} sm={4} lg={2}>\n            <StatsCard\n              layout={1}\n              movement={((v[v.length-1]-v[v.length-2])*100/v[v.length -1]).toFixed(2)}\n              total={(estimation * v[v.length -1]/100).toFixed(2)+\" GT\"}\n              label=\"CO2 Emissions Saved\"\n            />\n          </Grid.Col>\n          <Grid.Col width={5} sm={4} lg={2}>\n            <StatsCard\n              layout={1}\n              movement={((v[v.length-1]-v[v.length-2])*100/v[v.length -1]).toFixed(2)}\n              total={(v[v.length -1]).toFixed(2)+\" %\"}\n              label=\"Savings out of Total\"\n            />\n          </Grid.Col>\n          {/*<Grid.Col width={6} sm={4} lg={2}>\n            <StatsCard layout={1} movement={-1} total=\"621\" label=\"Products\" />\n  </Grid.Col>*/}\n  <Grid.Col lg={12}>\n            <Card>\n              <Card.Header>\n                <Card.Title>Development Activity</Card.Title>\n              </Card.Header>\n              <C3Chart\n                style={{ height: \"10rem\" }}\n                data={{\n                  columns: [v],                  \n                  type: \"area\", // default type of chart\n                  groups: [[\"data1\", \"data2\", \"data3\"]],\n                  colors: {\n                    data1: colors[\"green\"],\n                  },\n                  names: {\n                    // name of each serie\n                    data1: \"CO2 savings\",\n                  },\n                  axes : {  data1: 'y2',\n                            data2:'x1'}\n                }}\n                axis={{\n                  y2: {\n\n                    padding: {\n                      bottom: 0,\n                    },\n                    show:true,\n                    },\n                  x: {\n                    padding: {\n                      left: 0,\n                      right: 0,\n                    },\n                    show: true,\n                  },\n                }}\n                legend={{\n                  position: \"inset\",\n                  padding: 0,\n                  inset: {\n                    anchor: \"top-left\",\n                    x: 20,\n                    y: 8,\n                    step: 10,\n                  },\n                }}\n                tooltip={{\n                  format: {\n                    title: function(x) {\n                      return \"\";\n                    },\n                  },\n                }}\n                padding={{\n                  bottom: 0,\n                  left: -1,\n                  right: -1,\n                }}\n                point={{\n                  show: false,\n                }}\n              />  \n             \n              \n                  {table()}\n                  {/*\n                  <Table.Row>\n                    <Table.Col className=\"w-1\">\n                      <Avatar imageURL=\"./demo/faces/male/9.jpg\" />\n                    </Table.Col>\n                    \n                    <Table.Col>China</Table.Col>\n                    <Table.Col>57.3</Table.Col>\n                    <Table.Col className=\"text-nowrap\">Jan 14, 2019</Table.Col>\n                    <Table.Col className=\"text-nowrap\">20</Table.Col>\n                    <Table.Col className=\"text-nowrap\">{57.3*20}</Table.Col>\n                      </Table.Row>\n                  <Table.Row>\n                    <Table.Col>\n                      <Avatar>BM</Avatar>\n                    </Table.Col>\n                    <Table.Col>Russell Gibson</Table.Col>\n                    <Table.Col>Main structure</Table.Col>\n                    <Table.Col className=\"text-nowrap\">\n                      April 22, 2018\n                    </Table.Col>\n                    <Table.Col>\n                      <Icon link={true} name=\"trash\" />\n                    </Table.Col>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Col>\n                      <Avatar imageURL=\"./demo/faces/female/1.jpg\" />\n                    </Table.Col>\n                    <Table.Col>Beverly Armstrong</Table.Col>\n                    <Table.Col>Left sidebar adjustments</Table.Col>\n                    <Table.Col className=\"text-nowrap\">\n                      April 15, 2018\n                    </Table.Col>\n                    <Table.Col>\n                      <Icon link={true} name=\"trash\" />\n                    </Table.Col>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Col>\n                      <Avatar imageURL=\"./demo/faces/male/4.jpg\" />\n                    </Table.Col>\n                    <Table.Col>Bobby Knight</Table.Col>\n                    <Table.Col>Topbar dropdown style</Table.Col>\n                    <Table.Col className=\"text-nowrap\">April 8, 2018</Table.Col>\n                    <Table.Col>\n                      <Icon link={true} name=\"trash\" />\n                    </Table.Col>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Col>\n                      <Avatar imageURL=\"./demo/faces/female/11.jpg\" />\n                    </Table.Col>\n                    <Table.Col>Sharon Wells</Table.Col>\n                    <Table.Col>Fixes #625</Table.Col>\n                    <Table.Col className=\"text-nowrap\">April 9, 2018</Table.Col>\n                    <Table.Col>\n                      <Icon link={true} name=\"trash\" />\n                    </Table.Col>\n                  </Table.Row>\n                 \n                </Table.Body>\n              </Table>\n               */}\n            </Card>\n          </Grid.Col>\n          <Grid.Row>\n            <Grid.Col width = {6} lg={12}>\n            <Card title=\"World population map\" body={<ReactSimpleMap />}/>\n            </Grid.Col>\n          </Grid.Row>\n          {/*\n          <Grid.Col md={6}>\n          \n            <Alert type=\"primary\">\n              <Alert.Link\n                href={\n                  process.env.NODE_ENV === \"production\"\n                    ? \"https://tabler.github.io/tabler-react/documentation\"\n                    : \"/documentation\"\n                }\n              >\n                Read our documentation\n              </Alert.Link>{\" \"}\n              with code samples.\n              </Alert>*/}\n         {/*<Grid.Row>\n              <Grid.Col sm={6}>\n                <Card>\n                  <Card.Header>\n                    <Card.Title>Chart title</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                    <C3Chart\n                      style={{ height: \"12rem\" }}\n                      data={{\n                        columns: [\n                          // each columns data\n                          [\"data1\", 63],\n                          [\"data2\", 37],\n                        ],\n                        type: \"donut\", // default type of chart\n                        colors: {\n                          data1: colors[\"green\"],\n                          data2: colors[\"green-light\"],\n                        },\n                        names: {\n                          // name of each serie\n                          data1: \"Maximum\",\n                          data2: \"Minimum\",\n                        },\n                      }}\n                      legend={{\n                        show: false, //hide legend\n                      }}\n                      padding={{\n                        bottom: 0,\n                        top: 0,\n                      }}\n                    />\n                  </Card.Body>\n                </Card>\n              </Grid.Col>\n              <Grid.Col sm={6}>\n                <Card>\n                  <Card.Header>\n                    <Card.Title>Chart title</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                    <C3Chart\n                      style={{ height: \"12rem\" }}\n                      data={{\n                        columns: [\n                          // each columns data\n                          [\"data1\", 63],\n                          [\"data2\", 44],\n                          [\"data3\", 12],\n                          [\"data4\", 14],\n                        ],\n                        type: \"pie\", // default type of chart\n                        colors: {\n                          data1: colors[\"blue-darker\"],\n                          data2: colors[\"blue\"],\n                          data3: colors[\"blue-light\"],\n                          data4: colors[\"blue-lighter\"],\n                        },\n                        names: {\n                          // name of each serie\n                          data1: \"A\",\n                          data2: \"B\",\n                          data3: \"C\",\n                          data4: \"D\",\n                        },\n                      }}\n                      legend={{\n                        show: false, //hide legend\n                      }}\n                      padding={{\n                        bottom: 0,\n                        top: 0,\n                      }}\n                    />\n                  </Card.Body>\n                </Card>\n              </Grid.Col>\n              <Grid.Col sm={6}>\n                <ProgressCard\n                  header=\"New feedback\"\n                  content=\"62\"\n                  progressColor=\"red\"\n                  progressWidth={28}\n                />\n              </Grid.Col>\n              <Grid.Col sm={6}>\n                <ProgressCard\n                  header=\"Today profit\"\n                  content=\"$652\"\n                  progressColor=\"green\"\n                  progressWidth={84}\n                />\n              </Grid.Col>\n              <Grid.Col sm={6}>\n                <ProgressCard\n                  header=\"Users online\"\n                  content=\"76\"\n                  progressColor=\"yellow\"\n                  progressWidth={34}\n                />\n              </Grid.Col>\n                    </Grid.Row> \n          </Grid.Col>\n          \n          <Grid.Col sm={6} lg={3}>\n            <StampCard\n              color=\"blue\"\n              icon=\"dollar-sign\"\n              header={\n                <a href=\"#\">\n                  132 <small>Sales</small>\n                </a>\n              }\n              footer={\"12 waiting payments\"}\n            />\n            </Grid.Col>\n          <Grid.Col sm={6} lg={3}>\n            <StampCard\n              color=\"green\"\n              icon=\"shopping-cart\"\n              header={\n                <a href=\"#\">\n                  78 <small>Orders</small>\n                </a>\n              }\n              footer={\"32 shipped\"}\n            />\n            </Grid.Col>\n          <Grid.Col sm={6} lg={3}>\n            <StampCard\n              color=\"red\"\n              icon=\"users\"\n              header={\n                <a href=\"#\">\n                  1,352 <small>Members</small>\n                </a>\n              }\n              footer={\"163 registered today\"}\n            />\n            </Grid.Col>\n          <Grid.Col sm={6} lg={3}>\n            <StampCard\n              color=\"yellow\"\n              icon=\"message-square\"\n              header={\n                <a href=\"#\">\n                  132 <small>Comments</small>\n                </a>\n              }\n              footer={\"16 waiting\"}\n            />\n            </Grid.Col>*/}\n        </Grid.Row>\n        {/*\n        <Grid.Row cards deck>\n          <Grid.Col width={12}>\n            <Card>\n              <Table\n                responsive\n                highlightRowOnHover\n                hasOutline\n                verticalAlign=\"center\"\n                cards\n                className=\"text-nowrap\"\n              >\n                <Table.Header>\n                  <Table.Row>\n                    <Table.ColHeader alignContent=\"center\" className=\"w-1\">\n                      <i className=\"icon-people\" />\n                    </Table.ColHeader>\n                    <Table.ColHeader>User</Table.ColHeader>\n                    <Table.ColHeader>Usage</Table.ColHeader>\n                    <Table.ColHeader alignContent=\"center\">\n                      Payment\n                    </Table.ColHeader>\n                    <Table.ColHeader>Activity</Table.ColHeader>\n                    <Table.ColHeader alignContent=\"center\">\n                      Satisfaction\n                    </Table.ColHeader>\n                    <Table.ColHeader alignContent=\"center\">\n                      <i className=\"icon-settings\" />\n                    </Table.ColHeader>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  <Table.Row>\n                    <Table.Col alignContent=\"center\">\n                      <Avatar\n                        imageURL=\"demo/faces/female/26.jpg\"\n                        className=\"d-block\"\n                        status=\"green\"\n                      />\n                    </Table.Col>\n                    <Table.Col>\n                      <div>Elizabeth Martin</div>\n                      <Text size=\"sm\" muted>\n                        Registered: Mar 19, 2018\n                      </Text>\n                    </Table.Col>\n                    <Table.Col>\n                      <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                          <strong>42%</strong>\n                        </div>\n                        <div className=\"float-right\">\n                          <Text.Small muted>\n                            Jun 11, 2015 - Jul 10, 2015\n                          </Text.Small>\n                        </div>\n                      </div>\n                      <Progress size=\"xs\">\n                        <Progress.Bar color=\"yellow\" width={42} />\n                      </Progress>\n                    </Table.Col>\n                    <Table.Col alignContent=\"center\">\n                      <Icon payment name=\"visa\" />\n                    </Table.Col>\n                    <Table.Col>\n                      <Text size=\"sm\" muted>\n                        Last login\n                      </Text>\n                      <div>4 minutes ago</div>\n                    </Table.Col>\n                    <Table.Col alignContent=\"center\">42%</Table.Col>\n                    <Table.Col alignContent=\"center\">\n                      <Dropdown\n                        trigger={\n                          <Dropdown.Trigger\n                            icon=\"more-vertical\"\n                            toggle={false}\n                          />\n                        }\n                        position=\"right\"\n                        items={\n                          <React.Fragment>\n                            <Dropdown.Item icon=\"tag\">Action </Dropdown.Item>\n                            <Dropdown.Item icon=\"edit-2\">\n                              Another action{\" \"}\n                            </Dropdown.Item>\n                            <Dropdown.Item icon=\"message-square\">\n                              Something else here\n                            </Dropdown.Item>\n                            <Dropdown.ItemDivider />\n                            <Dropdown.Item icon=\"link\">\n                              {\" \"}\n                              Separated link\n                            </Dropdown.Item>\n                          </React.Fragment>\n                        }\n                      />\n                    </Table.Col>\n                  </Table.Row>\n                </Table.Body>\n              </Table>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n                      */}\n        {/*\n        <Grid.Row>\n          <Grid.Col sm={6} lg={4}>\n            <Card title=\"Browser Stats\">\n              <Table className=\"card-table\">\n                <Table.Row>\n                  <Table.Col>\n                    <Icon prefix=\"fa\" name=\"chrome\" className=\"text-muted\" />\n                  </Table.Col>\n                  <Table.Col>Google Chrome</Table.Col>\n                  <Table.Col className=\"text-right\">\n                    <Text RootComponent=\"span\" muted>\n                      23%\n                    </Text>\n                  </Table.Col>\n                </Table.Row>\n              </Table>\n            </Card>\n          </Grid.Col>\n          <Grid.Col sm={6} lg={4}>\n            <Card title=\"Projects\">\n              <Table cards>\n                <Table.Row>\n                  <Table.Col>Admin Template</Table.Col>\n                  <Table.Col alignContent=\"right\">\n                    <Badge color=\"default\">65%</Badge>\n                  </Table.Col>\n                </Table.Row>\n              </Table>\n            </Card>\n          </Grid.Col>\n          <Grid.Col md={6} lg={4}>\n            <Card title=\"Members\">\n              <Card.Body>\n                <ul className=\"list-unstyled list-separated\">\n                  <li className=\"list-separated-item\">\n                    <Grid.Row className=\"align-items-center\">\n                      <Grid.Col auto>\n                        <Avatar\n                          size=\"md\"\n                          className=\"d-block\"\n                          imageURL=\"demo/faces/female/12.jpg\"\n                        />\n                      </Grid.Col>\n                      <Grid.Col>\n                        <div>\n                          <a className=\"text-inherit\" href=\"#\">\n                            Amanda Hunt\n                          </a>\n                        </div>\n                        <Text.Small muted className=\"d-block item-except h-1x\">\n                          amanda_hunt@example.com\n                        </Text.Small>\n                      </Grid.Col>\n                      <Grid.Col auto>\n                        <Dropdown\n                          trigger={\n                            <Dropdown.Trigger\n                              icon=\"more-vertical\"\n                              toggle={false}\n                            />\n                          }\n                          position=\"right\"\n                          items={\n                            <React.Fragment>\n                              <Dropdown.Item icon=\"tag\">Action </Dropdown.Item>\n                              <Dropdown.Item icon=\"edit-2\">\n                                {\" \"}\n                                Another action{\" \"}\n                              </Dropdown.Item>\n                              <Dropdown.Item icon=\"message-square\">\n                                {\" \"}\n                                Something else here\n                              </Dropdown.Item>\n                              <Dropdown.ItemDivider />\n                              <Dropdown.Item icon=\"link\">\n                                {\" \"}\n                                Separated link\n                              </Dropdown.Item>\n                            </React.Fragment>\n                          }\n                        />\n                      </Grid.Col>\n                    </Grid.Row>\n                  </li>\n                </ul>\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n          <Grid.Col md={6} lg={12}>\n            <Grid.Row>\n              <Grid.Col sm={6} lg={3}>\n                <StatsCard\n                  layout={2}\n                  movement={5}\n                  total=\"423\"\n                  label=\"Users online\"\n                  chart={\n                    <C3Chart\n                      style={{ height: \"100%\" }}\n                      padding={{\n                        bottom: -10,\n                        left: -1,\n                        right: -1,\n                      }}\n                      data={{\n                        names: {\n                          data1: \"Users online\",\n                        },\n                        columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\n                        type: \"area\",\n                      }}\n                      legend={{\n                        show: false,\n                      }}\n                      transition={{\n                        duration: 0,\n                      }}\n                      point={{\n                        show: false,\n                      }}\n                      tooltip={{\n                        format: {\n                          title: function(x) {\n                            return \"\";\n                          },\n                        },\n                      }}\n                      axis={{\n                        y: {\n                          padding: {\n                            bottom: 0,\n                          },\n                          show: false,\n                          tick: {\n                            outer: false,\n                          },\n                        },\n                        x: {\n                          padding: {\n                            left: 0,\n                            right: 0,\n                          },\n                          show: false,\n                        },\n                      }}\n                      color={{\n                        pattern: [\"#467fcf\"],\n                      }}\n                    />\n                  }\n                />\n              </Grid.Col>\n              <Grid.Col sm={6} lg={3}>\n                <StatsCard\n                  layout={2}\n                  movement={-3}\n                  total=\"423\"\n                  label=\"Users online\"\n                  chart={\n                    <C3Chart\n                      style={{ height: \"100%\" }}\n                      padding={{\n                        bottom: -10,\n                        left: -1,\n                        right: -1,\n                      }}\n                      data={{\n                        names: {\n                          data1: \"Users online\",\n                        },\n                        columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\n                        type: \"area\",\n                      }}\n                      legend={{\n                        show: false,\n                      }}\n                      transition={{\n                        duration: 0,\n                      }}\n                      point={{\n                        show: false,\n                      }}\n                      tooltip={{\n                        format: {\n                          title: function(x) {\n                            return \"\";\n                          },\n                        },\n                      }}\n                      axis={{\n                        y: {\n                          padding: {\n                            bottom: 0,\n                          },\n                          show: false,\n                          tick: {\n                            outer: false,\n                          },\n                        },\n                        x: {\n                          padding: {\n                            left: 0,\n                            right: 0,\n                          },\n                          show: false,\n                        },\n                      }}\n                      color={{\n                        pattern: [\"#e74c3c\"],\n                      }}\n                    />\n                  }\n                />\n              </Grid.Col>\n              <Grid.Col sm={6} lg={3}>\n                <StatsCard\n                  layout={2}\n                  movement={-3}\n                  total=\"423\"\n                  label=\"Users online\"\n                  chart={\n                    <C3Chart\n                      style={{ height: \"100%\" }}\n                      padding={{\n                        bottom: -10,\n                        left: -1,\n                        right: -1,\n                      }}\n                      data={{\n                        names: {\n                          data1: \"Users online\",\n                        },\n                        columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\n                        type: \"area\",\n                      }}\n                      legend={{\n                        show: false,\n                      }}\n                      transition={{\n                        duration: 0,\n                      }}\n                      point={{\n                        show: false,\n                      }}\n                      tooltip={{\n                        format: {\n                          title: function(x) {\n                            return \"\";\n                          },\n                        },\n                      }}\n                      axis={{\n                        y: {\n                          padding: {\n                            bottom: 0,\n                          },\n                          show: false,\n                          tick: {\n                            outer: false,\n                          },\n                        },\n                        x: {\n                          padding: {\n                            left: 0,\n                            right: 0,\n                          },\n                          show: false,\n                        },\n                      }}\n                      color={{\n                        pattern: [\"#5eba00\"],\n                      }}\n                    />\n                  }\n                />\n              </Grid.Col>\n              <Grid.Col sm={6} lg={3}>\n                <StatsCard\n                  layout={2}\n                  movement={9}\n                  total=\"423\"\n                  label=\"Users online\"\n                  chart={\n                    <C3Chart\n                      style={{ height: \"100%\" }}\n                      padding={{\n                        bottom: -10,\n                        left: -1,\n                        right: -1,\n                      }}\n                      data={{\n                        names: {\n                          data1: \"Users online\",\n                        },\n                        columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\n                        type: \"area\",\n                      }}\n                      legend={{\n                        show: false,\n                      }}\n                      transition={{\n                        duration: 0,\n                      }}\n                      point={{\n                        show: false,\n                      }}\n                      tooltip={{\n                        format: {\n                          title: function(x) {\n                            return \"\";\n                          },\n                        },\n                      }}\n                      axis={{\n                        y: {\n                          padding: {\n                            bottom: 0,\n                          },\n                          show: false,\n                          tick: {\n                            outer: false,\n                          },\n                        },\n                        x: {\n                          padding: {\n                            left: 0,\n                            right: 0,\n                          },\n                          show: false,\n                        },\n                      }}\n                      color={{\n                        pattern: [\"#f1c40f\"],\n                      }}\n                    />\n                  }\n                />\n              </Grid.Col>\n            </Grid.Row>\n          </Grid.Col>\n          <Grid.Col width={12}>\n            <Card title=\"Invoices\">\n              <Table\n                responsive\n                className=\"card-table table-vcenter text-nowrap\"\n                headerItems={[\n                  { content: \"No.\", className: \"w-1\" },\n                  { content: \"Invoice Subject\" },\n                  { content: \"Client\" },\n                  { content: \"VAT No.\" },\n                  { content: \"Created\" },\n                  { content: \"Status\" },\n                  { content: \"Price\" },\n                  { content: null },\n                  { content: null },\n                ]}\n                bodyItems={[\n                  {\n                    key: \"1\",\n                    item: [\n                      {\n                        content: (\n                          <Text RootComponent=\"span\" muted>\n                            001401\n                          </Text>\n                        ),\n                      },\n                      {\n                        content: (\n                          <a href=\"invoice.html\" className=\"text-inherit\">\n                            Design Works\n                          </a>\n                        ),\n                      },\n                      { content: \"Carlson Limited\" },\n                      { content: \"87956621\" },\n                      { content: \"15 Dec 2017\" },\n                      {\n                        content: (\n                          <React.Fragment>\n                            <span className=\"status-icon bg-success\" /> Paid\n                          </React.Fragment>\n                        ),\n                      },\n                      { content: \"$887\" },\n                      {\n                        alignContent: \"right\",\n                        content: (\n                          <React.Fragment>\n                            <Button size=\"sm\" color=\"secondary\">\n                              Manage\n                            </Button>\n                            <div className=\"dropdown\">\n                              <Button\n                                color=\"secondary\"\n                                size=\"sm\"\n                                isDropdownToggle\n                              >\n                                Actions\n                              </Button>\n                            </div>\n                          </React.Fragment>\n                        ),\n                      },\n                      { content: <Icon link name=\"edit\" /> },\n                    ],\n                  },\n                ]}\n              />\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n              */}\n      </Page.Content>\n    \n  );\n}\n\nexport default Home;"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
