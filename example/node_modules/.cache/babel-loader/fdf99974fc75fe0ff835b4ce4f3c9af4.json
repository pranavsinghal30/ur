{
  "ast": null,
  "code": "var _jsxFileName = \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/src/table.js\";\nimport * as React from \"react\";\nimport { Page, Avatar, Icon, Grid, Card, Text, Table, Alert, Progress, colors, Dropdown, Button, StampCard, StatsCard, ProgressCard, Badge } from \"tabler-react\";\n\nfunction value(p, k) {\n  if (k == 'end_date') {\n    return parseInt((p[k] - p['start_date']) / (1000 * 60 * 60 * 24));\n  } else if (k == 'start_date') {\n    return p[k].getDate() + \"/\" + p[k].getMonth();\n  } else if (k == 'Total_Saved') {\n    return (parseInt((p['end_date'] - p['start_date']) / (1000 * 60 * 60 * 24)) * p['daily']).toFixed(2);\n  } else if (k == 'daily') {\n    return p[k].toFixed(2);\n  } else {\n    return p[k].toString();\n  }\n}\n\nvar style = {\n  textAlign: 'right',\n  padding: 40\n};\nexport default function table() {\n  var data = [{\n    country: \"China\",\n    daily: 5731456,\n    start_date: new Date(2020, 1, 14),\n    end_date: new Date(2020, 2, 20),\n    Total_Saved: 0\n  }, {\n    country: \"India\",\n    daily: 1823594,\n    start_date: new Date(2020, 2, 22),\n    end_date: new Date(),\n    Total_Saved: 0\n  }, {\n    country: \"USA\",\n    daily: 12898866,\n    start_date: new Date(2020, 2, 28),\n    end_date: new Date(),\n    Total_Saved: 0\n  }, {\n    country: \"Japan\",\n    daily: 5731456,\n    start_date: new Date(2020, 1, 14),\n    end_date: new Date(),\n    Total_Saved: 0\n  }, {\n    country: \"Italy\",\n    daily: 309127,\n    start_date: new Date(2020, 2, 9),\n    end_date: new Date(),\n    Total_Saved: 0\n  }, {\n    country: \"spain\",\n    daily: 239046,\n    start_date: new Date(2020, 2, 14),\n    end_date: new Date(),\n    Total_Saved: 0\n  }, {\n    country: \"france\",\n    daily: 333728,\n    start_date: new Date(2020, 2, 17),\n    end_date: new Date(),\n    Total_Saved: 0\n  }, {\n    country: \"germany\",\n    daily: 428368,\n    start_date: new Date(2020, 2, 22),\n    end_date: new Date(),\n    Total_Saved: 0\n  }, {\n    country: \"UK\",\n    daily: 340751,\n    start_date: new Date(2020, 2, 23),\n    end_date: new Date(),\n    Total_Saved: 0\n  }, {\n    country: \"Belgium\",\n    daily: 829571,\n    start_date: new Date(2020, 1, 14),\n    end_date: new Date(),\n    Total_Saved: 0\n  }];\n  return React.createElement(Table, {\n    cards: true,\n    striped: true,\n    responsive: true,\n    className: \"table-vcenter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Table.ColHeader, {\n    colSpan: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Country\"), React.createElement(Table.ColHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Daily Saving MT of CO2\"), React.createElement(Table.ColHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Date of Lockdown\"), React.createElement(Table.ColHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Days Since Lockdown\"), React.createElement(Table.ColHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Total CO2 saved \"), React.createElement(Table.ColHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, data.map(function (p) {\n    return React.createElement(Table.Row, {\n      key: p.country,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, Object.keys(p).filter(function (k) {\n      return k !== '';\n    }).map(function (k) {\n      return React.createElement(Table.Col, {\n        key: p.country + '' + k,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        suppressContentEditableWarning: \"true\",\n        contentEditable: \"true\",\n        value: k,\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, value(p, k)));\n    }));\n  })));\n}",
  "map": {
    "version": 3,
    "sources": [
      "/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/src/table.js"
    ],
    "names": [
      "React",
      "Page",
      "Avatar",
      "Icon",
      "Grid",
      "Card",
      "Text",
      "Table",
      "Alert",
      "Progress",
      "colors",
      "Dropdown",
      "Button",
      "StampCard",
      "StatsCard",
      "ProgressCard",
      "Badge",
      "value",
      "p",
      "k",
      "parseInt",
      "getDate",
      "getMonth",
      "toFixed",
      "toString",
      "style",
      "textAlign",
      "padding",
      "table",
      "data",
      "country",
      "daily",
      "start_date",
      "Date",
      "end_date",
      "Total_Saved",
      "map",
      "Object",
      "keys",
      "filter"
    ],
    "mappings": "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",
    "sourcesContent": [
      "\n\nimport * as React from \"react\";\nimport {\n    Page,\n    Avatar,\n    Icon,\n    Grid,\n    Card,\n    Text,\n    Table,\n    Alert,\n    Progress,\n    colors,\n    Dropdown,\n    Button,\n    StampCard,\n    StatsCard,\n    ProgressCard,\n    Badge,\n  } from \"tabler-react\";\n  function value(p,k)\n  {\n   if (k == 'end_date')\n   {\n       return parseInt((p[k]-p['start_date'])/(1000*60*60*24))\n   } \n   else if ( k == 'start_date')\n   {\n       return p[k].getDate()+\"/\"+p[k].getMonth()\n   }\n   else if ( k == 'Total_Saved')\n   {\n       return (parseInt((p['end_date']-p['start_date'])/(1000*60*60*24))*p['daily']).toFixed(2)\n   }\n   else if (k == 'daily')\n   {\n     return (p[k]).toFixed(2)\n   }\n   else \n   {\n       return p[k].toString()\n   }\n  }\nconst style = \n{\n  textAlign : 'right',\n  padding: 40\n}\nexport default function table()\n{\n    const  data = [\n        {country : \"China\", daily : 5731456, start_date : new Date(2020,1,14),end_date : new Date(2020,2,20),Total_Saved : 0},\n        {country : \"India\", daily : 1823594, start_date : new Date(2020,2,22),end_date : new Date(),Total_Saved : 0},\n        {country : \"USA\", daily : 12898866, start_date : new Date(2020,2,28),end_date : new Date(),Total_Saved : 0},\n        {country : \"Japan\", daily : 5731456, start_date : new Date(2020,1,14),end_date : new Date(),Total_Saved : 0},\n        {country : \"Italy\", daily : 309127, start_date : new Date(2020,2,9),end_date : new Date(),Total_Saved : 0},\n        {country : \"spain\", daily : 239046, start_date : new Date(2020,2,14),end_date : new Date(),Total_Saved : 0},\n        {country : \"france\", daily : 333728, start_date : new Date(2020,2,17),end_date : new Date(),Total_Saved : 0},\n        {country : \"germany\", daily : 428368, start_date : new Date(2020,2,22),end_date : new Date(),Total_Saved : 0},\n        {country : \"UK\", daily : 340751, start_date : new Date(2020,2,23),end_date : new Date(),Total_Saved : 0},\n        {country : \"Belgium\", daily : 829571, start_date : new Date(2020,1,14),end_date : new Date(),Total_Saved : 0}\n      \n      ]\n\n   return (\n   <Table\n    cards={true}\n    striped={true}\n    responsive={true}\n    className=\"table-vcenter\"\n  >\n  \n    <Table.Header>\n      <Table.Row>\n        <Table.ColHeader colSpan={1}>Country</Table.ColHeader>\n        <Table.ColHeader>Daily Saving MT of CO2</Table.ColHeader>\n        <Table.ColHeader>Date of Lockdown</Table.ColHeader>\n        <Table.ColHeader>Days Since Lockdown</Table.ColHeader>\n        <Table.ColHeader>Total CO2 saved </Table.ColHeader>\n        <Table.ColHeader />\n      </Table.Row>\n    </Table.Header>\n    <Table.Body>\n      {data.map(p =>\n       <Table.Row key={p.country}>\n           {Object.keys(p).filter(k => k !== '').map(k => {\n               return (\n                   <Table.Col  key={p.country+''+k}>\n                       <div suppressContentEditableWarning=\"true\" contentEditable=\"true\" value={k}  style = {style}>{/*onInput={this.editColumn.bind(this,{p},{k})}*/}\n                           {value(p,k)}</div>\n                       \n                   </Table.Col>\n               );\n           })}\n       </Table.Row>\n       )\n        }\n    </Table.Body>\n    </Table>\n   );\n}"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
