{"ast":null,"code":"var _jsxFileName = \"/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/src/HomePage.react.js\";\nimport * as React from \"react\";\nimport ReactSimpleMap from \"./ReactSimpleMap\";\nimport table from \"./table\";\nimport logo from \"./Picture5.png\";\nimport Header from \"./Header/Header.react\";\nimport { Page, Avatar, Icon, Grid, Card, Text, Table, Alert, Progress, colors, Dropdown, Button, StampCard, StatsCard, ProgressCard, Badge, TabbedCard, PricingCard } from \"tabler-react\";\nimport C3Chart from \"react-c3js\"; //import DownloadLink from \"react-download-link\";\n//import c3 from \"react-c3js\";\n\nimport SiteWrapper from \"./SiteWrapper.react\";\nimport { list } from \"postcss\";\nimport reactC3js from \"react-c3js\"; //import CardFooter from \"../../src/components/Card/CardFooter.react\";\n//import CardBody from \"../../src/components/Card/CardBody.react\";\n\nvar today = new Date();\nvar arr = [\"data2\"];\nvar v = [\"data1\"];\nvar daily_saving = 0;\nvar i = 0;\n\nfunction getDates() {\n  d = new Date();\n  return d.getDate() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getFullYear();\n} //console.log(new Date(2020,0,20))\n\n\nfor (var d = new Date(2020, 0, 14); d <= today; d.setDate(d.getDate() + 1)) {\n  arr.push(d);\n  v.push(i); //console.log(d)\n  //console.log(d.getTime() == new Date(2020,0,20).getTime())\n\n  if (d.getTime() == new Date(2020, 0, 20).getTime()) {\n    //china\n    daily_saving += 5731496 * 0.85; //console.log(\"in side china\")\n  }\n\n  if (d.getTime() == new Date(2020, 2, 9).getTime()) {\n    // Italy\n    daily_saving += 309127;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 14).getTime()) {\n    //spain\n    daily_saving += 239046;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 17).getTime()) {\n    //france\n    daily_saving += 333728;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //germany\n    daily_saving += 428368;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 23).getTime()) {\n    //UK\n    daily_saving += 340751;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 18).getTime()) {\n    //belgium\n    daily_saving += 59255;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //india\n    daily_saving += 1823594 * 0.85;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 28).getTime()) {\n    //USA\n    //console.log(\"USA joins\")\n    daily_saving += 12898866 * 0.40;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 20).getTime()) {\n    //china leaves\n    //console.log(\"china leaves\")\n    daily_saving -= 5731496 * 0.85;\n    daily_saving += 5731496 * 0.40;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //rest of europe \n    daily_saving += 993706;\n  }\n\n  if (d.getTime() == new Date(2020, 2, 20).getTime()) {\n    //Japan\n    daily_saving += 981746 * 0.4;\n  }\n\n  i = i + daily_saving;\n}\n\nv.push(i);\n{\n  /*\n  renderTableData() {\n  return data.map((student, index) => {\n     const { country, daily, start_date, end_date} = cpuntry //destructuring\n     return (\n        <tr>\n           <td>{country}</td>\n           <td>{daily}</td>\n           <td>{start_date}</td>\n           <td>{end_date}</td>\n           <td>{(end_date-start_date)*daily}</td>\n        </tr>\n     )\n  })\n  }\n  */\n}\nvar estimation = 33990000000;\nvar style = {\n  position: \"absolute\",\n  top: 0,\n  // computed based on child and parent's height\n  right: 40,\n  fontSize: 28,\n  textAlign: \"center\",\n  fontWeight: \"bold\",\n  fontstyle: \"italic\",\n  color: \"rgb(50,0,133)\"\n};\nvar style1 = {\n  fontSize: 25,\n  textAlign: \"centre\",\n  fontWeight: \"bold\",\n  color: \"rgb(50,0,133)\",\n  backgroundColor: 'rgba(0,0,0,0)'\n};\n\nfunction Home() {\n  return React.createElement(SiteWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Page.Content, {\n    title: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    cards: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Grid.Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"header-brand\",\n    href: \"http://www.dexlerenergy.com/\",\n    style: style1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"header-brand-img\",\n    src: logo,\n    width: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }))), React.createElement(Grid.Col, {\n    width: 1,\n    sm: 1,\n    lg: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \" \", React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  })), React.createElement(Grid.Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"http://www.dexlerenergy.com/\",\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Visit Us\"))), React.createElement(Grid.Row, {\n    card: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(Grid.Col, {\n    width: 12,\n    sm: 12,\n    lg: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: style1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Carbon Emission Savings during COVID-19\"))), React.createElement(Grid.Row, {\n    cards: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(Grid.Col, {\n    width: 6,\n    sm: 6,\n    lg: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(Card.Status, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"CO2 Emissions Saved\")), React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(Header.H1, {\n    className: \"mb-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, v[v.length - 1].toLocaleString(navigator.language, {\n    minimumFractionDigits: 0\n  }) + \" MT\")))), React.createElement(Grid.Col, {\n    width: 6,\n    sm: 6,\n    lg: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(Card.Status, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }), React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Estimated CO2 emission for the year 2020\")), React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(Header.H1, {\n    className: \"mb-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, estimation.toLocaleString(navigator.language, {\n    minimumFractionDigits: 0\n  }) + \" MT\")))), React.createElement(Grid.Col, {\n    width: 6,\n    sm: 6,\n    lg: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(Card.Status, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }), React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"Data Updated On\")), React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(Header.H1, {\n    className: \"mb-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, getDates())))), React.createElement(Grid.Col, {\n    width: 6,\n    sm: 6,\n    lg: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(Card.Status, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }), React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"Percentage of Total Estimate Saved\")), React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(Header.H1, {\n    className: \"mb-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, (v[v.length - 1] * 100 / estimation).toFixed(2) + \" %\"))))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(Grid.Col, {\n    lg: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(Card, {\n    title: \"CO2 Emission Savings\",\n    body: React.createElement(ReactSimpleMap, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(Grid.Col, {\n    lg: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, \"Development Activity\")), React.createElement(C3Chart, {\n    style: {\n      height: \"10rem\"\n    },\n    data: {\n      columns: [v],\n      type: \"area\",\n      // default type of chart\n      groups: [[\"data1\", \"data2\", \"data3\"]],\n      colors: {\n        data1: colors[\"green\"]\n      },\n      names: {\n        // name of each serie\n        data1: \"CO2 savings\"\n      },\n      axes: {\n        data1: \"y2\",\n        data2: \"x1\"\n      }\n    },\n    axis: {\n      y: {\n        show: true\n      },\n      x: {\n        tick: {\n          format: \"%d/%m\"\n        },\n        padding: {\n          left: 0,\n          right: 0\n        },\n        show: true\n      }\n    },\n    legend: {\n      position: \"inset\",\n      padding: 0,\n      inset: {\n        anchor: \"top-left\",\n        x: 20,\n        y: 8,\n        step: 10\n      }\n    },\n    tooltip: {\n      format: {\n        title: function title(x) {\n          return \"\";\n        }\n      }\n    },\n    padding: {\n      bottom: 0,\n      left: -1,\n      right: -1\n    },\n    point: {\n      show: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }), table())))));\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/pranavagarwal/Downloads/dashboard-react/tabler-react/example/src/HomePage.react.js"],"names":["React","ReactSimpleMap","table","logo","Header","Page","Avatar","Icon","Grid","Card","Text","Table","Alert","Progress","colors","Dropdown","Button","StampCard","StatsCard","ProgressCard","Badge","TabbedCard","PricingCard","C3Chart","SiteWrapper","list","reactC3js","today","Date","arr","v","daily_saving","i","getDates","d","getDate","getMonth","getFullYear","setDate","push","getTime","estimation","style","position","top","right","fontSize","textAlign","fontWeight","fontstyle","color","style1","backgroundColor","Home","length","toLocaleString","navigator","language","minimumFractionDigits","toFixed","height","columns","type","groups","data1","names","axes","data2","y","show","x","tick","format","padding","left","inset","anchor","step","title","bottom"],"mappings":";AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAGA,SACEC,IADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,IAJF,EAKEC,IALF,EAMEC,IANF,EAOEC,KAPF,EAQEC,KARF,EASEC,QATF,EAUEC,MAVF,EAWEC,QAXF,EAYEC,MAZF,EAaEC,SAbF,EAcEC,SAdF,EAeEC,YAfF,EAgBEC,KAhBF,EAiBEC,UAjBF,EAkBEC,WAlBF,QAmBO,cAnBP;AAqBA,OAAOC,OAAP,MAAoB,YAApB,C,CACA;AACA;;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;;AAEA,IAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,IAAIC,GAAG,GAAG,CAAC,OAAD,CAAV;AACA,IAAIC,CAAC,GAAG,CAAC,OAAD,CAAR;AACA,IAAIC,YAAY,GAAG,CAAnB;AACA,IAAIC,CAAC,GAAG,CAAR;;AAEA,SAASC,QAAT,GACA;AACEC,EAAAA,CAAC,GAAG,IAAIN,IAAJ,EAAJ;AACA,SAAOM,CAAC,CAACC,OAAF,KAAY,GAAZ,IAAiBD,CAAC,CAACE,QAAF,KAAa,CAA9B,IAAiC,GAAjC,GAAqCF,CAAC,CAACG,WAAF,EAA5C;AACD,C,CACD;;;AACA,KAAK,IAAIH,CAAC,GAAG,IAAIN,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAb,EAAoCM,CAAC,IAAIP,KAAzC,EAAgDO,CAAC,CAACI,OAAF,CAAUJ,CAAC,CAACC,OAAF,KAAc,CAAxB,CAAhD,EAA4E;AAC1EN,EAAAA,GAAG,CAACU,IAAJ,CAASL,CAAT;AACAJ,EAAAA,CAAC,CAACS,IAAF,CAAOP,CAAP,EAF0E,CAG1E;AACA;;AAEA,MAAIE,CAAC,CAACM,OAAF,MAAe,IAAIZ,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsBY,OAAtB,EAAnB,EAAoD;AAClD;AACAT,IAAAA,YAAY,IAAI,UAAQ,IAAxB,CAFkD,CAGlD;AACD;;AACD,MAAIG,CAAC,CAACM,OAAF,MAAe,IAAIZ,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqBY,OAArB,EAAnB,EAAmD;AACjD;AACAT,IAAAA,YAAY,IAAI,MAAhB;AACD;;AACD,MAAIG,CAAC,CAACM,OAAF,MAAe,IAAIZ,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsBY,OAAtB,EAAnB,EAAoD;AAClD;AACAT,IAAAA,YAAY,IAAI,MAAhB;AACD;;AACD,MAAIG,CAAC,CAACM,OAAF,MAAe,IAAIZ,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsBY,OAAtB,EAAnB,EAAoD;AAClD;AACAT,IAAAA,YAAY,IAAI,MAAhB;AACD;;AACD,MAAIG,CAAC,CAACM,OAAF,MAAe,IAAIZ,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsBY,OAAtB,EAAnB,EAAoD;AAClD;AACAT,IAAAA,YAAY,IAAI,MAAhB;AACD;;AACD,MAAIG,CAAC,CAACM,OAAF,MAAe,IAAIZ,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsBY,OAAtB,EAAnB,EAAoD;AAClD;AACAT,IAAAA,YAAY,IAAI,MAAhB;AACD;;AACD,MAAIG,CAAC,CAACM,OAAF,MAAe,IAAIZ,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsBY,OAAtB,EAAnB,EAAoD;AAClD;AACAT,IAAAA,YAAY,IAAI,KAAhB;AACD;;AACD,MAAIG,CAAC,CAACM,OAAF,MAAe,IAAIZ,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsBY,OAAtB,EAAnB,EAAoD;AAClD;AACAT,IAAAA,YAAY,IAAI,UAAQ,IAAxB;AACD;;AACD,MAAIG,CAAC,CAACM,OAAF,MAAe,IAAIZ,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsBY,OAAtB,EAAnB,EAAoD;AAClD;AACA;AACAT,IAAAA,YAAY,IAAI,WAAS,IAAzB;AACD;;AACD,MAAIG,CAAC,CAACM,OAAF,MAAe,IAAIZ,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsBY,OAAtB,EAAnB,EAAoD;AAClD;AACA;AACAT,IAAAA,YAAY,IAAI,UAAQ,IAAxB;AACAA,IAAAA,YAAY,IAAI,UAAQ,IAAxB;AACD;;AACD,MAAIG,CAAC,CAACM,OAAF,MAAe,IAAIZ,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,EAAhB,EAAoBY,OAApB,EAAnB,EACA;AAAC;AACCT,IAAAA,YAAY,IAAI,MAAhB;AAED;;AACD,MAAIG,CAAC,CAACM,OAAF,MAAe,IAAIZ,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,EAAhB,EAAoBY,OAApB,EAAnB,EACA;AAAC;AACCT,IAAAA,YAAY,IAAI,SAAO,GAAvB;AAED;;AAEDC,EAAAA,CAAC,GAAGA,CAAC,GAAGD,YAAR;AACD;;AACDD,CAAC,CAACS,IAAF,CAAOP,CAAP;AACA;AACE;;;;;;;;;;;;;;;;AAgBD;AACD,IAAIS,UAAU,GAAG,WAAjB;AACA,IAAMC,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAE,UADE;AAEZC,EAAAA,GAAG,EAAE,CAFO;AAEJ;AACRC,EAAAA,KAAK,EAAE,EAHK;AAIZC,EAAAA,QAAQ,EAAE,EAJE;AAKZC,EAAAA,SAAS,EAAE,QALC;AAMZC,EAAAA,UAAU,EAAE,MANA;AAOZC,EAAAA,SAAS,EAAE,QAPC;AAQZC,EAAAA,KAAK,EAAG;AARI,CAAd;AAUA,IAAMC,MAAM,GAAG;AACbL,EAAAA,QAAQ,EAAE,EADG;AAEbC,EAAAA,SAAS,EAAE,QAFE;AAGbC,EAAAA,UAAU,EAAE,MAHC;AAIbE,EAAAA,KAAK,EAAE,eAJM;AAKbE,EAAAA,eAAe,EAAG;AALL,CAAf;;AAOA,SAASC,IAAT,GAAgB;AACd,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,EAAC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,KAAK,EAAI,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAG,IAAA,SAAS,EAAG,cAAf;AAA8B,IAAA,IAAI,EAAC,8BAAnC;AAAkE,IAAA,KAAK,EAAEF,MAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAG,kBAAjB;AAAoC,IAAA,GAAG,EAAIhD,IAA3C;AAAiD,IAAA,KAAK,EAAI,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAFF,CADA,EAOE,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,KAAK,EAAI,CAAnB;AAAsB,IAAA,EAAE,EAAI,CAA5B;AAA+B,IAAA,EAAE,EAAI,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAyC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzC,CAPF,EAQA,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAG,IAAA,IAAI,EAAC,8BAAR;AAAuC,IAAA,KAAK,EAAEuC,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,CARA,CAFF,EAiBE,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,IAAI,EAAI,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,KAAK,EAAI,EAAnB;AAAuB,IAAA,EAAE,EAAI,EAA7B;AAAiC,IAAA,EAAE,EAAI,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,KAAK,EAAIS,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,CADA,CAjBF,EAsBE,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,KAAK,EAAE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAoB,IAAA,EAAE,EAAE,CAAxB;AAA2B,IAAA,EAAE,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEM,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CAFN,EAKM,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,EAAR;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BrB,CAAC,CAACA,CAAC,CAACwB,MAAF,GAAW,CAAZ,CAAH,CAAoBC,cAApB,CAAmCC,SAAS,CAACC,QAA7C,EAAsD;AAAEC,IAAAA,qBAAqB,EAAE;AAAzB,GAAtD,IAAsF,KAAnH,CADF,CALN,CADA,CADA,EAYE,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAoB,IAAA,EAAE,EAAE,CAAxB;AAA2B,IAAA,EAAE,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF,CAFJ,EAKI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,EAAR;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BjB,UAAU,CAACc,cAAX,CAA0BC,SAAS,CAACC,QAApC,EAA6C;AAAEC,IAAAA,qBAAqB,EAAE;AAAzB,GAA7C,IAA2E,KAAxG,CADF,CALJ,CADA,CAZF,EAuBE,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAoB,IAAA,EAAE,EAAE,CAAxB;AAA2B,IAAA,EAAE,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,EAEF,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAFE,EAKF,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD,CAAQ,EAAR;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BzB,QAAQ,EAArC,CADA,CALE,CADA,CAvBF,EAoCE,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAoB,IAAA,EAAE,EAAE,CAAxB;AAA2B,IAAA,EAAE,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,CAFJ,EAKI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,EAAR;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B,CAACH,CAAC,CAACA,CAAC,CAACwB,MAAF,GAAW,CAAZ,CAAD,GAAgB,GAAhB,GAAoBb,UAArB,EAAiCkB,OAAjC,CAAyC,CAAzC,IAA8C,IAA3E,CADF,CALJ,CADA,CApCF,CAtBF,EA0EI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,EAAE,EAAE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,sBAAZ;AAAmC,IAAA,IAAI,EAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHJ,CA1EJ,EAiFI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,EAAE,EAAE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF,EAIE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KADT;AAEE,IAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,CAAC/B,CAAD,CADL;AAEJgC,MAAAA,IAAI,EAAE,MAFF;AAEU;AACdC,MAAAA,MAAM,EAAE,CAAC,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAAD,CAHJ;AAIJjD,MAAAA,MAAM,EAAE;AACNkD,QAAAA,KAAK,EAAElD,MAAM,CAAC,OAAD;AADP,OAJJ;AAOJmD,MAAAA,KAAK,EAAE;AACL;AACAD,QAAAA,KAAK,EAAE;AAFF,OAPH;AAWJE,MAAAA,IAAI,EAAE;AAAEF,QAAAA,KAAK,EAAE,IAAT;AAAeG,QAAAA,KAAK,EAAE;AAAtB;AAXF,KAFR;AAeE,IAAA,IAAI,EAAE;AACJC,MAAAA,CAAC,EAAE;AACDC,QAAAA,IAAI,EAAE;AADL,OADC;AAIJC,MAAAA,CAAC,EAAE;AACDC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SADL;AAEDC,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE,CADC;AAEP7B,UAAAA,KAAK,EAAE;AAFA,SAFR;AAMDwB,QAAAA,IAAI,EAAE;AANL;AAJC,KAfR;AA4BE,IAAA,MAAM,EAAE;AACN1B,MAAAA,QAAQ,EAAE,OADJ;AAEN8B,MAAAA,OAAO,EAAE,CAFH;AAGNE,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,UADH;AAELN,QAAAA,CAAC,EAAE,EAFE;AAGLF,QAAAA,CAAC,EAAE,CAHE;AAILS,QAAAA,IAAI,EAAE;AAJD;AAHD,KA5BV;AAsCE,IAAA,OAAO,EAAE;AACPL,MAAAA,MAAM,EAAE;AACNM,QAAAA,KAAK,EAAE,eAASR,CAAT,EAAY;AACjB,iBAAO,EAAP;AACD;AAHK;AADD,KAtCX;AA6CE,IAAA,OAAO,EAAE;AACPS,MAAAA,MAAM,EAAE,CADD;AAEPL,MAAAA,IAAI,EAAE,CAAC,CAFA;AAGP7B,MAAAA,KAAK,EAAE,CAAC;AAHD,KA7CX;AAkDE,IAAA,KAAK,EAAE;AACLwB,MAAAA,IAAI,EAAE;AADD,KAlDT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EA2DGnE,KAAK,EA3DR,CADF,CADA,CAjFJ,CADA,CADF;AAw0BD;;AAED,eAAemD,IAAf","sourcesContent":["// @flow\n\nimport * as React from \"react\";\nimport ReactSimpleMap from \"./ReactSimpleMap\";\nimport table from \"./table\";\nimport logo from \"./Picture5.png\";\nimport Header from \"./Header/Header.react\";\n\n\nimport {\n  Page,\n  Avatar,\n  Icon,\n  Grid,\n  Card,\n  Text,\n  Table,\n  Alert,\n  Progress,\n  colors,\n  Dropdown,\n  Button,\n  StampCard,\n  StatsCard,\n  ProgressCard,\n  Badge,\n  TabbedCard,\n  PricingCard\n} from \"tabler-react\";\n\nimport C3Chart from \"react-c3js\";\n//import DownloadLink from \"react-download-link\";\n//import c3 from \"react-c3js\";\nimport SiteWrapper from \"./SiteWrapper.react\";\nimport { list } from \"postcss\";\nimport reactC3js from \"react-c3js\";\n\n//import CardFooter from \"../../src/components/Card/CardFooter.react\";\n//import CardBody from \"../../src/components/Card/CardBody.react\";\n\nvar today = new Date();\nvar arr = [\"data2\"];\nvar v = [\"data1\"];\nvar daily_saving = 0;\nvar i = 0;\n\nfunction getDates()\n{\n  d = new Date();\n  return d.getDate()+\"/\"+(d.getMonth()+1)+\"/\"+d.getFullYear();\n}\n//console.log(new Date(2020,0,20))\nfor (var d = new Date(2020, 0, 14); d <= today; d.setDate(d.getDate() + 1)) {\n  arr.push(d);\n  v.push(i);\n  //console.log(d)\n  //console.log(d.getTime() == new Date(2020,0,20).getTime())\n\n  if (d.getTime() == new Date(2020, 0, 20).getTime()) {\n    //china\n    daily_saving += 5731496*0.85;\n    //console.log(\"in side china\")\n  }\n  if (d.getTime() == new Date(2020, 2, 9).getTime()) {\n    // Italy\n    daily_saving += 309127;\n  }\n  if (d.getTime() == new Date(2020, 2, 14).getTime()) {\n    //spain\n    daily_saving += 239046;\n  }\n  if (d.getTime() == new Date(2020, 2, 17).getTime()) {\n    //france\n    daily_saving += 333728;\n  }\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //germany\n    daily_saving += 428368;\n  }\n  if (d.getTime() == new Date(2020, 2, 23).getTime()) {\n    //UK\n    daily_saving += 340751;\n  }\n  if (d.getTime() == new Date(2020, 2, 18).getTime()) {\n    //belgium\n    daily_saving += 59255;\n  }\n  if (d.getTime() == new Date(2020, 2, 22).getTime()) {\n    //india\n    daily_saving += 1823594*0.85;\n  }\n  if (d.getTime() == new Date(2020, 2, 28).getTime()) {\n    //USA\n    //console.log(\"USA joins\")\n    daily_saving += 12898866*0.40;\n  }\n  if (d.getTime() == new Date(2020, 2, 20).getTime()) {\n    //china leaves\n    //console.log(\"china leaves\")\n    daily_saving -= 5731496*0.85;\n    daily_saving += 5731496*0.40;\n  }\n  if (d.getTime() == new Date(2020,2,22).getTime())\n  {//rest of europe \n    daily_saving += 993706;\n\n  }\n  if (d.getTime() == new Date(2020,2,20).getTime())\n  {//Japan\n    daily_saving += 981746*0.4;\n\n  }\n  \n  i = i + daily_saving;\n}\nv.push(i)\n{\n  /*\nrenderTableData() {\n  return data.map((student, index) => {\n     const { country, daily, start_date, end_date} = cpuntry //destructuring\n     return (\n        <tr>\n           <td>{country}</td>\n           <td>{daily}</td>\n           <td>{start_date}</td>\n           <td>{end_date}</td>\n           <td>{(end_date-start_date)*daily}</td>\n        </tr>\n     )\n  })\n}\n*/\n}\nvar estimation = 33990000000;\nconst style = {\n  position: \"absolute\",\n  top: 0, // computed based on child and parent's height\n  right: 40,\n  fontSize: 28,\n  textAlign: \"center\",\n  fontWeight: \"bold\",\n  fontstyle: \"italic\",\n  color : \"rgb(50,0,133)\"\n};\nconst style1 = {\n  fontSize: 25,\n  textAlign: \"centre\",\n  fontWeight: \"bold\",\n  color: \"rgb(50,0,133)\",\n  backgroundColor : 'rgba(0,0,0,0)'\n};\nfunction Home() {\n  return (\n    <SiteWrapper>\n    <Page.Content title=\"\">\n\n      <Grid.Row cards = {true}>\n      <Grid.Col>\n        \n        <a className = \"header-brand\" href=\"http://www.dexlerenergy.com/\" style={style1} >\n        <img className = \"header-brand-img\" src = {logo} width = {5}/>\n        </a>\n        </Grid.Col>\n        <Grid.Col width = {1} sm = {1} lg = {1}> <Card></Card></Grid.Col>     \n      <Grid.Col>\n      <a href=\"http://www.dexlerenergy.com/\" style={style}>\n        Visit Us\n      </a>\n      </Grid.Col>\n      </Grid.Row>\n\n      <Grid.Row card = {true}>\n      <Grid.Col width = {12} sm = {12} lg = {12}>\n        <p style = {style1}>Carbon Emission Savings during COVID-19</p>\n      </Grid.Col>\n      </Grid.Row>\n      <Grid.Row cards={true}>\n      <Grid.Col width={6} sm={6} lg={6}>\n      <Card>\n          <Card.Status />\n            <Card.Header>\n              <Card.Title>CO2 Emissions Saved</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Header.H1 className=\"mb-1\">{((v[v.length - 1])).toLocaleString(navigator.language,{ minimumFractionDigits: 0 }) + \" MT\"}</Header.H1>\n            </Card.Body>\n        </Card>\n        </Grid.Col>\n        <Grid.Col width={6} sm={6} lg={6}>\n        <Card>\n          <Card.Status />\n            <Card.Header>\n              <Card.Title>Estimated CO2 emission for the year 2020</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Header.H1 className=\"mb-1\">{estimation.toLocaleString(navigator.language,{ minimumFractionDigits: 0 })+\" MT\"}</Header.H1>\n            </Card.Body>\n        </Card>\n        </Grid.Col>\n        <Grid.Col width={6} sm={6} lg={6}>\n        <Card>\n      <Card.Status />\n      <Card.Header>\n        <Card.Title>Data Updated On</Card.Title>\n      </Card.Header>\n      <Card.Body>\n      <Header.H1 className=\"mb-1\">{getDates()}</Header.H1>\n      </Card.Body>\n    </Card>\n\n        </Grid.Col>\n        \n        <Grid.Col width={6} sm={6} lg={6}>\n        <Card>\n          <Card.Status />\n            <Card.Header>\n              <Card.Title>Percentage of Total Estimate Saved</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Header.H1 className=\"mb-1\">{(v[v.length - 1]*100/estimation).toFixed(2) + \" %\"}</Header.H1>\n            </Card.Body>\n        </Card>\n          \n        </Grid.Col>\n        {/*<Grid.Col width={6} sm={4} lg={2}>\n            <StatsCard layout={1} movement={-1} total=\"621\" label=\"Products\" />\n  </Grid.Col>*/}\n        </Grid.Row>\n        <Grid.Row>\n            \n\n            <Grid.Col lg={12}>\n              <Card title=\"CO2 Emission Savings\" body={<ReactSimpleMap />} />\n            </Grid.Col>\n          </Grid.Row>\n        <Grid.Row>\n        <Grid.Col lg={12}>\n          <Card>\n            <Card.Header>\n              <Card.Title>Development Activity</Card.Title>\n            </Card.Header>\n            <C3Chart\n              style={{ height: \"10rem\" }}\n              data={{\n                columns: [v],\n                type: \"area\", // default type of chart\n                groups: [[\"data1\", \"data2\", \"data3\"]],\n                colors: {\n                  data1: colors[\"green\"],\n                },\n                names: {\n                  // name of each serie\n                  data1: \"CO2 savings\",\n                },\n                axes: { data1: \"y2\", data2: \"x1\" },\n              }}\n              axis={{\n                y: {\n                  show: true,\n                },\n                x: {\n                  tick: { format: \"%d/%m\" },\n                  padding: {\n                    left: 0,\n                    right: 0,\n                  },\n                  show: true,\n                },\n              }}\n              legend={{\n                position: \"inset\",\n                padding: 0,\n                inset: {\n                  anchor: \"top-left\",\n                  x: 20,\n                  y: 8,\n                  step: 10,\n                },\n              }}\n              tooltip={{\n                format: {\n                  title: function(x) {\n                    return \"\";\n                  },\n                },\n              }}\n              padding={{\n                bottom: 0,\n                left: -1,\n                right: -1,\n              }}\n              point={{\n                show: false,\n              }}\n            />\n\n            {table()}\n            </Card>\n        </Grid.Col>\n\n        {/*\n          <Grid.Col md={6}>\n          \n            <Alert type=\"primary\">\n              <Alert.Link\n                href={\n                  process.env.NODE_ENV === \"production\"\n                    ? \"https://tabler.github.io/tabler-react/documentation\"\n                    : \"/documentation\"\n                }\n              >\n                Read our documentation\n              </Alert.Link>{\" \"}\n              with code samples.\n              </Alert>*/}\n        {/*<Grid.Row>\n              <Grid.Col sm={6}>\n                <Card>\n                  <Card.Header>\n                    <Card.Title>Chart title</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                    <C3Chart\n                      style={{ height: \"12rem\" }}\n                      data={{\n                        columns: [\n                          // each columns data\n                          [\"data1\", 63],\n                          [\"data2\", 37],\n                        ],\n                        type: \"donut\", // default type of chart\n                        colors: {\n                          data1: colors[\"green\"],\n                          data2: colors[\"green-light\"],\n                        },\n                        names: {\n                          // name of each serie\n                          data1: \"Maximum\",\n                          data2: \"Minimum\",\n                        },\n                      }}\n                      legend={{\n                        show: false, //hide legend\n                      }}\n                      padding={{\n                        bottom: 0,\n                        top: 0,\n                      }}\n                    />\n                  </Card.Body>\n                </Card>\n              </Grid.Col>\n              <Grid.Col sm={6}>\n                <Card>\n                  <Card.Header>\n                    <Card.Title>Chart title</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                    <C3Chart\n                      style={{ height: \"12rem\" }}\n                      data={{\n                        columns: [\n                          // each columns data\n                          [\"data1\", 63],\n                          [\"data2\", 44],\n                          [\"data3\", 12],\n                          [\"data4\", 14],\n                        ],\n                        type: \"pie\", // default type of chart\n                        colors: {\n                          data1: colors[\"blue-darker\"],\n                          data2: colors[\"blue\"],\n                          data3: colors[\"blue-light\"],\n                          data4: colors[\"blue-lighter\"],\n                        },\n                        names: {\n                          // name of each serie\n                          data1: \"A\",\n                          data2: \"B\",\n                          data3: \"C\",\n                          data4: \"D\",\n                        },\n                      }}\n                      legend={{\n                        show: false, //hide legend\n                      }}\n                      padding={{\n                        bottom: 0,\n                        top: 0,\n                      }}\n                    />\n                  </Card.Body>\n                </Card>\n              </Grid.Col>\n              <Grid.Col sm={6}>\n                <ProgressCard\n                  header=\"New feedback\"\n                  content=\"62\"\n                  progressColor=\"red\"\n                  progressWidth={28}\n                />\n              </Grid.Col>\n              <Grid.Col sm={6}>\n                <ProgressCard\n                  header=\"Today profit\"\n                  content=\"$652\"\n                  progressColor=\"green\"\n                  progressWidth={84}\n                />\n              </Grid.Col>\n              <Grid.Col sm={6}>\n                <ProgressCard\n                  header=\"Users online\"\n                  content=\"76\"\n                  progressColor=\"yellow\"\n                  progressWidth={34}\n                />\n              </Grid.Col>\n                    </Grid.Row> \n          </Grid.Col>\n          \n          <Grid.Col sm={6} lg={3}>\n            <StampCard\n              color=\"blue\"\n              icon=\"dollar-sign\"\n              header={\n                <a href=\"#\">\n                  132 <small>Sales</small>\n                </a>\n              }\n              footer={\"12 waiting payments\"}\n            />\n            </Grid.Col>\n          <Grid.Col sm={6} lg={3}>\n            <StampCard\n              color=\"green\"\n              icon=\"shopping-cart\"\n              header={\n                <a href=\"#\">\n                  78 <small>Orders</small>\n                </a>\n              }\n              footer={\"32 shipped\"}\n            />\n            </Grid.Col>\n          <Grid.Col sm={6} lg={3}>\n            <StampCard\n              color=\"red\"\n              icon=\"users\"\n              header={\n                <a href=\"#\">\n                  1,352 <small>Members</small>\n                </a>\n              }\n              footer={\"163 registered today\"}\n            />\n            </Grid.Col>\n          <Grid.Col sm={6} lg={3}>\n            <StampCard\n              color=\"yellow\"\n              icon=\"message-square\"\n              header={\n                <a href=\"#\">\n                  132 <small>Comments</small>\n                </a>\n              }\n              footer={\"16 waiting\"}\n            />\n            </Grid.Col>*/}\n      </Grid.Row>\n      {/*\n        <Grid.Row cards deck>\n          <Grid.Col width={12}>\n            <Card>\n              <Table\n                responsive\n                highlightRowOnHover\n                hasOutline\n                verticalAlign=\"center\"\n                cards\n                className=\"text-nowrap\"\n              >\n                <Table.Header>\n                  <Table.Row>\n                    <Table.ColHeader alignContent=\"center\" className=\"w-1\">\n                      <i className=\"icon-people\" />\n                    </Table.ColHeader>\n                    <Table.ColHeader>User</Table.ColHeader>\n                    <Table.ColHeader>Usage</Table.ColHeader>\n                    <Table.ColHeader alignContent=\"center\">\n                      Payment\n                    </Table.ColHeader>\n                    <Table.ColHeader>Activity</Table.ColHeader>\n                    <Table.ColHeader alignContent=\"center\">\n                      Satisfaction\n                    </Table.ColHeader>\n                    <Table.ColHeader alignContent=\"center\">\n                      <i className=\"icon-settings\" />\n                    </Table.ColHeader>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  <Table.Row>\n                    <Table.Col alignContent=\"center\">\n                      <Avatar\n                        imageURL=\"demo/faces/female/26.jpg\"\n                        className=\"d-block\"\n                        status=\"green\"\n                      />\n                    </Table.Col>\n                    <Table.Col>\n                      <div>Elizabeth Martin</div>\n                      <Text size=\"sm\" muted>\n                        Registered: Mar 19, 2018\n                      </Text>\n                    </Table.Col>\n                    <Table.Col>\n                      <div className=\"clearfix\">\n                        <div className=\"float-left\">\n                          <strong>42%</strong>\n                        </div>\n                        <div className=\"float-right\">\n                          <Text.Small muted>\n                            Jun 11, 2015 - Jul 10, 2015\n                          </Text.Small>\n                        </div>\n                      </div>\n                      <Progress size=\"xs\">\n                        <Progress.Bar color=\"yellow\" width={42} />\n                      </Progress>\n                    </Table.Col>\n                    <Table.Col alignContent=\"center\">\n                      <Icon payment name=\"visa\" />\n                    </Table.Col>\n                    <Table.Col>\n                      <Text size=\"sm\" muted>\n                        Last login\n                      </Text>\n                      <div>4 minutes ago</div>\n                    </Table.Col>\n                    <Table.Col alignContent=\"center\">42%</Table.Col>\n                    <Table.Col alignContent=\"center\">\n                      <Dropdown\n                        trigger={\n                          <Dropdown.Trigger\n                            icon=\"more-vertical\"\n                            toggle={false}\n                          />\n                        }\n                        position=\"right\"\n                        items={\n                          <React.Fragment>\n                            <Dropdown.Item icon=\"tag\">Action </Dropdown.Item>\n                            <Dropdown.Item icon=\"edit-2\">\n                              Another action{\" \"}\n                            </Dropdown.Item>\n                            <Dropdown.Item icon=\"message-square\">\n                              Something else here\n                            </Dropdown.Item>\n                            <Dropdown.ItemDivider />\n                            <Dropdown.Item icon=\"link\">\n                              {\" \"}\n                              Separated link\n                            </Dropdown.Item>\n                          </React.Fragment>\n                        }\n                      />\n                    </Table.Col>\n                  </Table.Row>\n                </Table.Body>\n              </Table>\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n                      */}\n      {/*\n        <Grid.Row>\n          <Grid.Col sm={6} lg={4}>\n            <Card title=\"Browser Stats\">\n              <Table className=\"card-table\">\n                <Table.Row>\n                  <Table.Col>\n                    <Icon prefix=\"fa\" name=\"chrome\" className=\"text-muted\" />\n                  </Table.Col>\n                  <Table.Col>Google Chrome</Table.Col>\n                  <Table.Col className=\"text-right\">\n                    <Text RootComponent=\"span\" muted>\n                      23%\n                    </Text>\n                  </Table.Col>\n                </Table.Row>\n              </Table>\n            </Card>\n          </Grid.Col>\n          <Grid.Col sm={6} lg={4}>\n            <Card title=\"Projects\">\n              <Table cards>\n                <Table.Row>\n                  <Table.Col>Admin Template</Table.Col>\n                  <Table.Col alignContent=\"right\">\n                    <Badge color=\"default\">65%</Badge>\n                  </Table.Col>\n                </Table.Row>\n              </Table>\n            </Card>\n          </Grid.Col>\n          <Grid.Col md={6} lg={4}>\n            <Card title=\"Members\">\n              <Card.Body>\n                <ul className=\"list-unstyled list-separated\">\n                  <li className=\"list-separated-item\">\n                    <Grid.Row className=\"align-items-center\">\n                      <Grid.Col auto>\n                        <Avatar\n                          size=\"md\"\n                          className=\"d-block\"\n                          imageURL=\"demo/faces/female/12.jpg\"\n                        />\n                      </Grid.Col>\n                      <Grid.Col>\n                        <div>\n                          <a className=\"text-inherit\" href=\"#\">\n                            Amanda Hunt\n                          </a>\n                        </div>\n                        <Text.Small muted className=\"d-block item-except h-1x\">\n                          amanda_hunt@example.com\n                        </Text.Small>\n                      </Grid.Col>\n                      <Grid.Col auto>\n                        <Dropdown\n                          trigger={\n                            <Dropdown.Trigger\n                              icon=\"more-vertical\"\n                              toggle={false}\n                            />\n                          }\n                          position=\"right\"\n                          items={\n                            <React.Fragment>\n                              <Dropdown.Item icon=\"tag\">Action </Dropdown.Item>\n                              <Dropdown.Item icon=\"edit-2\">\n                                {\" \"}\n                                Another action{\" \"}\n                              </Dropdown.Item>\n                              <Dropdown.Item icon=\"message-square\">\n                                {\" \"}\n                                Something else here\n                              </Dropdown.Item>\n                              <Dropdown.ItemDivider />\n                              <Dropdown.Item icon=\"link\">\n                                {\" \"}\n                                Separated link\n                              </Dropdown.Item>\n                            </React.Fragment>\n                          }\n                        />\n                      </Grid.Col>\n                    </Grid.Row>\n                  </li>\n                </ul>\n              </Card.Body>\n            </Card>\n          </Grid.Col>\n          <Grid.Col md={6} lg={12}>\n            <Grid.Row>\n              <Grid.Col sm={6} lg={3}>\n                <StatsCard\n                  layout={2}\n                  movement={5}\n                  total=\"423\"\n                  label=\"Users online\"\n                  chart={\n                    <C3Chart\n                      style={{ height: \"100%\" }}\n                      padding={{\n                        bottom: -10,\n                        left: -1,\n                        right: -1,\n                      }}\n                      data={{\n                        names: {\n                          data1: \"Users online\",\n                        },\n                        columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\n                        type: \"area\",\n                      }}\n                      legend={{\n                        show: false,\n                      }}\n                      transition={{\n                        duration: 0,\n                      }}\n                      point={{\n                        show: false,\n                      }}\n                      tooltip={{\n                        format: {\n                          title: function(x) {\n                            return \"\";\n                          },\n                        },\n                      }}\n                      axis={{\n                        y: {\n                          padding: {\n                            bottom: 0,\n                          },\n                          show: false,\n                          tick: {\n                            outer: false,\n                          },\n                        },\n                        x: {\n                          padding: {\n                            left: 0,\n                            right: 0,\n                          },\n                          show: false,\n                        },\n                      }}\n                      color={{\n                        pattern: [\"#467fcf\"],\n                      }}\n                    />\n                  }\n                />\n              </Grid.Col>\n              <Grid.Col sm={6} lg={3}>\n                <StatsCard\n                  layout={2}\n                  movement={-3}\n                  total=\"423\"\n                  label=\"Users online\"\n                  chart={\n                    <C3Chart\n                      style={{ height: \"100%\" }}\n                      padding={{\n                        bottom: -10,\n                        left: -1,\n                        right: -1,\n                      }}\n                      data={{\n                        names: {\n                          data1: \"Users online\",\n                        },\n                        columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\n                        type: \"area\",\n                      }}\n                      legend={{\n                        show: false,\n                      }}\n                      transition={{\n                        duration: 0,\n                      }}\n                      point={{\n                        show: false,\n                      }}\n                      tooltip={{\n                        format: {\n                          title: function(x) {\n                            return \"\";\n                          },\n                        },\n                      }}\n                      axis={{\n                        y: {\n                          padding: {\n                            bottom: 0,\n                          },\n                          show: false,\n                          tick: {\n                            outer: false,\n                          },\n                        },\n                        x: {\n                          padding: {\n                            left: 0,\n                            right: 0,\n                          },\n                          show: false,\n                        },\n                      }}\n                      color={{\n                        pattern: [\"#e74c3c\"],\n                      }}\n                    />\n                  }\n                />\n              </Grid.Col>\n              <Grid.Col sm={6} lg={3}>\n                <StatsCard\n                  layout={2}\n                  movement={-3}\n                  total=\"423\"\n                  label=\"Users online\"\n                  chart={\n                    <C3Chart\n                      style={{ height: \"100%\" }}\n                      padding={{\n                        bottom: -10,\n                        left: -1,\n                        right: -1,\n                      }}\n                      data={{\n                        names: {\n                          data1: \"Users online\",\n                        },\n                        columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\n                        type: \"area\",\n                      }}\n                      legend={{\n                        show: false,\n                      }}\n                      transition={{\n                        duration: 0,\n                      }}\n                      point={{\n                        show: false,\n                      }}\n                      tooltip={{\n                        format: {\n                          title: function(x) {\n                            return \"\";\n                          },\n                        },\n                      }}\n                      axis={{\n                        y: {\n                          padding: {\n                            bottom: 0,\n                          },\n                          show: false,\n                          tick: {\n                            outer: false,\n                          },\n                        },\n                        x: {\n                          padding: {\n                            left: 0,\n                            right: 0,\n                          },\n                          show: false,\n                        },\n                      }}\n                      color={{\n                        pattern: [\"#5eba00\"],\n                      }}\n                    />\n                  }\n                />\n              </Grid.Col>\n              <Grid.Col sm={6} lg={3}>\n                <StatsCard\n                  layout={2}\n                  movement={9}\n                  total=\"423\"\n                  label=\"Users online\"\n                  chart={\n                    <C3Chart\n                      style={{ height: \"100%\" }}\n                      padding={{\n                        bottom: -10,\n                        left: -1,\n                        right: -1,\n                      }}\n                      data={{\n                        names: {\n                          data1: \"Users online\",\n                        },\n                        columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\n                        type: \"area\",\n                      }}\n                      legend={{\n                        show: false,\n                      }}\n                      transition={{\n                        duration: 0,\n                      }}\n                      point={{\n                        show: false,\n                      }}\n                      tooltip={{\n                        format: {\n                          title: function(x) {\n                            return \"\";\n                          },\n                        },\n                      }}\n                      axis={{\n                        y: {\n                          padding: {\n                            bottom: 0,\n                          },\n                          show: false,\n                          tick: {\n                            outer: false,\n                          },\n                        },\n                        x: {\n                          padding: {\n                            left: 0,\n                            right: 0,\n                          },\n                          show: false,\n                        },\n                      }}\n                      color={{\n                        pattern: [\"#f1c40f\"],\n                      }}\n                    />\n                  }\n                />\n              </Grid.Col>\n            </Grid.Row>\n          </Grid.Col>\n          <Grid.Col width={12}>\n            <Card title=\"Invoices\">\n              <Table\n                responsive\n                className=\"card-table table-vcenter text-nowrap\"\n                headerItems={[\n                  { content: \"No.\", className: \"w-1\" },\n                  { content: \"Invoice Subject\" },\n                  { content: \"Client\" },\n                  { content: \"VAT No.\" },\n                  { content: \"Created\" },\n                  { content: \"Status\" },\n                  { content: \"Price\" },\n                  { content: null },\n                  { content: null },\n                ]}\n                bodyItems={[\n                  {\n                    key: \"1\",\n                    item: [\n                      {\n                        content: (\n                          <Text RootComponent=\"span\" muted>\n                            001401\n                          </Text>\n                        ),\n                      },\n                      {\n                        content: (\n                          <a href=\"invoice.html\" className=\"text-inherit\">\n                            Design Works\n                          </a>\n                        ),\n                      },\n                      { content: \"Carlson Limited\" },\n                      { content: \"87956621\" },\n                      { content: \"15 Dec 2017\" },\n                      {\n                        content: (\n                          <React.Fragment>\n                            <span className=\"status-icon bg-success\" /> Paid\n                          </React.Fragment>\n                        ),\n                      },\n                      { content: \"$887\" },\n                      {\n                        alignContent: \"right\",\n                        content: (\n                          <React.Fragment>\n                            <Button size=\"sm\" color=\"secondary\">\n                              Manage\n                            </Button>\n                            <div className=\"dropdown\">\n                              <Button\n                                color=\"secondary\"\n                                size=\"sm\"\n                                isDropdownToggle\n                              >\n                                Actions\n                              </Button>\n                            </div>\n                          </React.Fragment>\n                        ),\n                      },\n                      { content: <Icon link name=\"edit\" /> },\n                    ],\n                  },\n                ]}\n              />\n            </Card>\n          </Grid.Col>\n        </Grid.Row>\n              */}\n    </Page.Content>\n  </SiteWrapper>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}